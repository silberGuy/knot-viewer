(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.5.20
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function sp(n){const e=Object.create(null);for(const t of n.split(","))e[t]=1;return t=>t in e}const yt={},Mo=[],ki=()=>{},Pv=()=>!1,$u=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&(n.charCodeAt(2)>122||n.charCodeAt(2)<97),op=n=>n.startsWith("onUpdate:"),dn=Object.assign,ap=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},$b=Object.prototype.hasOwnProperty,Mt=(n,e)=>$b.call(n,e),$e=Array.isArray,ya=n=>hl(n)==="[object Map]",lp=n=>hl(n)==="[object Set]",Am=n=>hl(n)==="[object Date]",st=n=>typeof n=="function",Qt=n=>typeof n=="string",ur=n=>typeof n=="symbol",Ft=n=>n!==null&&typeof n=="object",Lv=n=>(Ft(n)||st(n))&&st(n.then)&&st(n.catch),qb=Object.prototype.toString,hl=n=>qb.call(n),Zb=n=>hl(n).slice(8,-1),Kb=n=>hl(n)==="[object Object]",cp=n=>Qt(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,ba=sp(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),qu=n=>{const e=Object.create(null);return(t=>e[t]||(e[t]=n(t)))},Jb=/-(\w)/g,hr=qu(n=>n.replace(Jb,(e,t)=>t?t.toUpperCase():"")),Qb=/\B([A-Z])/g,zr=qu(n=>n.replace(Qb,"-$1").toLowerCase()),Dv=qu(n=>n.charAt(0).toUpperCase()+n.slice(1)),Zh=qu(n=>n?`on${Dv(n)}`:""),Vn=(n,e)=>!Object.is(n,e),zc=(n,...e)=>{for(let t=0;t<n.length;t++)n[t](...e)},Uv=(n,e,t,i=!1)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,writable:i,value:t})},eM=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let Cm;const Zu=()=>Cm||(Cm=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Ku(n){if($e(n)){const e={};for(let t=0;t<n.length;t++){const i=n[t],r=Qt(i)?rM(i):Ku(i);if(r)for(const s in r)e[s]=r[s]}return e}else if(Qt(n)||Ft(n))return n}const tM=/;(?![^(]*\))/g,nM=/:([^]+)/,iM=/\/\*[^]*?\*\//g;function rM(n){const e={};return n.replace(iM,"").split(tM).forEach(t=>{if(t){const i=t.split(nM);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function fl(n){let e="";if(Qt(n))e=n;else if($e(n))for(let t=0;t<n.length;t++){const i=fl(n[t]);i&&(e+=i+" ")}else if(Ft(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const sM="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",oM=sp(sM);function Nv(n){return!!n||n===""}function aM(n,e){if(n.length!==e.length)return!1;let t=!0;for(let i=0;t&&i<n.length;i++)t=Ju(n[i],e[i]);return t}function Ju(n,e){if(n===e)return!0;let t=Am(n),i=Am(e);if(t||i)return t&&i?n.getTime()===e.getTime():!1;if(t=ur(n),i=ur(e),t||i)return n===e;if(t=$e(n),i=$e(e),t||i)return t&&i?aM(n,e):!1;if(t=Ft(n),i=Ft(e),t||i){if(!t||!i)return!1;const r=Object.keys(n).length,s=Object.keys(e).length;if(r!==s)return!1;for(const o in n){const a=n.hasOwnProperty(o),l=e.hasOwnProperty(o);if(a&&!l||!a&&l||!Ju(n[o],e[o]))return!1}}return String(n)===String(e)}function Ov(n,e){return n.findIndex(t=>Ju(t,e))}/**
* @vue/reactivity v3.5.20
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let _n;class Fv{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=_n,!e&&_n&&(this.index=(_n.scopes||(_n.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=_n;try{return _n=this,e()}finally{_n=t}}}on(){++this._on===1&&(this.prevScope=_n,_n=this)}off(){this._on>0&&--this._on===0&&(_n=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let t,i;for(t=0,i=this.effects.length;t<i;t++)this.effects[t].stop();for(this.effects.length=0,t=0,i=this.cleanups.length;t<i;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,i=this.scopes.length;t<i;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function Bv(n){return new Fv(n)}function dl(){return _n}function Qu(n,e=!1){_n&&_n.cleanups.push(n)}let Pt;const Kh=new WeakSet;class zv{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,_n&&_n.active&&_n.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Kh.has(this)&&(Kh.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||Vv(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Rm(this),Hv(this);const e=Pt,t=bi;Pt=this,bi=!0;try{return this.fn()}finally{Gv(this),Pt=e,bi=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)fp(e);this.deps=this.depsTail=void 0,Rm(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Kh.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){vd(this)&&this.run()}get dirty(){return vd(this)}}let kv=0,Ma,Sa;function Vv(n,e=!1){if(n.flags|=8,e){n.next=Sa,Sa=n;return}n.next=Ma,Ma=n}function up(){kv++}function hp(){if(--kv>0)return;if(Sa){let e=Sa;for(Sa=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let n;for(;Ma;){let e=Ma;for(Ma=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(i){n||(n=i)}e=t}}if(n)throw n}function Hv(n){for(let e=n.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function Gv(n){let e,t=n.depsTail,i=t;for(;i;){const r=i.prevDep;i.version===-1?(i===t&&(t=r),fp(i),lM(i)):e=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=r}n.deps=e,n.depsTail=t}function vd(n){for(let e=n.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(Wv(e.dep.computed)||e.dep.version!==e.version))return!0;return!!n._dirty}function Wv(n){if(n.flags&4&&!(n.flags&16)||(n.flags&=-17,n.globalVersion===Va)||(n.globalVersion=Va,!n.isSSR&&n.flags&128&&(!n.deps&&!n._dirty||!vd(n))))return;n.flags|=2;const e=n.dep,t=Pt,i=bi;Pt=n,bi=!0;try{Hv(n);const r=n.fn(n._value);(e.version===0||Vn(r,n._value))&&(n.flags|=128,n._value=r,e.version++)}catch(r){throw e.version++,r}finally{Pt=t,bi=i,Gv(n),n.flags&=-3}}function fp(n,e=!1){const{dep:t,prevSub:i,nextSub:r}=n;if(i&&(i.nextSub=r,n.prevSub=void 0),r&&(r.prevSub=i,n.nextSub=void 0),t.subs===n&&(t.subs=i,!i&&t.computed)){t.computed.flags&=-5;for(let s=t.computed.deps;s;s=s.nextDep)fp(s,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function lM(n){const{prevDep:e,nextDep:t}=n;e&&(e.nextDep=t,n.prevDep=void 0),t&&(t.prevDep=e,n.nextDep=void 0)}let bi=!0;const Xv=[];function fr(){Xv.push(bi),bi=!1}function dr(){const n=Xv.pop();bi=n===void 0?!0:n}function Rm(n){const{cleanup:e}=n;if(n.cleanup=void 0,e){const t=Pt;Pt=void 0;try{e()}finally{Pt=t}}}let Va=0;class cM{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class eh{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(e){if(!Pt||!bi||Pt===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==Pt)t=this.activeLink=new cM(Pt,this),Pt.deps?(t.prevDep=Pt.depsTail,Pt.depsTail.nextDep=t,Pt.depsTail=t):Pt.deps=Pt.depsTail=t,Yv(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const i=t.nextDep;i.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=i),t.prevDep=Pt.depsTail,t.nextDep=void 0,Pt.depsTail.nextDep=t,Pt.depsTail=t,Pt.deps===t&&(Pt.deps=i)}return t}trigger(e){this.version++,Va++,this.notify(e)}notify(e){up();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{hp()}}}function Yv(n){if(n.dep.sc++,n.sub.flags&4){const e=n.dep.computed;if(e&&!n.dep.subs){e.flags|=20;for(let i=e.deps;i;i=i.nextDep)Yv(i)}const t=n.dep.subs;t!==n&&(n.prevSub=t,t&&(t.nextSub=n)),n.dep.subs=n}}const qc=new WeakMap,ys=Symbol(""),_d=Symbol(""),Ha=Symbol("");function xn(n,e,t){if(bi&&Pt){let i=qc.get(n);i||qc.set(n,i=new Map);let r=i.get(t);r||(i.set(t,r=new eh),r.map=i,r.key=t),r.track()}}function ir(n,e,t,i,r,s){const o=qc.get(n);if(!o){Va++;return}const a=l=>{l&&l.trigger()};if(up(),e==="clear")o.forEach(a);else{const l=$e(n),c=l&&cp(t);if(l&&t==="length"){const u=Number(i);o.forEach((h,f)=>{(f==="length"||f===Ha||!ur(f)&&f>=u)&&a(h)})}else switch((t!==void 0||o.has(void 0))&&a(o.get(t)),c&&a(o.get(Ha)),e){case"add":l?c&&a(o.get("length")):(a(o.get(ys)),ya(n)&&a(o.get(_d)));break;case"delete":l||(a(o.get(ys)),ya(n)&&a(o.get(_d)));break;case"set":ya(n)&&a(o.get(ys));break}}hp()}function uM(n,e){const t=qc.get(n);return t&&t.get(e)}function Ws(n){const e=xt(n);return e===n?e:(xn(e,"iterate",Ha),ai(n)?e:e.map(hn))}function th(n){return xn(n=xt(n),"iterate",Ha),n}const hM={__proto__:null,[Symbol.iterator](){return Jh(this,Symbol.iterator,hn)},concat(...n){return Ws(this).concat(...n.map(e=>$e(e)?Ws(e):e))},entries(){return Jh(this,"entries",n=>(n[1]=hn(n[1]),n))},every(n,e){return ji(this,"every",n,e,void 0,arguments)},filter(n,e){return ji(this,"filter",n,e,t=>t.map(hn),arguments)},find(n,e){return ji(this,"find",n,e,hn,arguments)},findIndex(n,e){return ji(this,"findIndex",n,e,void 0,arguments)},findLast(n,e){return ji(this,"findLast",n,e,hn,arguments)},findLastIndex(n,e){return ji(this,"findLastIndex",n,e,void 0,arguments)},forEach(n,e){return ji(this,"forEach",n,e,void 0,arguments)},includes(...n){return Qh(this,"includes",n)},indexOf(...n){return Qh(this,"indexOf",n)},join(n){return Ws(this).join(n)},lastIndexOf(...n){return Qh(this,"lastIndexOf",n)},map(n,e){return ji(this,"map",n,e,void 0,arguments)},pop(){return $o(this,"pop")},push(...n){return $o(this,"push",n)},reduce(n,...e){return Im(this,"reduce",n,e)},reduceRight(n,...e){return Im(this,"reduceRight",n,e)},shift(){return $o(this,"shift")},some(n,e){return ji(this,"some",n,e,void 0,arguments)},splice(...n){return $o(this,"splice",n)},toReversed(){return Ws(this).toReversed()},toSorted(n){return Ws(this).toSorted(n)},toSpliced(...n){return Ws(this).toSpliced(...n)},unshift(...n){return $o(this,"unshift",n)},values(){return Jh(this,"values",hn)}};function Jh(n,e,t){const i=th(n),r=i[e]();return i!==n&&!ai(n)&&(r._next=r.next,r.next=()=>{const s=r._next();return s.value&&(s.value=t(s.value)),s}),r}const fM=Array.prototype;function ji(n,e,t,i,r,s){const o=th(n),a=o!==n&&!ai(n),l=o[e];if(l!==fM[e]){const h=l.apply(n,s);return a?hn(h):h}let c=t;o!==n&&(a?c=function(h,f){return t.call(this,hn(h),f,n)}:t.length>2&&(c=function(h,f){return t.call(this,h,f,n)}));const u=l.call(o,c,i);return a&&r?r(u):u}function Im(n,e,t,i){const r=th(n);let s=t;return r!==n&&(ai(n)?t.length>3&&(s=function(o,a,l){return t.call(this,o,a,l,n)}):s=function(o,a,l){return t.call(this,o,hn(a),l,n)}),r[e](s,...i)}function Qh(n,e,t){const i=xt(n);xn(i,"iterate",Ha);const r=i[e](...t);return(r===-1||r===!1)&&mp(t[0])?(t[0]=xt(t[0]),i[e](...t)):r}function $o(n,e,t=[]){fr(),up();const i=xt(n)[e].apply(n,t);return hp(),dr(),i}const dM=sp("__proto__,__v_isRef,__isVue"),jv=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(ur));function pM(n){ur(n)||(n=String(n));const e=xt(this);return xn(e,"has",n),e.hasOwnProperty(n)}class $v{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,i){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,s=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return i===(r?s?wM:Jv:s?Kv:Zv).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(i)?e:void 0;const o=$e(e);if(!r){let l;if(o&&(l=hM[t]))return l;if(t==="hasOwnProperty")return pM}const a=Reflect.get(e,t,It(e)?e:i);return(ur(t)?jv.has(t):dM(t))||(r||xn(e,"get",t),s)?a:It(a)?o&&cp(t)?a:a.value:Ft(a)?r?Cs(a):pl(a):a}}class qv extends $v{constructor(e=!1){super(!1,e)}set(e,t,i,r){let s=e[t];if(!this._isShallow){const l=Nr(s);if(!ai(i)&&!Nr(i)&&(s=xt(s),i=xt(i)),!$e(e)&&It(s)&&!It(i))return l||(s.value=i),!0}const o=$e(e)&&cp(t)?Number(t)<e.length:Mt(e,t),a=Reflect.set(e,t,i,It(e)?e:r);return e===xt(r)&&(o?Vn(i,s)&&ir(e,"set",t,i):ir(e,"add",t,i)),a}deleteProperty(e,t){const i=Mt(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&i&&ir(e,"delete",t,void 0),r}has(e,t){const i=Reflect.has(e,t);return(!ur(t)||!jv.has(t))&&xn(e,"has",t),i}ownKeys(e){return xn(e,"iterate",$e(e)?"length":ys),Reflect.ownKeys(e)}}class mM extends $v{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const gM=new qv,vM=new mM,_M=new qv(!0);const xd=n=>n,Ul=n=>Reflect.getPrototypeOf(n);function xM(n,e,t){return function(...i){const r=this.__v_raw,s=xt(r),o=ya(s),a=n==="entries"||n===Symbol.iterator&&o,l=n==="keys"&&o,c=r[n](...i),u=t?xd:e?Zc:hn;return!e&&xn(s,"iterate",l?_d:ys),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:a?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function Nl(n){return function(...e){return n==="delete"?!1:n==="clear"?void 0:this}}function yM(n,e){const t={get(r){const s=this.__v_raw,o=xt(s),a=xt(r);n||(Vn(r,a)&&xn(o,"get",r),xn(o,"get",a));const{has:l}=Ul(o),c=e?xd:n?Zc:hn;if(l.call(o,r))return c(s.get(r));if(l.call(o,a))return c(s.get(a));s!==o&&s.get(r)},get size(){const r=this.__v_raw;return!n&&xn(xt(r),"iterate",ys),r.size},has(r){const s=this.__v_raw,o=xt(s),a=xt(r);return n||(Vn(r,a)&&xn(o,"has",r),xn(o,"has",a)),r===a?s.has(r):s.has(r)||s.has(a)},forEach(r,s){const o=this,a=o.__v_raw,l=xt(a),c=e?xd:n?Zc:hn;return!n&&xn(l,"iterate",ys),a.forEach((u,h)=>r.call(s,c(u),c(h),o))}};return dn(t,n?{add:Nl("add"),set:Nl("set"),delete:Nl("delete"),clear:Nl("clear")}:{add(r){!e&&!ai(r)&&!Nr(r)&&(r=xt(r));const s=xt(this);return Ul(s).has.call(s,r)||(s.add(r),ir(s,"add",r,r)),this},set(r,s){!e&&!ai(s)&&!Nr(s)&&(s=xt(s));const o=xt(this),{has:a,get:l}=Ul(o);let c=a.call(o,r);c||(r=xt(r),c=a.call(o,r));const u=l.call(o,r);return o.set(r,s),c?Vn(s,u)&&ir(o,"set",r,s):ir(o,"add",r,s),this},delete(r){const s=xt(this),{has:o,get:a}=Ul(s);let l=o.call(s,r);l||(r=xt(r),l=o.call(s,r)),a&&a.call(s,r);const c=s.delete(r);return l&&ir(s,"delete",r,void 0),c},clear(){const r=xt(this),s=r.size!==0,o=r.clear();return s&&ir(r,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=xM(r,n,e)}),t}function dp(n,e){const t=yM(n,e);return(i,r,s)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?i:Reflect.get(Mt(t,r)&&r in i?t:i,r,s)}const bM={get:dp(!1,!1)},MM={get:dp(!1,!0)},SM={get:dp(!0,!1)};const Zv=new WeakMap,Kv=new WeakMap,Jv=new WeakMap,wM=new WeakMap;function TM(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function EM(n){return n.__v_skip||!Object.isExtensible(n)?0:TM(Zb(n))}function pl(n){return Nr(n)?n:pp(n,!1,gM,bM,Zv)}function AM(n){return pp(n,!1,_M,MM,Kv)}function Cs(n){return pp(n,!0,vM,SM,Jv)}function pp(n,e,t,i,r){if(!Ft(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const s=EM(n);if(s===0)return n;const o=r.get(n);if(o)return o;const a=new Proxy(n,s===2?i:t);return r.set(n,a),a}function Ur(n){return Nr(n)?Ur(n.__v_raw):!!(n&&n.__v_isReactive)}function Nr(n){return!!(n&&n.__v_isReadonly)}function ai(n){return!!(n&&n.__v_isShallow)}function mp(n){return n?!!n.__v_raw:!1}function xt(n){const e=n&&n.__v_raw;return e?xt(e):n}function gp(n){return!Mt(n,"__v_skip")&&Object.isExtensible(n)&&Uv(n,"__v_skip",!0),n}const hn=n=>Ft(n)?pl(n):n,Zc=n=>Ft(n)?Cs(n):n;function It(n){return n?n.__v_isRef===!0:!1}function Tt(n){return Qv(n,!1)}function lt(n){return Qv(n,!0)}function Qv(n,e){return It(n)?n:new CM(n,e)}class CM{constructor(e,t){this.dep=new eh,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:xt(e),this._value=t?e:hn(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,i=this.__v_isShallow||ai(e)||Nr(e);e=i?e:xt(e),Vn(e,t)&&(this._rawValue=e,this._value=i?e:hn(e),this.dep.trigger())}}function Ge(n){return It(n)?n.value:n}function dt(n){return st(n)?n():Ge(n)}const RM={get:(n,e,t)=>e==="__v_raw"?n:Ge(Reflect.get(n,e,t)),set:(n,e,t,i)=>{const r=n[e];return It(r)&&!It(t)?(r.value=t,!0):Reflect.set(n,e,t,i)}};function e_(n){return Ur(n)?n:new Proxy(n,RM)}class IM{constructor(e){this.__v_isRef=!0,this._value=void 0;const t=this.dep=new eh,{get:i,set:r}=e(t.track.bind(t),t.trigger.bind(t));this._get=i,this._set=r}get value(){return this._value=this._get()}set value(e){this._set(e)}}function vp(n){return new IM(n)}function kr(n){const e=$e(n)?new Array(n.length):{};for(const t in n)e[t]=LM(n,t);return e}class PM{constructor(e,t,i){this._object=e,this._key=t,this._defaultValue=i,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return uM(xt(this._object),this._key)}}function LM(n,e,t){const i=n[e];return It(i)?i:new PM(n,e,t)}class DM{constructor(e,t,i){this.fn=e,this.setter=t,this._value=void 0,this.dep=new eh(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Va-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&Pt!==this)return Vv(this,!0),!0}get value(){const e=this.dep.track();return Wv(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function UM(n,e,t=!1){let i,r;return st(n)?i=n:(i=n.get,r=n.set),new DM(i,r,t)}const Ol={},Kc=new WeakMap;let us;function NM(n,e=!1,t=us){if(t){let i=Kc.get(t);i||Kc.set(t,i=[]),i.push(n)}}function OM(n,e,t=yt){const{immediate:i,deep:r,once:s,scheduler:o,augmentJob:a,call:l}=t,c=b=>r?b:ai(b)||r===!1||r===0?rr(b,1):rr(b);let u,h,f,d,p=!1,v=!1;if(It(n)?(h=()=>n.value,p=ai(n)):Ur(n)?(h=()=>c(n),p=!0):$e(n)?(v=!0,p=n.some(b=>Ur(b)||ai(b)),h=()=>n.map(b=>{if(It(b))return b.value;if(Ur(b))return c(b);if(st(b))return l?l(b,2):b()})):st(n)?e?h=l?()=>l(n,2):n:h=()=>{if(f){fr();try{f()}finally{dr()}}const b=us;us=u;try{return l?l(n,3,[d]):n(d)}finally{us=b}}:h=ki,e&&r){const b=h,C=r===!0?1/0:r;h=()=>rr(b(),C)}const m=dl(),g=()=>{u.stop(),m&&m.active&&ap(m.effects,u)};if(s&&e){const b=e;e=(...C)=>{b(...C),g()}}let M=v?new Array(n.length).fill(Ol):Ol;const y=b=>{if(!(!(u.flags&1)||!u.dirty&&!b))if(e){const C=u.run();if(r||p||(v?C.some((w,E)=>Vn(w,M[E])):Vn(C,M))){f&&f();const w=us;us=u;try{const E=[C,M===Ol?void 0:v&&M[0]===Ol?[]:M,d];M=C,l?l(e,3,E):e(...E)}finally{us=w}}}else u.run()};return a&&a(y),u=new zv(h),u.scheduler=o?()=>o(y,!1):y,d=b=>NM(b,!1,u),f=u.onStop=()=>{const b=Kc.get(u);if(b){if(l)l(b,4);else for(const C of b)C();Kc.delete(u)}},e?i?y(!0):M=u.run():o?o(y.bind(null,!0),!0):u.run(),g.pause=u.pause.bind(u),g.resume=u.resume.bind(u),g.stop=g,g}function rr(n,e=1/0,t){if(e<=0||!Ft(n)||n.__v_skip||(t=t||new Set,t.has(n)))return n;if(t.add(n),e--,It(n))rr(n.value,e,t);else if($e(n))for(let i=0;i<n.length;i++)rr(n[i],e,t);else if(lp(n)||ya(n))n.forEach(i=>{rr(i,e,t)});else if(Kb(n)){for(const i in n)rr(n[i],e,t);for(const i of Object.getOwnPropertySymbols(n))Object.prototype.propertyIsEnumerable.call(n,i)&&rr(n[i],e,t)}return n}/**
* @vue/runtime-core v3.5.20
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function ml(n,e,t,i){try{return i?n(...i):n()}catch(r){nh(r,e,t)}}function Vi(n,e,t,i){if(st(n)){const r=ml(n,e,t,i);return r&&Lv(r)&&r.catch(s=>{nh(s,e,t)}),r}if($e(n)){const r=[];for(let s=0;s<n.length;s++)r.push(Vi(n[s],e,t,i));return r}}function nh(n,e,t,i=!0){const r=e?e.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:o}=e&&e.appContext.config||yt;if(e){let a=e.parent;const l=e.proxy,c=`https://vuejs.org/error-reference/#runtime-${t}`;for(;a;){const u=a.ec;if(u){for(let h=0;h<u.length;h++)if(u[h](n,l,c)===!1)return}a=a.parent}if(s){fr(),ml(s,null,10,[n,l,c]),dr();return}}FM(n,t,r,i,o)}function FM(n,e,t,i=!0,r=!1){if(r)throw n;console.error(n)}const Cn=[];let Ui=-1;const So=[];let Rr=null,go=0;const t_=Promise.resolve();let Jc=null;function _p(n){const e=Jc||t_;return n?e.then(this?n.bind(this):n):e}function BM(n){let e=Ui+1,t=Cn.length;for(;e<t;){const i=e+t>>>1,r=Cn[i],s=Ga(r);s<n||s===n&&r.flags&2?e=i+1:t=i}return e}function xp(n){if(!(n.flags&1)){const e=Ga(n),t=Cn[Cn.length-1];!t||!(n.flags&2)&&e>=Ga(t)?Cn.push(n):Cn.splice(BM(e),0,n),n.flags|=1,n_()}}function n_(){Jc||(Jc=t_.then(r_))}function zM(n){$e(n)?So.push(...n):Rr&&n.id===-1?Rr.splice(go+1,0,n):n.flags&1||(So.push(n),n.flags|=1),n_()}function Pm(n,e,t=Ui+1){for(;t<Cn.length;t++){const i=Cn[t];if(i&&i.flags&2){if(n&&i.id!==n.uid)continue;Cn.splice(t,1),t--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function i_(n){if(So.length){const e=[...new Set(So)].sort((t,i)=>Ga(t)-Ga(i));if(So.length=0,Rr){Rr.push(...e);return}for(Rr=e,go=0;go<Rr.length;go++){const t=Rr[go];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}Rr=null,go=0}}const Ga=n=>n.id==null?n.flags&2?-1:1/0:n.id;function r_(n){try{for(Ui=0;Ui<Cn.length;Ui++){const e=Cn[Ui];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),ml(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;Ui<Cn.length;Ui++){const e=Cn[Ui];e&&(e.flags&=-2)}Ui=-1,Cn.length=0,i_(),Jc=null,(Cn.length||So.length)&&r_()}}let yn=null,s_=null;function Qc(n){const e=yn;return yn=n,s_=n&&n.type.__scopeId||null,e}function o_(n,e=yn,t){if(!e||n._n)return n;const i=(...r)=>{i._d&&zm(-1);const s=Qc(e);let o;try{o=n(...r)}finally{Qc(s),i._d&&zm(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function kM(n,e){if(yn===null)return n;const t=lh(yn),i=n.dirs||(n.dirs=[]);for(let r=0;r<e.length;r++){let[s,o,a,l=yt]=e[r];s&&(st(s)&&(s={mounted:s,updated:s}),s.deep&&rr(o),i.push({dir:s,instance:t,value:o,oldValue:void 0,arg:a,modifiers:l}))}return n}function $r(n,e,t,i){const r=n.dirs,s=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[i];l&&(fr(),Vi(l,t,8,[n.el,a,n,e]),dr())}}const VM=Symbol("_vte"),HM=n=>n.__isTeleport,GM=Symbol("_leaveCb");function yp(n,e){n.shapeFlag&6&&n.component?(n.transition=e,yp(n.component.subTree,e)):n.shapeFlag&128?(n.ssContent.transition=e.clone(n.ssContent),n.ssFallback.transition=e.clone(n.ssFallback)):n.transition=e}/*! #__NO_SIDE_EFFECTS__ */function en(n,e){return st(n)?dn({name:n.name},e,{setup:n}):n}function a_(n){n.ids=[n.ids[0]+n.ids[2]+++"-",0,0]}function WM(n){const e=Hi(),t=lt(null);if(e){const r=e.refs===yt?e.refs={}:e.refs;Object.defineProperty(r,n,{enumerable:!0,get:()=>t.value,set:s=>t.value=s})}return t}function wa(n,e,t,i,r=!1){if($e(n)){n.forEach((p,v)=>wa(p,e&&($e(e)?e[v]:e),t,i,r));return}if(wo(i)&&!r){i.shapeFlag&512&&i.type.__asyncResolved&&i.component.subTree.component&&wa(n,e,t,i.component.subTree);return}const s=i.shapeFlag&4?lh(i.component):i.el,o=r?null:s,{i:a,r:l}=n,c=e&&e.r,u=a.refs===yt?a.refs={}:a.refs,h=a.setupState,f=xt(h),d=h===yt?Pv:p=>Mt(f,p);if(c!=null&&c!==l){if(Qt(c))u[c]=null,d(c)&&(h[c]=null);else if(It(c)){c.value=null;const p=e;p.k&&(u[p.k]=null)}}if(st(l))ml(l,a,12,[o,u]);else{const p=Qt(l),v=It(l);if(p||v){const m=()=>{if(n.f){const g=p?d(l)?h[l]:u[l]:l.value;if(r)$e(g)&&ap(g,s);else if($e(g))g.includes(s)||g.push(s);else if(p)u[l]=[s],d(l)&&(h[l]=u[l]);else{const M=[s];l.value=M,n.k&&(u[n.k]=M)}}else p?(u[l]=o,d(l)&&(h[l]=o)):v&&(l.value=o,n.k&&(u[n.k]=o))};o?(m.id=-1,Zn(m,t)):m()}}}Zu().requestIdleCallback;Zu().cancelIdleCallback;const wo=n=>!!n.type.__asyncLoader,l_=n=>n.type.__isKeepAlive;function XM(n,e){c_(n,"a",e)}function YM(n,e){c_(n,"da",e)}function c_(n,e,t=Rn){const i=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(ih(e,i,t),t){let r=t.parent;for(;r&&r.parent;)l_(r.parent.vnode)&&jM(i,e,t,r),r=r.parent}}function jM(n,e,t,i){const r=ih(e,n,i,!0);Si(()=>{ap(i[e],r)},t)}function ih(n,e,t=Rn,i=!1){if(t){const r=t[n]||(t[n]=[]),s=e.__weh||(e.__weh=(...o)=>{fr();const a=gl(t),l=Vi(e,t,n,o);return a(),dr(),l});return i?r.unshift(s):r.push(s),s}}const _r=n=>(e,t=Rn)=>{(!ja||n==="sp")&&ih(n,(...i)=>e(...i),t)},$M=_r("bm"),rh=_r("m"),qM=_r("bu"),ZM=_r("u"),KM=_r("bum"),Si=_r("um"),JM=_r("sp"),QM=_r("rtg"),eS=_r("rtc");function tS(n,e=Rn){ih("ec",n,e)}const nS=Symbol.for("v-ndc");function Rs(n,e,t,i){let r;const s=t,o=$e(n);if(o||Qt(n)){const a=o&&Ur(n);let l=!1,c=!1;a&&(l=!ai(n),c=Nr(n),n=th(n)),r=new Array(n.length);for(let u=0,h=n.length;u<h;u++)r[u]=e(l?c?Zc(hn(n[u])):hn(n[u]):n[u],u,void 0,s)}else if(typeof n=="number"){r=new Array(n);for(let a=0;a<n;a++)r[a]=e(a+1,a,void 0,s)}else if(Ft(n))if(n[Symbol.iterator])r=Array.from(n,(a,l)=>e(a,l,void 0,s));else{const a=Object.keys(n);r=new Array(a.length);for(let l=0,c=a.length;l<c;l++){const u=a[l];r[l]=e(n[u],u,l,s)}}else r=[];return r}function u_(n,e,t={},i,r){if(yn.ce||yn.parent&&wo(yn.parent)&&yn.parent.ce)return nt(),ei(Xt,null,[Ht("slot",t,i&&i())],64);let s=n[e];s&&s._c&&(s._d=!1),nt();const o=s&&h_(s(t)),a=t.key||o&&o.key,l=ei(Xt,{key:(a&&!ur(a)?a:`_${e}`)+(!o&&i?"_fb":"")},o||(i?i():[]),o&&n._===1?64:-2);return l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),s&&s._c&&(s._d=!0),l}function h_(n){return n.some(e=>Ya(e)?!(e.type===pr||e.type===Xt&&!h_(e.children)):!0)?n:null}const yd=n=>n?O_(n)?lh(n):yd(n.parent):null,Ta=dn(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>yd(n.parent),$root:n=>yd(n.root),$host:n=>n.ce,$emit:n=>n.emit,$options:n=>m_(n),$forceUpdate:n=>n.f||(n.f=()=>{xp(n.update)}),$nextTick:n=>n.n||(n.n=_p.bind(n.proxy)),$watch:n=>wS.bind(n)}),ef=(n,e)=>n!==yt&&!n.__isScriptSetup&&Mt(n,e),iS={get({_:n},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:i,data:r,props:s,accessCache:o,type:a,appContext:l}=n;let c;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return i[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(ef(i,e))return o[e]=1,i[e];if(r!==yt&&Mt(r,e))return o[e]=2,r[e];if((c=n.propsOptions[0])&&Mt(c,e))return o[e]=3,s[e];if(t!==yt&&Mt(t,e))return o[e]=4,t[e];bd&&(o[e]=0)}}const u=Ta[e];let h,f;if(u)return e==="$attrs"&&xn(n.attrs,"get",""),u(n);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==yt&&Mt(t,e))return o[e]=4,t[e];if(f=l.config.globalProperties,Mt(f,e))return f[e]},set({_:n},e,t){const{data:i,setupState:r,ctx:s}=n;return ef(r,e)?(r[e]=t,!0):i!==yt&&Mt(i,e)?(i[e]=t,!0):Mt(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(s[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:i,appContext:r,propsOptions:s,type:o}},a){let l,c;return!!(t[a]||n!==yt&&a[0]!=="$"&&Mt(n,a)||ef(e,a)||(l=s[0])&&Mt(l,a)||Mt(i,a)||Mt(Ta,a)||Mt(r.config.globalProperties,a)||(c=o.__cssModules)&&c[a])},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:Mt(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function f_(){return d_().slots}function rS(){return d_().attrs}function d_(n){const e=Hi();return e.setupContext||(e.setupContext=B_(e))}function eu(n){return $e(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}function tu(n,e){return!n||!e?n||e:$e(n)&&$e(e)?n.concat(e):dn({},eu(n),eu(e))}let bd=!0;function sS(n){const e=m_(n),t=n.proxy,i=n.ctx;bd=!1,e.beforeCreate&&Lm(e.beforeCreate,n,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:d,updated:p,activated:v,deactivated:m,beforeDestroy:g,beforeUnmount:M,destroyed:y,unmounted:b,render:C,renderTracked:w,renderTriggered:E,errorCaptured:S,serverPrefetch:_,expose:x,inheritAttrs:A,components:D,directives:k,filters:W}=e;if(c&&oS(c,i,null),o)for(const Q in o){const Z=o[Q];st(Z)&&(i[Q]=Z.bind(t))}if(r){const Q=r.call(t,t);Ft(Q)&&(n.data=pl(Q))}if(bd=!0,s)for(const Q in s){const Z=s[Q],he=st(Z)?Z.bind(t,t):st(Z.get)?Z.get.bind(t,t):ki,me=!st(Z)&&st(Z.set)?Z.set.bind(t):ki,oe=it({get:he,set:me});Object.defineProperty(i,Q,{enumerable:!0,configurable:!0,get:()=>oe.value,set:Ee=>oe.value=Ee})}if(a)for(const Q in a)p_(a[Q],i,t,Q);if(l){const Q=st(l)?l.call(t):l;Reflect.ownKeys(Q).forEach(Z=>{Ea(Z,Q[Z])})}u&&Lm(u,n,"c");function z(Q,Z){$e(Z)?Z.forEach(he=>Q(he.bind(t))):Z&&Q(Z.bind(t))}if(z($M,h),z(rh,f),z(qM,d),z(ZM,p),z(XM,v),z(YM,m),z(tS,S),z(eS,w),z(QM,E),z(KM,M),z(Si,b),z(JM,_),$e(x))if(x.length){const Q=n.exposed||(n.exposed={});x.forEach(Z=>{Object.defineProperty(Q,Z,{get:()=>t[Z],set:he=>t[Z]=he,enumerable:!0})})}else n.exposed||(n.exposed={});C&&n.render===ki&&(n.render=C),A!=null&&(n.inheritAttrs=A),D&&(n.components=D),k&&(n.directives=k),_&&a_(n)}function oS(n,e,t=ki){$e(n)&&(n=Md(n));for(const i in n){const r=n[i];let s;Ft(r)?"default"in r?s=Ms(r.from||i,r.default,!0):s=Ms(r.from||i):s=Ms(r),It(s)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):e[i]=s}}function Lm(n,e,t){Vi($e(n)?n.map(i=>i.bind(e.proxy)):n.bind(e.proxy),e,t)}function p_(n,e,t,i){let r=i.includes(".")?C_(t,i):()=>t[i];if(Qt(n)){const s=e[n];st(s)&&Lt(r,s)}else if(st(n))Lt(r,n.bind(t));else if(Ft(n))if($e(n))n.forEach(s=>p_(s,e,t,i));else{const s=st(n.handler)?n.handler.bind(t):e[n.handler];st(s)&&Lt(r,s,n)}}function m_(n){const e=n.type,{mixins:t,extends:i}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=n.appContext,a=s.get(e);let l;return a?l=a:!r.length&&!t&&!i?l=e:(l={},r.length&&r.forEach(c=>nu(l,c,o,!0)),nu(l,e,o)),Ft(e)&&s.set(e,l),l}function nu(n,e,t,i=!1){const{mixins:r,extends:s}=e;s&&nu(n,s,t,!0),r&&r.forEach(o=>nu(n,o,t,!0));for(const o in e)if(!(i&&o==="expose")){const a=aS[o]||t&&t[o];n[o]=a?a(n[o],e[o]):e[o]}return n}const aS={data:Dm,props:Um,emits:Um,methods:ha,computed:ha,beforeCreate:Tn,created:Tn,beforeMount:Tn,mounted:Tn,beforeUpdate:Tn,updated:Tn,beforeDestroy:Tn,beforeUnmount:Tn,destroyed:Tn,unmounted:Tn,activated:Tn,deactivated:Tn,errorCaptured:Tn,serverPrefetch:Tn,components:ha,directives:ha,watch:cS,provide:Dm,inject:lS};function Dm(n,e){return e?n?function(){return dn(st(n)?n.call(this,this):n,st(e)?e.call(this,this):e)}:e:n}function lS(n,e){return ha(Md(n),Md(e))}function Md(n){if($e(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function Tn(n,e){return n?[...new Set([].concat(n,e))]:e}function ha(n,e){return n?dn(Object.create(null),n,e):e}function Um(n,e){return n?$e(n)&&$e(e)?[...new Set([...n,...e])]:dn(Object.create(null),eu(n),eu(e??{})):e}function cS(n,e){if(!n)return e;if(!e)return n;const t=dn(Object.create(null),n);for(const i in e)t[i]=Tn(n[i],e[i]);return t}function g_(){return{app:null,config:{isNativeTag:Pv,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uS=0;function hS(n,e){return function(i,r=null){st(i)||(i=dn({},i)),r!=null&&!Ft(r)&&(r=null);const s=g_(),o=new WeakSet,a=[];let l=!1;const c=s.app={_uid:uS++,_component:i,_props:r,_container:null,_context:s,_instance:null,version:VS,get config(){return s.config},set config(u){},use(u,...h){return o.has(u)||(u&&st(u.install)?(o.add(u),u.install(c,...h)):st(u)&&(o.add(u),u(c,...h))),c},mixin(u){return s.mixins.includes(u)||s.mixins.push(u),c},component(u,h){return h?(s.components[u]=h,c):s.components[u]},directive(u,h){return h?(s.directives[u]=h,c):s.directives[u]},mount(u,h,f){if(!l){const d=c._ceVNode||Ht(i,r);return d.appContext=s,f===!0?f="svg":f===!1&&(f=void 0),n(d,u,f),l=!0,c._container=u,u.__vue_app__=c,lh(d.component)}},onUnmount(u){a.push(u)},unmount(){l&&(Vi(a,c._instance,16),n(null,c._container),delete c._container.__vue_app__)},provide(u,h){return s.provides[u]=h,c},runWithContext(u){const h=bs;bs=c;try{return u()}finally{bs=h}}};return c}}let bs=null;function Ea(n,e){if(Rn){let t=Rn.provides;const i=Rn.parent&&Rn.parent.provides;i===t&&(t=Rn.provides=Object.create(i)),t[n]=e}}function Ms(n,e,t=!1){const i=Hi();if(i||bs){let r=bs?bs._context.provides:i?i.parent==null||i.ce?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(r&&n in r)return r[n];if(arguments.length>1)return t&&st(e)?e.call(i&&i.proxy):e}}function bp(){return!!(Hi()||bs)}const v_={},__=()=>Object.create(v_),x_=n=>Object.getPrototypeOf(n)===v_;function fS(n,e,t,i=!1){const r={},s=__();n.propsDefaults=Object.create(null),y_(n,e,r,s);for(const o in n.propsOptions[0])o in r||(r[o]=void 0);t?n.props=i?r:AM(r):n.type.props?n.props=r:n.props=s,n.attrs=s}function dS(n,e,t,i){const{props:r,attrs:s,vnode:{patchFlag:o}}=n,a=xt(r),[l]=n.propsOptions;let c=!1;if((i||o>0)&&!(o&16)){if(o&8){const u=n.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(oh(n.emitsOptions,f))continue;const d=e[f];if(l)if(Mt(s,f))d!==s[f]&&(s[f]=d,c=!0);else{const p=hr(f);r[p]=Sd(l,a,p,d,n,!1)}else d!==s[f]&&(s[f]=d,c=!0)}}}else{y_(n,e,r,s)&&(c=!0);let u;for(const h in a)(!e||!Mt(e,h)&&((u=zr(h))===h||!Mt(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=Sd(l,a,h,void 0,n,!0)):delete r[h]);if(s!==a)for(const h in s)(!e||!Mt(e,h))&&(delete s[h],c=!0)}c&&ir(n.attrs,"set","")}function y_(n,e,t,i){const[r,s]=n.propsOptions;let o=!1,a;if(e)for(let l in e){if(ba(l))continue;const c=e[l];let u;r&&Mt(r,u=hr(l))?!s||!s.includes(u)?t[u]=c:(a||(a={}))[u]=c:oh(n.emitsOptions,l)||(!(l in i)||c!==i[l])&&(i[l]=c,o=!0)}if(s){const l=xt(t),c=a||yt;for(let u=0;u<s.length;u++){const h=s[u];t[h]=Sd(r,l,h,c[h],n,!Mt(c,h))}}return o}function Sd(n,e,t,i,r,s){const o=n[t];if(o!=null){const a=Mt(o,"default");if(a&&i===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&st(l)){const{propsDefaults:c}=r;if(t in c)i=c[t];else{const u=gl(r);i=c[t]=l.call(null,e),u()}}else i=l;r.ce&&r.ce._setProp(t,i)}o[0]&&(s&&!a?i=!1:o[1]&&(i===""||i===zr(t))&&(i=!0))}return i}const pS=new WeakMap;function b_(n,e,t=!1){const i=t?pS:e.propsCache,r=i.get(n);if(r)return r;const s=n.props,o={},a=[];let l=!1;if(!st(n)){const u=h=>{l=!0;const[f,d]=b_(h,e,!0);dn(o,f),d&&a.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}if(!s&&!l)return Ft(n)&&i.set(n,Mo),Mo;if($e(s))for(let u=0;u<s.length;u++){const h=hr(s[u]);Nm(h)&&(o[h]=yt)}else if(s)for(const u in s){const h=hr(u);if(Nm(h)){const f=s[u],d=o[h]=$e(f)||st(f)?{type:f}:dn({},f),p=d.type;let v=!1,m=!0;if($e(p))for(let g=0;g<p.length;++g){const M=p[g],y=st(M)&&M.name;if(y==="Boolean"){v=!0;break}else y==="String"&&(m=!1)}else v=st(p)&&p.name==="Boolean";d[0]=v,d[1]=m,(v||Mt(d,"default"))&&a.push(h)}}const c=[o,a];return Ft(n)&&i.set(n,c),c}function Nm(n){return n[0]!=="$"&&!ba(n)}const Mp=n=>n==="_"||n==="_ctx"||n==="$stable",Sp=n=>$e(n)?n.map(Oi):[Oi(n)],mS=(n,e,t)=>{if(e._n)return e;const i=o_((...r)=>Sp(e(...r)),t);return i._c=!1,i},M_=(n,e,t)=>{const i=n._ctx;for(const r in n){if(Mp(r))continue;const s=n[r];if(st(s))e[r]=mS(r,s,i);else if(s!=null){const o=Sp(s);e[r]=()=>o}}},S_=(n,e)=>{const t=Sp(e);n.slots.default=()=>t},w_=(n,e,t)=>{for(const i in e)(t||!Mp(i))&&(n[i]=e[i])},gS=(n,e,t)=>{const i=n.slots=__();if(n.vnode.shapeFlag&32){const r=e._;r?(w_(i,e,t),t&&Uv(i,"_",r,!0)):M_(e,i)}else e&&S_(n,e)},vS=(n,e,t)=>{const{vnode:i,slots:r}=n;let s=!0,o=yt;if(i.shapeFlag&32){const a=e._;a?t&&a===1?s=!1:w_(r,e,t):(s=!e.$stable,M_(e,r)),o=e}else e&&(S_(n,e),o={default:1});if(s)for(const a in r)!Mp(a)&&o[a]==null&&delete r[a]},Zn=IS;function T_(n){return _S(n)}function _S(n,e){const t=Zu();t.__VUE__=!0;const{insert:i,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:d=ki,insertStaticContent:p}=n,v=(P,T,O,B=null,G=null,H=null,K=void 0,q=null,J=!!T.dynamicChildren)=>{if(P===T)return;P&&!qo(P,T)&&(B=_e(P),Ee(P,G,H,!0),P=null),T.patchFlag===-2&&(J=!1,T.dynamicChildren=null);const{type:ie,ref:pe,shapeFlag:L}=T;switch(ie){case ah:m(P,T,O,B);break;case pr:g(P,T,O,B);break;case nf:P==null&&M(T,O,B,K);break;case Xt:D(P,T,O,B,G,H,K,q,J);break;default:L&1?C(P,T,O,B,G,H,K,q,J):L&6?k(P,T,O,B,G,H,K,q,J):(L&64||L&128)&&ie.process(P,T,O,B,G,H,K,q,J,F)}pe!=null&&G?wa(pe,P&&P.ref,H,T||P,!T):pe==null&&P&&P.ref!=null&&wa(P.ref,null,H,P,!0)},m=(P,T,O,B)=>{if(P==null)i(T.el=a(T.children),O,B);else{const G=T.el=P.el;T.children!==P.children&&c(G,T.children)}},g=(P,T,O,B)=>{P==null?i(T.el=l(T.children||""),O,B):T.el=P.el},M=(P,T,O,B)=>{[P.el,P.anchor]=p(P.children,T,O,B,P.el,P.anchor)},y=({el:P,anchor:T},O,B)=>{let G;for(;P&&P!==T;)G=f(P),i(P,O,B),P=G;i(T,O,B)},b=({el:P,anchor:T})=>{let O;for(;P&&P!==T;)O=f(P),r(P),P=O;r(T)},C=(P,T,O,B,G,H,K,q,J)=>{T.type==="svg"?K="svg":T.type==="math"&&(K="mathml"),P==null?w(T,O,B,G,H,K,q,J):_(P,T,G,H,K,q,J)},w=(P,T,O,B,G,H,K,q)=>{let J,ie;const{props:pe,shapeFlag:L,transition:R,dirs:j}=P;if(J=P.el=o(P.type,H,pe&&pe.is,pe),L&8?u(J,P.children):L&16&&S(P.children,J,null,B,G,tf(P,H),K,q),j&&$r(P,null,B,"created"),E(J,P,P.scopeId,K,B),pe){for(const fe in pe)fe!=="value"&&!ba(fe)&&s(J,fe,null,pe[fe],H,B);"value"in pe&&s(J,"value",null,pe.value,H),(ie=pe.onVnodeBeforeMount)&&Ri(ie,B,P)}j&&$r(P,null,B,"beforeMount");const te=xS(G,R);te&&R.beforeEnter(J),i(J,T,O),((ie=pe&&pe.onVnodeMounted)||te||j)&&Zn(()=>{ie&&Ri(ie,B,P),te&&R.enter(J),j&&$r(P,null,B,"mounted")},G)},E=(P,T,O,B,G)=>{if(O&&d(P,O),B)for(let H=0;H<B.length;H++)d(P,B[H]);if(G){let H=G.subTree;if(T===H||P_(H.type)&&(H.ssContent===T||H.ssFallback===T)){const K=G.vnode;E(P,K,K.scopeId,K.slotScopeIds,G.parent)}}},S=(P,T,O,B,G,H,K,q,J=0)=>{for(let ie=J;ie<P.length;ie++){const pe=P[ie]=q?Ir(P[ie]):Oi(P[ie]);v(null,pe,T,O,B,G,H,K,q)}},_=(P,T,O,B,G,H,K)=>{const q=T.el=P.el;let{patchFlag:J,dynamicChildren:ie,dirs:pe}=T;J|=P.patchFlag&16;const L=P.props||yt,R=T.props||yt;let j;if(O&&qr(O,!1),(j=R.onVnodeBeforeUpdate)&&Ri(j,O,T,P),pe&&$r(T,P,O,"beforeUpdate"),O&&qr(O,!0),(L.innerHTML&&R.innerHTML==null||L.textContent&&R.textContent==null)&&u(q,""),ie?x(P.dynamicChildren,ie,q,O,B,tf(T,G),H):K||Z(P,T,q,null,O,B,tf(T,G),H,!1),J>0){if(J&16)A(q,L,R,O,G);else if(J&2&&L.class!==R.class&&s(q,"class",null,R.class,G),J&4&&s(q,"style",L.style,R.style,G),J&8){const te=T.dynamicProps;for(let fe=0;fe<te.length;fe++){const re=te[fe],Ce=L[re],ve=R[re];(ve!==Ce||re==="value")&&s(q,re,Ce,ve,G,O)}}J&1&&P.children!==T.children&&u(q,T.children)}else!K&&ie==null&&A(q,L,R,O,G);((j=R.onVnodeUpdated)||pe)&&Zn(()=>{j&&Ri(j,O,T,P),pe&&$r(T,P,O,"updated")},B)},x=(P,T,O,B,G,H,K)=>{for(let q=0;q<T.length;q++){const J=P[q],ie=T[q],pe=J.el&&(J.type===Xt||!qo(J,ie)||J.shapeFlag&198)?h(J.el):O;v(J,ie,pe,null,B,G,H,K,!0)}},A=(P,T,O,B,G)=>{if(T!==O){if(T!==yt)for(const H in T)!ba(H)&&!(H in O)&&s(P,H,T[H],null,G,B);for(const H in O){if(ba(H))continue;const K=O[H],q=T[H];K!==q&&H!=="value"&&s(P,H,q,K,G,B)}"value"in O&&s(P,"value",T.value,O.value,G)}},D=(P,T,O,B,G,H,K,q,J)=>{const ie=T.el=P?P.el:a(""),pe=T.anchor=P?P.anchor:a("");let{patchFlag:L,dynamicChildren:R,slotScopeIds:j}=T;j&&(q=q?q.concat(j):j),P==null?(i(ie,O,B),i(pe,O,B),S(T.children||[],O,pe,G,H,K,q,J)):L>0&&L&64&&R&&P.dynamicChildren?(x(P.dynamicChildren,R,O,G,H,K,q),(T.key!=null||G&&T===G.subTree)&&E_(P,T,!0)):Z(P,T,O,pe,G,H,K,q,J)},k=(P,T,O,B,G,H,K,q,J)=>{T.slotScopeIds=q,P==null?T.shapeFlag&512?G.ctx.activate(T,O,B,K,J):W(T,O,B,G,H,K,J):Y(P,T,J)},W=(P,T,O,B,G,H,K)=>{const q=P.component=OS(P,B,G);if(l_(P)&&(q.ctx.renderer=F),FS(q,!1,K),q.asyncDep){if(G&&G.registerDep(q,z,K),!P.el){const J=q.subTree=Ht(pr);g(null,J,T,O),P.placeholder=J.el}}else z(q,P,T,O,G,H,K)},Y=(P,T,O)=>{const B=T.component=P.component;if(CS(P,T,O))if(B.asyncDep&&!B.asyncResolved){Q(B,T,O);return}else B.next=T,B.update();else T.el=P.el,B.vnode=T},z=(P,T,O,B,G,H,K)=>{const q=()=>{if(P.isMounted){let{next:L,bu:R,u:j,parent:te,vnode:fe}=P;{const Le=A_(P);if(Le){L&&(L.el=fe.el,Q(P,L,K)),Le.asyncDep.then(()=>{P.isUnmounted||q()});return}}let re=L,Ce;qr(P,!1),L?(L.el=fe.el,Q(P,L,K)):L=fe,R&&zc(R),(Ce=L.props&&L.props.onVnodeBeforeUpdate)&&Ri(Ce,te,L,fe),qr(P,!0);const ve=Fm(P),Pe=P.subTree;P.subTree=ve,v(Pe,ve,h(Pe.el),_e(Pe),P,G,H),L.el=ve.el,re===null&&RS(P,ve.el),j&&Zn(j,G),(Ce=L.props&&L.props.onVnodeUpdated)&&Zn(()=>Ri(Ce,te,L,fe),G)}else{let L;const{el:R,props:j}=T,{bm:te,m:fe,parent:re,root:Ce,type:ve}=P,Pe=wo(T);qr(P,!1),te&&zc(te),!Pe&&(L=j&&j.onVnodeBeforeMount)&&Ri(L,re,T),qr(P,!0);{Ce.ce&&Ce.ce._def.shadowRoot!==!1&&Ce.ce._injectChildStyle(ve);const Le=P.subTree=Fm(P);v(null,Le,O,B,P,G,H),T.el=Le.el}if(fe&&Zn(fe,G),!Pe&&(L=j&&j.onVnodeMounted)){const Le=T;Zn(()=>Ri(L,re,Le),G)}(T.shapeFlag&256||re&&wo(re.vnode)&&re.vnode.shapeFlag&256)&&P.a&&Zn(P.a,G),P.isMounted=!0,T=O=B=null}};P.scope.on();const J=P.effect=new zv(q);P.scope.off();const ie=P.update=J.run.bind(J),pe=P.job=J.runIfDirty.bind(J);pe.i=P,pe.id=P.uid,J.scheduler=()=>xp(pe),qr(P,!0),ie()},Q=(P,T,O)=>{T.component=P;const B=P.vnode.props;P.vnode=T,P.next=null,dS(P,T.props,B,O),vS(P,T.children,O),fr(),Pm(P),dr()},Z=(P,T,O,B,G,H,K,q,J=!1)=>{const ie=P&&P.children,pe=P?P.shapeFlag:0,L=T.children,{patchFlag:R,shapeFlag:j}=T;if(R>0){if(R&128){me(ie,L,O,B,G,H,K,q,J);return}else if(R&256){he(ie,L,O,B,G,H,K,q,J);return}}j&8?(pe&16&&ye(ie,G,H),L!==ie&&u(O,L)):pe&16?j&16?me(ie,L,O,B,G,H,K,q,J):ye(ie,G,H,!0):(pe&8&&u(O,""),j&16&&S(L,O,B,G,H,K,q,J))},he=(P,T,O,B,G,H,K,q,J)=>{P=P||Mo,T=T||Mo;const ie=P.length,pe=T.length,L=Math.min(ie,pe);let R;for(R=0;R<L;R++){const j=T[R]=J?Ir(T[R]):Oi(T[R]);v(P[R],j,O,null,G,H,K,q,J)}ie>pe?ye(P,G,H,!0,!1,L):S(T,O,B,G,H,K,q,J,L)},me=(P,T,O,B,G,H,K,q,J)=>{let ie=0;const pe=T.length;let L=P.length-1,R=pe-1;for(;ie<=L&&ie<=R;){const j=P[ie],te=T[ie]=J?Ir(T[ie]):Oi(T[ie]);if(qo(j,te))v(j,te,O,null,G,H,K,q,J);else break;ie++}for(;ie<=L&&ie<=R;){const j=P[L],te=T[R]=J?Ir(T[R]):Oi(T[R]);if(qo(j,te))v(j,te,O,null,G,H,K,q,J);else break;L--,R--}if(ie>L){if(ie<=R){const j=R+1,te=j<pe?T[j].el:B;for(;ie<=R;)v(null,T[ie]=J?Ir(T[ie]):Oi(T[ie]),O,te,G,H,K,q,J),ie++}}else if(ie>R)for(;ie<=L;)Ee(P[ie],G,H,!0),ie++;else{const j=ie,te=ie,fe=new Map;for(ie=te;ie<=R;ie++){const Oe=T[ie]=J?Ir(T[ie]):Oi(T[ie]);Oe.key!=null&&fe.set(Oe.key,ie)}let re,Ce=0;const ve=R-te+1;let Pe=!1,Le=0;const be=new Array(ve);for(ie=0;ie<ve;ie++)be[ie]=0;for(ie=j;ie<=L;ie++){const Oe=P[ie];if(Ce>=ve){Ee(Oe,G,H,!0);continue}let V;if(Oe.key!=null)V=fe.get(Oe.key);else for(re=te;re<=R;re++)if(be[re-te]===0&&qo(Oe,T[re])){V=re;break}V===void 0?Ee(Oe,G,H,!0):(be[V-te]=ie+1,V>=Le?Le=V:Pe=!0,v(Oe,T[V],O,null,G,H,K,q,J),Ce++)}const Ie=Pe?yS(be):Mo;for(re=Ie.length-1,ie=ve-1;ie>=0;ie--){const Oe=te+ie,V=T[Oe],se=T[Oe+1],Se=Oe+1<pe?se.el||se.placeholder:B;be[ie]===0?v(null,V,O,Se,G,H,K,q,J):Pe&&(re<0||ie!==Ie[re]?oe(V,O,Se,2):re--)}}},oe=(P,T,O,B,G=null)=>{const{el:H,type:K,transition:q,children:J,shapeFlag:ie}=P;if(ie&6){oe(P.component.subTree,T,O,B);return}if(ie&128){P.suspense.move(T,O,B);return}if(ie&64){K.move(P,T,O,F);return}if(K===Xt){i(H,T,O);for(let L=0;L<J.length;L++)oe(J[L],T,O,B);i(P.anchor,T,O);return}if(K===nf){y(P,T,O);return}if(B!==2&&ie&1&&q)if(B===0)q.beforeEnter(H),i(H,T,O),Zn(()=>q.enter(H),G);else{const{leave:L,delayLeave:R,afterLeave:j}=q,te=()=>{P.ctx.isUnmounted?r(H):i(H,T,O)},fe=()=>{H._isLeaving&&H[GM](!0),L(H,()=>{te(),j&&j()})};R?R(H,te,fe):fe()}else i(H,T,O)},Ee=(P,T,O,B=!1,G=!1)=>{const{type:H,props:K,ref:q,children:J,dynamicChildren:ie,shapeFlag:pe,patchFlag:L,dirs:R,cacheIndex:j}=P;if(L===-2&&(G=!1),q!=null&&(fr(),wa(q,null,O,P,!0),dr()),j!=null&&(T.renderCache[j]=void 0),pe&256){T.ctx.deactivate(P);return}const te=pe&1&&R,fe=!wo(P);let re;if(fe&&(re=K&&K.onVnodeBeforeUnmount)&&Ri(re,T,P),pe&6)ae(P.component,O,B);else{if(pe&128){P.suspense.unmount(O,B);return}te&&$r(P,null,T,"beforeUnmount"),pe&64?P.type.remove(P,T,O,F,B):ie&&!ie.hasOnce&&(H!==Xt||L>0&&L&64)?ye(ie,T,O,!1,!0):(H===Xt&&L&384||!G&&pe&16)&&ye(J,T,O),B&&Ve(P)}(fe&&(re=K&&K.onVnodeUnmounted)||te)&&Zn(()=>{re&&Ri(re,T,P),te&&$r(P,null,T,"unmounted")},O)},Ve=P=>{const{type:T,el:O,anchor:B,transition:G}=P;if(T===Xt){ze(O,B);return}if(T===nf){b(P);return}const H=()=>{r(O),G&&!G.persisted&&G.afterLeave&&G.afterLeave()};if(P.shapeFlag&1&&G&&!G.persisted){const{leave:K,delayLeave:q}=G,J=()=>K(O,H);q?q(P.el,H,J):J()}else H()},ze=(P,T)=>{let O;for(;P!==T;)O=f(P),r(P),P=O;r(T)},ae=(P,T,O)=>{const{bum:B,scope:G,job:H,subTree:K,um:q,m:J,a:ie}=P;Om(J),Om(ie),B&&zc(B),G.stop(),H&&(H.flags|=8,Ee(K,P,T,O)),q&&Zn(q,T),Zn(()=>{P.isUnmounted=!0},T)},ye=(P,T,O,B=!1,G=!1,H=0)=>{for(let K=H;K<P.length;K++)Ee(P[K],T,O,B,G)},_e=P=>{if(P.shapeFlag&6)return _e(P.component.subTree);if(P.shapeFlag&128)return P.suspense.next();const T=f(P.anchor||P.el),O=T&&T[VM];return O?f(O):T};let ue=!1;const I=(P,T,O)=>{P==null?T._vnode&&Ee(T._vnode,null,null,!0):v(T._vnode||null,P,T,null,null,null,O),T._vnode=P,ue||(ue=!0,Pm(),i_(),ue=!1)},F={p:v,um:Ee,m:oe,r:Ve,mt:W,mc:S,pc:Z,pbc:x,n:_e,o:n};return{render:I,hydrate:void 0,createApp:hS(I)}}function tf({type:n,props:e},t){return t==="svg"&&n==="foreignObject"||t==="mathml"&&n==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function qr({effect:n,job:e},t){t?(n.flags|=32,e.flags|=4):(n.flags&=-33,e.flags&=-5)}function xS(n,e){return(!n||n&&!n.pendingBranch)&&e&&!e.persisted}function E_(n,e,t=!1){const i=n.children,r=e.children;if($e(i)&&$e(r))for(let s=0;s<i.length;s++){const o=i[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=Ir(r[s]),a.el=o.el),!t&&a.patchFlag!==-2&&E_(o,a)),a.type===ah&&a.patchFlag!==-1&&(a.el=o.el),a.type===pr&&!a.el&&(a.el=o.el)}}function yS(n){const e=n.slice(),t=[0];let i,r,s,o,a;const l=n.length;for(i=0;i<l;i++){const c=n[i];if(c!==0){if(r=t[t.length-1],n[r]<c){e[i]=r,t.push(i);continue}for(s=0,o=t.length-1;s<o;)a=s+o>>1,n[t[a]]<c?s=a+1:o=a;c<n[t[s]]&&(s>0&&(e[i]=t[s-1]),t[s]=i)}}for(s=t.length,o=t[s-1];s-- >0;)t[s]=o,o=e[o];return t}function A_(n){const e=n.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:A_(e)}function Om(n){if(n)for(let e=0;e<n.length;e++)n[e].flags|=8}const bS=Symbol.for("v-scx"),MS=()=>Ms(bS);function Go(n,e){return sh(n,null,e)}function SS(n,e){return sh(n,null,{flush:"sync"})}function Lt(n,e,t){return sh(n,e,t)}function sh(n,e,t=yt){const{immediate:i,deep:r,flush:s,once:o}=t,a=dn({},t),l=e&&i||!e&&s!=="post";let c;if(ja){if(s==="sync"){const d=MS();c=d.__watcherHandles||(d.__watcherHandles=[])}else if(!l){const d=()=>{};return d.stop=ki,d.resume=ki,d.pause=ki,d}}const u=Rn;a.call=(d,p,v)=>Vi(d,u,p,v);let h=!1;s==="post"?a.scheduler=d=>{Zn(d,u&&u.suspense)}:s!=="sync"&&(h=!0,a.scheduler=(d,p)=>{p?d():xp(d)}),a.augmentJob=d=>{e&&(d.flags|=4),h&&(d.flags|=2,u&&(d.id=u.uid,d.i=u))};const f=OM(n,e,a);return ja&&(c?c.push(f):l&&f()),f}function wS(n,e,t){const i=this.proxy,r=Qt(n)?n.includes(".")?C_(i,n):()=>i[n]:n.bind(i,i);let s;st(e)?s=e:(s=e.handler,t=e);const o=gl(this),a=sh(r,s.bind(i),t);return o(),a}function C_(n,e){const t=e.split(".");return()=>{let i=n;for(let r=0;r<t.length&&i;r++)i=i[t[r]];return i}}function Wa(n,e,t=yt){const i=Hi(),r=hr(e),s=zr(e),o=R_(n,r),a=vp((l,c)=>{let u,h=yt,f;return SS(()=>{const d=n[r];Vn(u,d)&&(u=d,c())}),{get(){return l(),t.get?t.get(u):u},set(d){const p=t.set?t.set(d):d;if(!Vn(p,u)&&!(h!==yt&&Vn(d,h)))return;const v=i.vnode.props;v&&(e in v||r in v||s in v)&&(`onUpdate:${e}`in v||`onUpdate:${r}`in v||`onUpdate:${s}`in v)||(u=d,c()),i.emit(`update:${e}`,p),Vn(d,p)&&Vn(d,h)&&!Vn(p,f)&&c(),h=d,f=p}}});return a[Symbol.iterator]=()=>{let l=0;return{next(){return l<2?{value:l++?o||yt:a,done:!1}:{done:!0}}}},a}const R_=(n,e)=>e==="modelValue"||e==="model-value"?n.modelModifiers:n[`${e}Modifiers`]||n[`${hr(e)}Modifiers`]||n[`${zr(e)}Modifiers`];function TS(n,e,...t){if(n.isUnmounted)return;const i=n.vnode.props||yt;let r=t;const s=e.startsWith("update:"),o=s&&R_(i,e.slice(7));o&&(o.trim&&(r=t.map(u=>Qt(u)?u.trim():u)),o.number&&(r=t.map(eM)));let a,l=i[a=Zh(e)]||i[a=Zh(hr(e))];!l&&s&&(l=i[a=Zh(zr(e))]),l&&Vi(l,n,6,r);const c=i[a+"Once"];if(c){if(!n.emitted)n.emitted={};else if(n.emitted[a])return;n.emitted[a]=!0,Vi(c,n,6,r)}}function I_(n,e,t=!1){const i=e.emitsCache,r=i.get(n);if(r!==void 0)return r;const s=n.emits;let o={},a=!1;if(!st(n)){const l=c=>{const u=I_(c,e,!0);u&&(a=!0,dn(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),n.extends&&l(n.extends),n.mixins&&n.mixins.forEach(l)}return!s&&!a?(Ft(n)&&i.set(n,null),null):($e(s)?s.forEach(l=>o[l]=null):dn(o,s),Ft(n)&&i.set(n,o),o)}function oh(n,e){return!n||!$u(e)?!1:(e=e.slice(2).replace(/Once$/,""),Mt(n,e[0].toLowerCase()+e.slice(1))||Mt(n,zr(e))||Mt(n,e))}function Fm(n){const{type:e,vnode:t,proxy:i,withProxy:r,propsOptions:[s],slots:o,attrs:a,emit:l,render:c,renderCache:u,props:h,data:f,setupState:d,ctx:p,inheritAttrs:v}=n,m=Qc(n);let g,M;try{if(t.shapeFlag&4){const b=r||i,C=b;g=Oi(c.call(C,b,u,h,d,f,p)),M=a}else{const b=e;g=Oi(b.length>1?b(h,{attrs:a,slots:o,emit:l}):b(h,null)),M=e.props?a:ES(a)}}catch(b){Aa.length=0,nh(b,n,1),g=Ht(pr)}let y=g;if(M&&v!==!1){const b=Object.keys(M),{shapeFlag:C}=y;b.length&&C&7&&(s&&b.some(op)&&(M=AS(M,s)),y=Co(y,M,!1,!0))}return t.dirs&&(y=Co(y,null,!1,!0),y.dirs=y.dirs?y.dirs.concat(t.dirs):t.dirs),t.transition&&yp(y,t.transition),g=y,Qc(m),g}const ES=n=>{let e;for(const t in n)(t==="class"||t==="style"||$u(t))&&((e||(e={}))[t]=n[t]);return e},AS=(n,e)=>{const t={};for(const i in n)(!op(i)||!(i.slice(9)in e))&&(t[i]=n[i]);return t};function CS(n,e,t){const{props:i,children:r,component:s}=n,{props:o,children:a,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return i?Bm(i,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==i[f]&&!oh(c,f))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?Bm(i,o,c):!0:!!o;return!1}function Bm(n,e,t){const i=Object.keys(e);if(i.length!==Object.keys(n).length)return!0;for(let r=0;r<i.length;r++){const s=i[r];if(e[s]!==n[s]&&!oh(t,s))return!0}return!1}function RS({vnode:n,parent:e},t){for(;e;){const i=e.subTree;if(i.suspense&&i.suspense.activeBranch===n&&(i.el=n.el),i===n)(n=e.vnode).el=t,e=e.parent;else break}}const P_=n=>n.__isSuspense;function IS(n,e){e&&e.pendingBranch?$e(n)?e.effects.push(...n):e.effects.push(n):zM(n)}const Xt=Symbol.for("v-fgt"),ah=Symbol.for("v-txt"),pr=Symbol.for("v-cmt"),nf=Symbol.for("v-stc"),Aa=[];let Kn=null;function nt(n=!1){Aa.push(Kn=n?null:[])}function PS(){Aa.pop(),Kn=Aa[Aa.length-1]||null}let Xa=1;function zm(n,e=!1){Xa+=n,n<0&&Kn&&e&&(Kn.hasOnce=!0)}function L_(n){return n.dynamicChildren=Xa>0?Kn||Mo:null,PS(),Xa>0&&Kn&&Kn.push(n),n}function St(n,e,t,i,r,s){return L_(Zt(n,e,t,i,r,s,!0))}function ei(n,e,t,i,r){return L_(Ht(n,e,t,i,r,!0))}function Ya(n){return n?n.__v_isVNode===!0:!1}function qo(n,e){return n.type===e.type&&n.key===e.key}const D_=({key:n})=>n??null,kc=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?Qt(n)||It(n)||st(n)?{i:yn,r:n,k:e,f:!!t}:n:null);function Zt(n,e=null,t=null,i=0,r=null,s=n===Xt?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&D_(e),ref:e&&kc(e),scopeId:s_,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:yn};return a?(wp(l,t),s&128&&n.normalize(l)):t&&(l.shapeFlag|=Qt(t)?8:16),Xa>0&&!o&&Kn&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Kn.push(l),l}const Ht=LS;function LS(n,e=null,t=null,i=0,r=null,s=!1){if((!n||n===nS)&&(n=pr),Ya(n)){const a=Co(n,e,!0);return t&&wp(a,t),Xa>0&&!s&&Kn&&(a.shapeFlag&6?Kn[Kn.indexOf(n)]=a:Kn.push(a)),a.patchFlag=-2,a}if(kS(n)&&(n=n.__vccOpts),e){e=DS(e);let{class:a,style:l}=e;a&&!Qt(a)&&(e.class=fl(a)),Ft(l)&&(mp(l)&&!$e(l)&&(l=dn({},l)),e.style=Ku(l))}const o=Qt(n)?1:P_(n)?128:HM(n)?64:Ft(n)?4:st(n)?2:0;return Zt(n,e,t,i,r,o,s,!0)}function DS(n){return n?mp(n)||x_(n)?dn({},n):n:null}function Co(n,e,t=!1,i=!1){const{props:r,ref:s,patchFlag:o,children:a,transition:l}=n,c=e?N_(r||{},e):r,u={__v_isVNode:!0,__v_skip:!0,type:n.type,props:c,key:c&&D_(c),ref:e&&e.ref?t&&s?$e(s)?s.concat(kc(e)):[s,kc(e)]:kc(e):s,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:a,target:n.target,targetStart:n.targetStart,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==Xt?o===-1?16:o|16:o,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:l,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&Co(n.ssContent),ssFallback:n.ssFallback&&Co(n.ssFallback),placeholder:n.placeholder,el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce};return l&&i&&yp(u,l.clone(u)),u}function fa(n=" ",e=0){return Ht(ah,null,n,e)}function U_(n="",e=!1){return e?(nt(),ei(pr,null,n)):Ht(pr,null,n)}function Oi(n){return n==null||typeof n=="boolean"?Ht(pr):$e(n)?Ht(Xt,null,n.slice()):Ya(n)?Ir(n):Ht(ah,null,String(n))}function Ir(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:Co(n)}function wp(n,e){let t=0;const{shapeFlag:i}=n;if(e==null)e=null;else if($e(e))t=16;else if(typeof e=="object")if(i&65){const r=e.default;r&&(r._c&&(r._d=!1),wp(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!x_(e)?e._ctx=yn:r===3&&yn&&(yn.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else st(e)?(e={default:e,_ctx:yn},t=32):(e=String(e),i&64?(t=16,e=[fa(e)]):t=8);n.children=e,n.shapeFlag|=t}function N_(...n){const e={};for(let t=0;t<n.length;t++){const i=n[t];for(const r in i)if(r==="class")e.class!==i.class&&(e.class=fl([e.class,i.class]));else if(r==="style")e.style=Ku([e.style,i.style]);else if($u(r)){const s=e[r],o=i[r];o&&s!==o&&!($e(s)&&s.includes(o))&&(e[r]=s?[].concat(s,o):o)}else r!==""&&(e[r]=i[r])}return e}function Ri(n,e,t,i=null){Vi(n,e,7,[t,i])}const US=g_();let NS=0;function OS(n,e,t){const i=n.type,r=(e?e.appContext:n.appContext)||US,s={uid:NS++,vnode:n,type:i,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Fv(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:b_(i,r),emitsOptions:I_(i,r),emit:null,emitted:null,propsDefaults:yt,inheritAttrs:i.inheritAttrs,ctx:yt,data:yt,props:yt,attrs:yt,slots:yt,refs:yt,setupState:yt,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=TS.bind(null,s),n.ce&&n.ce(s),s}let Rn=null;const Hi=()=>Rn||yn;let iu,wd;{const n=Zu(),e=(t,i)=>{let r;return(r=n[t])||(r=n[t]=[]),r.push(i),s=>{r.length>1?r.forEach(o=>o(s)):r[0](s)}};iu=e("__VUE_INSTANCE_SETTERS__",t=>Rn=t),wd=e("__VUE_SSR_SETTERS__",t=>ja=t)}const gl=n=>{const e=Rn;return iu(n),n.scope.on(),()=>{n.scope.off(),iu(e)}},km=()=>{Rn&&Rn.scope.off(),iu(null)};function O_(n){return n.vnode.shapeFlag&4}let ja=!1;function FS(n,e=!1,t=!1){e&&wd(e);const{props:i,children:r}=n.vnode,s=O_(n);fS(n,i,s,e),gS(n,r,t||e);const o=s?BS(n,e):void 0;return e&&wd(!1),o}function BS(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=new Proxy(n.ctx,iS);const{setup:i}=t;if(i){fr();const r=n.setupContext=i.length>1?B_(n):null,s=gl(n),o=ml(i,n,0,[n.props,r]),a=Lv(o);if(dr(),s(),(a||n.sp)&&!wo(n)&&a_(n),a){if(o.then(km,km),e)return o.then(l=>{Vm(n,l)}).catch(l=>{nh(l,n,0)});n.asyncDep=o}else Vm(n,o)}else F_(n)}function Vm(n,e,t){st(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:Ft(e)&&(n.setupState=e_(e)),F_(n)}function F_(n,e,t){const i=n.type;n.render||(n.render=i.render||ki);{const r=gl(n);fr();try{sS(n)}finally{dr(),r()}}}const zS={get(n,e){return xn(n,"get",""),n[e]}};function B_(n){const e=t=>{n.exposed=t||{}};return{attrs:new Proxy(n.attrs,zS),slots:n.slots,emit:n.emit,expose:e}}function lh(n){return n.exposed?n.exposeProxy||(n.exposeProxy=new Proxy(e_(gp(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in Ta)return Ta[t](n)},has(e,t){return t in e||t in Ta}})):n.proxy}function kS(n){return st(n)&&"__vccOpts"in n}const it=(n,e)=>UM(n,e,ja);function Hm(n,e,t){const i=arguments.length;return i===2?Ft(e)&&!$e(e)?Ya(e)?Ht(n,null,[e]):Ht(n,e):Ht(n,null,e):(i>3?t=Array.prototype.slice.call(arguments,2):i===3&&Ya(t)&&(t=[t]),Ht(n,e,t))}const VS="3.5.20";/**
* @vue/runtime-dom v3.5.20
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Td;const Gm=typeof window<"u"&&window.trustedTypes;if(Gm)try{Td=Gm.createPolicy("vue",{createHTML:n=>n})}catch{}const z_=Td?n=>Td.createHTML(n):n=>n,HS="http://www.w3.org/2000/svg",GS="http://www.w3.org/1998/Math/MathML",tr=typeof document<"u"?document:null,Wm=tr&&tr.createElement("template"),WS={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,i)=>{const r=e==="svg"?tr.createElementNS(HS,n):e==="mathml"?tr.createElementNS(GS,n):t?tr.createElement(n,{is:t}):tr.createElement(n);return n==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:n=>tr.createTextNode(n),createComment:n=>tr.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>tr.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,i,r,s){const o=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{Wm.innerHTML=z_(i==="svg"?`<svg>${n}</svg>`:i==="mathml"?`<math>${n}</math>`:n);const a=Wm.content;if(i==="svg"||i==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},XS=Symbol("_vtc");function YS(n,e,t){const i=n[XS];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}const Xm=Symbol("_vod"),jS=Symbol("_vsh"),$S=Symbol(""),qS=/(^|;)\s*display\s*:/;function ZS(n,e,t){const i=n.style,r=Qt(t);let s=!1;if(t&&!r){if(e)if(Qt(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();t[a]==null&&Vc(i,a,"")}else for(const o in e)t[o]==null&&Vc(i,o,"");for(const o in t)o==="display"&&(s=!0),Vc(i,o,t[o])}else if(r){if(e!==t){const o=i[$S];o&&(t+=";"+o),i.cssText=t,s=qS.test(t)}}else e&&n.removeAttribute("style");Xm in n&&(n[Xm]=s?i.display:"",n[jS]&&(i.display="none"))}const Ym=/\s*!important$/;function Vc(n,e,t){if($e(t))t.forEach(i=>Vc(n,e,i));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const i=KS(n,e);Ym.test(t)?n.setProperty(zr(i),t.replace(Ym,""),"important"):n[i]=t}}const jm=["Webkit","Moz","ms"],rf={};function KS(n,e){const t=rf[e];if(t)return t;let i=hr(e);if(i!=="filter"&&i in n)return rf[e]=i;i=Dv(i);for(let r=0;r<jm.length;r++){const s=jm[r]+i;if(s in n)return rf[e]=s}return e}const $m="http://www.w3.org/1999/xlink";function qm(n,e,t,i,r,s=oM(e)){i&&e.startsWith("xlink:")?t==null?n.removeAttributeNS($m,e.slice(6,e.length)):n.setAttributeNS($m,e,t):t==null||s&&!Nv(t)?n.removeAttribute(e):n.setAttribute(e,s?"":ur(t)?String(t):t)}function Zm(n,e,t,i,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(n[e]=e==="innerHTML"?z_(t):t);return}const s=n.tagName;if(e==="value"&&s!=="PROGRESS"&&!s.includes("-")){const a=s==="OPTION"?n.getAttribute("value")||"":n.value,l=t==null?n.type==="checkbox"?"on":"":String(t);(a!==l||!("_value"in n))&&(n.value=l),t==null&&n.removeAttribute(e),n._value=t;return}let o=!1;if(t===""||t==null){const a=typeof n[e];a==="boolean"?t=Nv(t):t==null&&a==="string"?(t="",o=!0):a==="number"&&(t=0,o=!0)}try{n[e]=t}catch{}o&&n.removeAttribute(r||e)}function k_(n,e,t,i){n.addEventListener(e,t,i)}function JS(n,e,t,i){n.removeEventListener(e,t,i)}const Km=Symbol("_vei");function QS(n,e,t,i,r=null){const s=n[Km]||(n[Km]={}),o=s[e];if(i&&o)o.value=i;else{const[a,l]=e1(e);if(i){const c=s[e]=i1(i,r);k_(n,a,c,l)}else o&&(JS(n,a,o,l),s[e]=void 0)}}const Jm=/(?:Once|Passive|Capture)$/;function e1(n){let e;if(Jm.test(n)){e={};let i;for(;i=n.match(Jm);)n=n.slice(0,n.length-i[0].length),e[i[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):zr(n.slice(2)),e]}let sf=0;const t1=Promise.resolve(),n1=()=>sf||(t1.then(()=>sf=0),sf=Date.now());function i1(n,e){const t=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=t.attached)return;Vi(r1(i,t.value),e,5,[i])};return t.value=n,t.attached=n1(),t}function r1(n,e){if($e(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(i=>r=>!r._stopped&&i&&i(r))}else return e}const Qm=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&n.charCodeAt(2)>96&&n.charCodeAt(2)<123,s1=(n,e,t,i,r,s)=>{const o=r==="svg";e==="class"?YS(n,i,o):e==="style"?ZS(n,t,i):$u(e)?op(e)||QS(n,e,t,i,s):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):o1(n,e,i,o))?(Zm(n,e,i),!n.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&qm(n,e,i,o,s,e!=="value")):n._isVueCE&&(/[A-Z]/.test(e)||!Qt(i))?Zm(n,hr(e),i,s,e):(e==="true-value"?n._trueValue=i:e==="false-value"&&(n._falseValue=i),qm(n,e,i,o))};function o1(n,e,t,i){if(i)return!!(e==="innerHTML"||e==="textContent"||e in n&&Qm(e)&&st(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=n.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return Qm(e)&&Qt(t)?!1:e in n}const eg=n=>{const e=n.props["onUpdate:modelValue"]||!1;return $e(e)?t=>zc(e,t):e},of=Symbol("_assign"),a1={deep:!0,created(n,e,t){n[of]=eg(t),k_(n,"change",()=>{const i=n._modelValue,r=l1(n),s=n.checked,o=n[of];if($e(i)){const a=Ov(i,r),l=a!==-1;if(s&&!l)o(i.concat(r));else if(!s&&l){const c=[...i];c.splice(a,1),o(c)}}else if(lp(i)){const a=new Set(i);s?a.add(r):a.delete(r),o(a)}else o(V_(n,s))})},mounted:tg,beforeUpdate(n,e,t){n[of]=eg(t),tg(n,e,t)}};function tg(n,{value:e,oldValue:t},i){n._modelValue=e;let r;if($e(e))r=Ov(e,i.props.value)>-1;else if(lp(e))r=e.has(i.props.value);else{if(e===t)return;r=Ju(e,V_(n,!0))}n.checked!==r&&(n.checked=r)}function l1(n){return"_value"in n?n._value:n.value}function V_(n,e){const t=e?"_trueValue":"_falseValue";return t in n?n[t]:e}const c1=["ctrl","shift","alt","meta"],u1={stop:n=>n.stopPropagation(),prevent:n=>n.preventDefault(),self:n=>n.target!==n.currentTarget,ctrl:n=>!n.ctrlKey,shift:n=>!n.shiftKey,alt:n=>!n.altKey,meta:n=>!n.metaKey,left:n=>"button"in n&&n.button!==0,middle:n=>"button"in n&&n.button!==1,right:n=>"button"in n&&n.button!==2,exact:(n,e)=>c1.some(t=>n[`${t}Key`]&&!e.includes(t))},_o=(n,e)=>{const t=n._withMods||(n._withMods={}),i=e.join(".");return t[i]||(t[i]=((r,...s)=>{for(let o=0;o<e.length;o++){const a=u1[e[o]];if(a&&a(r,e))return}return n(r,...s)}))},h1=dn({patchProp:s1},WS);let ng;function H_(){return ng||(ng=T_(h1))}const f1=((...n)=>{H_().render(...n)}),d1=((...n)=>{const e=H_().createApp(...n),{mount:t}=e;return e.mount=i=>{const r=m1(i);if(!r)return;const s=e._component;!st(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const o=t(r,!1,p1(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e});function p1(n){if(n instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&n instanceof MathMLElement)return"mathml"}function m1(n){return Qt(n)?document.querySelector(n):n}const g1={class:"intersection"},v1=["cx","cy","r"],_1=["x1","y1","x2","y2","stroke"],Zo=13,x1=en({__name:"DrawingIntersection",props:{topLine:{},intersectionPoint:{},lineColor:{}},setup(n){const e=n,t=it(()=>{const s=e.topLine.p2.x-e.topLine.p1.x,o=e.topLine.p2.y-e.topLine.p1.y,a=Math.sqrt(s*s+o*o);return{x:s/a,y:o/a}}),i=it(()=>({x:e.intersectionPoint.x-t.value.x*Zo/2,y:e.intersectionPoint.y-t.value.y*Zo/2})),r=it(()=>({x:e.intersectionPoint.x+t.value.x*Zo/2,y:e.intersectionPoint.y+t.value.y*Zo/2}));return(s,o)=>(nt(),St("g",g1,[Zt("circle",{cx:s.intersectionPoint.x,cy:s.intersectionPoint.y,r:Zo/2,fill:"white"},null,8,v1),Zt("line",{class:"drawing-line",x1:i.value.x,y1:i.value.y,x2:r.value.x,y2:r.value.y,stroke:s.lineColor||"black"},null,8,_1)]))}}),vl=(n,e)=>{const t=n.__vccOpts||n;for(const[i,r]of e)t[i]=r;return t},y1=vl(x1,[["__scopeId","data-v-e4d34b22"]]),b1=["x1","y1","x2","y2","stroke"],M1=en({__name:"DrawingLine",props:{line:{},color:{}},setup(n){return(e,t)=>(nt(),St("line",{class:"drawing-line",x1:e.line.p1.x,y1:e.line.p1.y,x2:e.line.p2.x,y2:e.line.p2.y,stroke:e.color||"black"},null,8,b1))}});function S1(n,e,t=2){const i=e&&e.length,r=i?e[0]*t:n.length;let s=G_(n,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c;if(i&&(s=C1(n,e,s,t)),n.length>80*t){a=1/0,l=1/0;let u=-1/0,h=-1/0;for(let f=t;f<r;f+=t){const d=n[f],p=n[f+1];d<a&&(a=d),p<l&&(l=p),d>u&&(u=d),p>h&&(h=p)}c=Math.max(u-a,h-l),c=c!==0?32767/c:0}return $a(s,o,t,a,l,c,0),o}function G_(n,e,t,i,r){let s;if(r===z1(n,e,t,i)>0)for(let o=e;o<t;o+=i)s=ig(o/i|0,n[o],n[o+1],s);else for(let o=t-i;o>=e;o-=i)s=ig(o/i|0,n[o],n[o+1],s);return s&&Ro(s,s.next)&&(Za(s),s=s.next),s}function Is(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(Ro(t,t.next)||kt(t.prev,t,t.next)===0)){if(Za(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function $a(n,e,t,i,r,s,o){if(!n)return;!o&&s&&D1(n,i,r,s);let a=n;for(;n.prev!==n.next;){const l=n.prev,c=n.next;if(s?T1(n,i,r,s):w1(n)){e.push(l.i,n.i,c.i),Za(n),n=c.next,a=c.next;continue}if(n=c,n===a){o?o===1?(n=E1(Is(n),e),$a(n,e,t,i,r,s,2)):o===2&&A1(n,e,t,i,r,s):$a(Is(n),e,t,i,r,s,1);break}}}function w1(n){const e=n.prev,t=n,i=n.next;if(kt(e,t,i)>=0)return!1;const r=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,u=Math.min(r,s,o),h=Math.min(a,l,c),f=Math.max(r,s,o),d=Math.max(a,l,c);let p=i.next;for(;p!==e;){if(p.x>=u&&p.x<=f&&p.y>=h&&p.y<=d&&da(r,a,s,l,o,c,p.x,p.y)&&kt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function T1(n,e,t,i){const r=n.prev,s=n,o=n.next;if(kt(r,s,o)>=0)return!1;const a=r.x,l=s.x,c=o.x,u=r.y,h=s.y,f=o.y,d=Math.min(a,l,c),p=Math.min(u,h,f),v=Math.max(a,l,c),m=Math.max(u,h,f),g=Ed(d,p,e,t,i),M=Ed(v,m,e,t,i);let y=n.prevZ,b=n.nextZ;for(;y&&y.z>=g&&b&&b.z<=M;){if(y.x>=d&&y.x<=v&&y.y>=p&&y.y<=m&&y!==r&&y!==o&&da(a,u,l,h,c,f,y.x,y.y)&&kt(y.prev,y,y.next)>=0||(y=y.prevZ,b.x>=d&&b.x<=v&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&da(a,u,l,h,c,f,b.x,b.y)&&kt(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;y&&y.z>=g;){if(y.x>=d&&y.x<=v&&y.y>=p&&y.y<=m&&y!==r&&y!==o&&da(a,u,l,h,c,f,y.x,y.y)&&kt(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;b&&b.z<=M;){if(b.x>=d&&b.x<=v&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&da(a,u,l,h,c,f,b.x,b.y)&&kt(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function E1(n,e){let t=n;do{const i=t.prev,r=t.next.next;!Ro(i,r)&&X_(i,t,t.next,r)&&qa(i,r)&&qa(r,i)&&(e.push(i.i,t.i,r.i),Za(t),Za(t.next),t=n=r),t=t.next}while(t!==n);return Is(t)}function A1(n,e,t,i,r,s){let o=n;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&O1(o,a)){let l=Y_(o,a);o=Is(o,o.next),l=Is(l,l.next),$a(o,e,t,i,r,s,0),$a(l,e,t,i,r,s,0);return}a=a.next}o=o.next}while(o!==n)}function C1(n,e,t,i){const r=[];for(let s=0,o=e.length;s<o;s++){const a=e[s]*i,l=s<o-1?e[s+1]*i:n.length,c=G_(n,a,l,i,!1);c===c.next&&(c.steiner=!0),r.push(N1(c))}r.sort(R1);for(let s=0;s<r.length;s++)t=I1(r[s],t);return t}function R1(n,e){let t=n.x-e.x;if(t===0&&(t=n.y-e.y,t===0)){const i=(n.next.y-n.y)/(n.next.x-n.x),r=(e.next.y-e.y)/(e.next.x-e.x);t=i-r}return t}function I1(n,e){const t=P1(n,e);if(!t)return e;const i=Y_(t,n);return Is(i,i.next),Is(t,t.next)}function P1(n,e){let t=e;const i=n.x,r=n.y;let s=-1/0,o;if(Ro(n,t))return t;do{if(Ro(n,t.next))return t.next;if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const h=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=i&&h>s&&(s=h,o=t.x<t.next.x?t:t.next,h===i))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let u=1/0;t=o;do{if(i>=t.x&&t.x>=l&&i!==t.x&&W_(r<c?i:s,r,l,c,r<c?s:i,r,t.x,t.y)){const h=Math.abs(r-t.y)/(i-t.x);qa(t,n)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&L1(o,t)))&&(o=t,u=h)}t=t.next}while(t!==a);return o}function L1(n,e){return kt(n.prev,n,e.prev)<0&&kt(e.next,n,n.next)<0}function D1(n,e,t,i){let r=n;do r.z===0&&(r.z=Ed(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,U1(r)}function U1(n){let e,t=1;do{let i=n,r;n=null;let s=null;for(e=0;i;){e++;let o=i,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||i.z<=o.z)?(r=i,i=i.nextZ,a--):(r=o,o=o.nextZ,l--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;i=o}s.nextZ=null,t*=2}while(e>1);return n}function Ed(n,e,t,i,r){return n=(n-t)*r|0,e=(e-i)*r|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function N1(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function W_(n,e,t,i,r,s,o,a){return(r-o)*(e-a)>=(n-o)*(s-a)&&(n-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(r-o)*(i-a)}function da(n,e,t,i,r,s,o,a){return!(n===o&&e===a)&&W_(n,e,t,i,r,s,o,a)}function O1(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!F1(n,e)&&(qa(n,e)&&qa(e,n)&&B1(n,e)&&(kt(n.prev,n,e.prev)||kt(n,e.prev,e))||Ro(n,e)&&kt(n.prev,n,n.next)>0&&kt(e.prev,e,e.next)>0)}function kt(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function Ro(n,e){return n.x===e.x&&n.y===e.y}function X_(n,e,t,i){const r=Bl(kt(n,e,t)),s=Bl(kt(n,e,i)),o=Bl(kt(t,i,n)),a=Bl(kt(t,i,e));return!!(r!==s&&o!==a||r===0&&Fl(n,t,e)||s===0&&Fl(n,i,e)||o===0&&Fl(t,n,i)||a===0&&Fl(t,e,i))}function Fl(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function Bl(n){return n>0?1:n<0?-1:0}function F1(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&X_(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function qa(n,e){return kt(n.prev,n,n.next)<0?kt(n,e,n.next)>=0&&kt(n,n.prev,e)>=0:kt(n,e,n.prev)<0||kt(n,n.next,e)<0}function B1(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function Y_(n,e){const t=Ad(n.i,n.x,n.y),i=Ad(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function ig(n,e,t,i){const r=Ad(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Za(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function Ad(n,e,t){return{i:n,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function z1(n,e,t,i){let r=0;for(let s=e,o=t-i;s<t;s+=i)r+=(n[o]-n[s])*(n[s+1]+n[o+1]),o=s;return r}let k1=class{static triangulate(e,t,i=2){return S1(e,t,i)}};const j_="closing-point";function $_(n,e){return{...n[0],id:`${e}-${j_}`,knotId:e}}function V1(n){return n.id.endsWith("-0")}function H1(n){return n.id.endsWith(j_)}function rg(n,e,t){return[n,e.id,t.id].join("-")}function q_(n){if(n.points.length<2)return[];const e=[];for(let t=0;t<n.points.length-1;t++){const i=n.points[t],r=n.points[t+1];e.push({id:rg(n.id,i,r),p1:i,p2:r,knotId:n.id})}if(n.isClosed&&n.points.length>2){const t=n.points[n.points.length-1],i=$_(n.points,n.id);e.push({id:rg(n.id,t,i),p1:t,p2:i,knotId:n.id})}return e}function G1(n,e){if(n.p1===e.p1||n.p1===e.p2||n.p2===e.p1||n.p2===e.p2)return null;const t=(n.p1.x-n.p2.x)*(e.p1.y-e.p2.y)-(n.p1.y-n.p2.y)*(e.p1.x-e.p2.x);if(t===0)return null;const i=((n.p1.x-e.p1.x)*(e.p1.y-e.p2.y)-(n.p1.y-e.p1.y)*(e.p1.x-e.p2.x))/t,r=((n.p1.x-e.p1.x)*(n.p1.y-n.p2.y)-(n.p1.y-e.p1.y)*(n.p1.x-n.p2.x))/t;return i<0||i>1||r<0||r>1?null:{x:n.p1.x+i*(n.p2.x-n.p1.x),y:n.p1.y+i*(n.p2.y-n.p1.y),linesRatios:{[n.id]:i,[e.id]:r}}}function Z_(n,e){const t=[],i=n.map(r=>q_({id:r.id,points:r.points,isClosed:r.isClosed})).flat();for(let r=0;r<i.length;r++)for(let s=r+1;s<i.length;s++){const o=i[r],a=i[s];if(V1(o.p1)&&H1(a.p2))continue;const l=`inter-${o.id}-${a.id}`,c=G1(o,a),u=e.has(l);if(c){const h=u?o:a,f=u?a:o;t.push({id:l,topLineKnotId:h.knotId,bottomLineKnotId:f.knotId,topLine:h,bottomLine:f,point:c,isFlipped:u,isWithinKnot:h.knotId===f.knotId})}}return t}function Cd(n,e){const t=e.createSVGPoint();t.x=n.clientX,t.y=n.clientY;const i=e.getScreenCTM();if(i){const{x:r,y:s}=t.matrixTransform(i.inverse());return{x:r,y:s}}return null}function W1(n,e){const t=n.id,i=e.filter(o=>o.topLineKnotId===t||o.bottomLineKnotId===t);let r=[...n.points];n.isClosed&&r.length>2&&r.push($_(r,n.id));const s=(o,a)=>{const l=a?o.topLine:o.bottomLine,c=o.point.linesRatios[l.id];let u=r.findIndex(f=>f.id===l.p2.id);const h=f=>f?f.point.linesRatios[l.id]>c:!1;for(;h(r[u-1].intersection);)u--;return u};for(let o of i){const a=`${o.id}-top`,l=o.id;if(o.topLineKnotId===t){const c=s(o,!0),u={...o.point,id:a,intersectionParallelId:l,intersection:o,isTop:!0,knotId:t};r.splice(c,0,u)}if(o.bottomLineKnotId===t){const c=s(o,!1),u={...o.point,id:l,intersectionParallelId:a,intersection:o,isTop:!1,knotId:t};r.splice(c,0,u)}}for(let o=r.length-1;o>=0;o--)if(r[o].intersection){const a=r[o-1]||r[r.length-1],l=r[o+1]||r[0],c={id:`pre-${r[o].id}`,x:(r[o].x+a.x)/2,y:(r[o].y+a.y)/2,isIntersectionSep:!0,knotId:n.id},u={id:`post-${r[o].id}`,x:(r[o].x+l.x)/2,y:(r[o].y+l.y)/2,isIntersectionSep:!0,knotId:n.id};r.splice(o+1,0,u),r.splice(o,0,c)}return r}function X1(n){const e=n.topLine.p2.x-n.topLine.p1.x,t=n.topLine.p2.y-n.topLine.p1.y,i=n.bottomLine.p2.x-n.bottomLine.p1.x,r=n.bottomLine.p2.y-n.bottomLine.p1.y;return Math.sign(e*r-t*i)}function Y1(n){if(new Set(n.map(a=>a.id)).size<n.length)throw new Error("points must have unique ids");const e=[],t=new Set;if(!n[0])return e;const r=new Set,s=a=>{const l=n.findIndex(u=>u.id===a.id),c=n[l+1]||n[0];if(c.knotId!==a.knotId)return null;if(a.intersection?.isWithinKnot){const u=n.findIndex(h=>h.id===a.intersectionParallelId);return r.has(a.intersection.id)?c:n[u+1]}if(c.intersection){const u=n.findIndex(d=>d.id===c.intersectionParallelId),h=n[u];if(!h)return console.warn(`could not find parallel point for intersection: ${c.id}`),c;if(c.isTop&&!t.has(c.intersectionParallelId)||!c.isTop&&t.has(c.id))return r.add(c.intersection.id),h.knotId===a.knotId?h:n[l+2]||n[0]}return c},o=(a,l)=>{l.push(a),t.add(a.id);const c=s(a);c&&!t.has(c.id)&&o(c,l)};for(;t.size<n.length;)for(const a of n)if(!t.has(a.id)){if(a.isTop&&!t.has(a.intersectionParallelId))continue;const l=[];if(o(a,l),l.length>0){const c=l.filter(u=>u.intersection&&!u.isTop&&!u.intersection.isWithinKnot);e.length===0&&c.length>0?(e.push(c),e.push(l.filter(u=>!c.includes(u)))):e.push(l)}}if(e[0].every(a=>a.intersection&&!a.isTop)&&e[0][0].knotId===e[1][0].knotId)for(const a of[...e[0]]){const l=n.findIndex(u=>u.id===a.id),c=n[l-1];e[1].includes(c)&&(e[1].splice(e[1].indexOf(c)+1,0,a),e[0].splice(e[0].indexOf(a),1))}return e.filter(a=>a.length>0)}function j1(n,e){if(n.length<3)return[];const t=n,i=t.map(a=>e(a,t.indexOf(a))),r=i.map(([a,l,c])=>[a,c]),s=k1.triangulate(r.flat(),[],2),o=[];for(let a=0;a<s.length;a+=3){const[l,c,u]=s.slice(a,a+3).sort((h,f)=>h-f);o.push([i[l],i[c],i[u],i[l]])}return o}function pa(n,e){return n.findIndex(t=>t.some(i=>i.id===e.id&&i.knotId===e.knotId))}function $1(n,e,t){const i=new Set,r=[],s=pa.bind(null,t);for(let o=0;o<n.length-1;o++){const a=n[o];if(a.intersection?.isWithinKnot&&!i.has(a.intersection.id)){const l=a,c=n.findIndex(v=>v.id===l.intersectionParallelId);let u=X1(a.intersection),h=n[o+u];s(l)===s(h)&&(u=-u,h=n[o+u]);const f=n[c],d=n[c+u];if(i.add(l.id),i.add(f.id),!h||!d)throw new Error(`could not calculate loop for intersection: ${a.intersection.id}`);const p=[e(l,o),e(h,o+u),e(f,c),e(d,c+u)];r.push([p[3],p[0],p[2]]),r.push([p[1],p[0],p[2]].reverse())}}return r}function q1(n){return dl()?(Qu(n),!0):!1}const K_=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const Z1=Object.prototype.toString,K1=n=>Z1.call(n)==="[object Object]",sg=()=>{};function J1(n,e){function t(...i){return new Promise((r,s)=>{Promise.resolve(n(()=>e.apply(this,i),{fn:e,thisArg:this,args:i})).then(r).catch(s)})}return t}function Q1(...n){let e=0,t,i=!0,r=sg,s,o,a,l,c;!It(n[0])&&typeof n[0]=="object"?{delay:o,trailing:a=!0,leading:l=!0,rejectOnCancel:c=!1}=n[0]:[o,a=!0,l=!0,c=!1]=n;const u=()=>{t&&(clearTimeout(t),t=void 0,r(),r=sg)};return f=>{const d=dt(o),p=Date.now()-e,v=()=>s=f();return u(),d<=0?(e=Date.now(),v()):(p>d&&(l||!i)?(e=Date.now(),v()):a&&(s=new Promise((m,g)=>{r=c?g:m,t=setTimeout(()=>{e=Date.now(),i=!0,m(v()),u()},Math.max(0,d-p))})),!l&&!t&&(t=setTimeout(()=>i=!0,d)),i=!1,s)}}function af(n){return Array.isArray(n)?n:[n]}function ew(n,e=200,t=!1,i=!0,r=!1){return J1(Q1(e,t,i,r),n)}function tw(n,e={}){if(!It(n))return kr(n);const t=Array.isArray(n.value)?Array.from({length:n.value.length}):{};for(const i in n.value)t[i]=vp(()=>({get(){return n.value[i]},set(r){var s;if((s=dt(e.replaceRef))!=null?s:!0)if(Array.isArray(n.value)){const a=[...n.value];a[i]=r,n.value=a}else{const a={...n.value,[i]:r};Object.setPrototypeOf(a,Object.getPrototypeOf(n.value)),n.value=a}else n.value[i]=r}}));return t}function nw(n,e,t){return Lt(n,e,{...t,immediate:!0})}const Tp=K_?window:void 0;function J_(n){var e;const t=dt(n);return(e=t?.$el)!=null?e:t}function si(...n){const e=[],t=()=>{e.forEach(a=>a()),e.length=0},i=(a,l,c,u)=>(a.addEventListener(l,c,u),()=>a.removeEventListener(l,c,u)),r=it(()=>{const a=af(dt(n[0])).filter(l=>l!=null);return a.every(l=>typeof l!="string")?a:void 0}),s=nw(()=>{var a,l;return[(l=(a=r.value)==null?void 0:a.map(c=>J_(c)))!=null?l:[Tp].filter(c=>c!=null),af(dt(r.value?n[1]:n[0])),af(Ge(r.value?n[2]:n[1])),dt(r.value?n[3]:n[2])]},([a,l,c,u])=>{if(t(),!a?.length||!l?.length||!c?.length)return;const h=K1(u)?{...u}:u;e.push(...a.flatMap(f=>l.flatMap(d=>c.map(p=>i(f,d,p,h)))))},{flush:"post"}),o=()=>{s(),t()};return q1(t),o}function iw(n,e={}){var t;const{pointerTypes:i,preventDefault:r,stopPropagation:s,exact:o,onMove:a,onEnd:l,onStart:c,initialValue:u,axis:h="both",draggingElement:f=Tp,containerElement:d,handle:p=n,buttons:v=[0]}=e,m=Tt((t=dt(u))!=null?t:{x:0,y:0}),g=Tt(),M=E=>i?i.includes(E.pointerType):!0,y=E=>{dt(r)&&E.preventDefault(),dt(s)&&E.stopPropagation()},b=E=>{var S;if(!dt(v).includes(E.button)||dt(e.disabled)||!M(E)||dt(o)&&E.target!==dt(n))return;const _=dt(d),x=(S=_?.getBoundingClientRect)==null?void 0:S.call(_),A=dt(n).getBoundingClientRect(),D={x:E.clientX-(_?A.left-x.left+_.scrollLeft:A.left),y:E.clientY-(_?A.top-x.top+_.scrollTop:A.top)};c?.(D,E)!==!1&&(g.value=D,y(E))},C=E=>{if(dt(e.disabled)||!M(E)||!g.value)return;const S=dt(d),_=dt(n).getBoundingClientRect();let{x,y:A}=m.value;(h==="x"||h==="both")&&(x=E.clientX-g.value.x,S&&(x=Math.min(Math.max(0,x),S.scrollWidth-_.width))),(h==="y"||h==="both")&&(A=E.clientY-g.value.y,S&&(A=Math.min(Math.max(0,A),S.scrollHeight-_.height))),m.value={x,y:A},a?.(m.value,E),y(E)},w=E=>{dt(e.disabled)||!M(E)||g.value&&(g.value=void 0,l?.(m.value,E),y(E))};if(K_){const E=()=>{var S;return{capture:(S=e.capture)!=null?S:!0,passive:!dt(r)}};si(p,"pointerdown",b,E),si(f,"pointermove",C,E),si(f,"pointerup",w,E)}return{...tw(m),position:m,isDragging:it(()=>!!g.value),style:it(()=>`left:${m.value.x}px;top:${m.value.y}px;`)}}function rw(n={}){const{touch:e=!0,drag:t=!0,capture:i=!1,initialValue:r=!1,window:s=Tp}=n,o=lt(r),a=lt(null);if(!s)return{pressed:o,sourceType:a};const l=f=>d=>{var p;o.value=!0,a.value=f,(p=n.onPressed)==null||p.call(n,d)},c=f=>{var d;o.value=!1,a.value=null,(d=n.onReleased)==null||d.call(n,f)},u=it(()=>J_(n.target)||s),h={passive:!0,capture:i};return si(u,"mousedown",l("mouse"),h),si(s,"mouseleave",c,h),si(s,"mouseup",c,h),t&&(si(u,"dragstart",l("mouse"),h),si(s,"drop",c,h),si(s,"dragend",c,h)),e&&(si(u,"touchstart",l("touch"),h),si(s,"touchend",c,h),si(s,"touchcancel",c,h)),{pressed:o,sourceType:a}}function ru(n){"@babel/helpers - typeof";return ru=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ru(n)}var sw=/^\s+/,ow=/\s+$/;function He(n,e){if(n=n||"",e=e||{},n instanceof He)return n;if(!(this instanceof He))return new He(n,e);var t=aw(n);this._originalInput=n,this._r=t.r,this._g=t.g,this._b=t.b,this._a=t.a,this._roundA=Math.round(100*this._a)/100,this._format=e.format||t.format,this._gradientType=e.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=t.ok}He.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(e.r*299+e.g*587+e.b*114)/1e3},getLuminance:function(){var e=this.toRgb(),t,i,r,s,o,a;return t=e.r/255,i=e.g/255,r=e.b/255,t<=.03928?s=t/12.92:s=Math.pow((t+.055)/1.055,2.4),i<=.03928?o=i/12.92:o=Math.pow((i+.055)/1.055,2.4),r<=.03928?a=r/12.92:a=Math.pow((r+.055)/1.055,2.4),.2126*s+.7152*o+.0722*a},setAlpha:function(e){return this._a=Q_(e),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var e=ag(this._r,this._g,this._b);return{h:e.h*360,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=ag(this._r,this._g,this._b),t=Math.round(e.h*360),i=Math.round(e.s*100),r=Math.round(e.v*100);return this._a==1?"hsv("+t+", "+i+"%, "+r+"%)":"hsva("+t+", "+i+"%, "+r+"%, "+this._roundA+")"},toHsl:function(){var e=og(this._r,this._g,this._b);return{h:e.h*360,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=og(this._r,this._g,this._b),t=Math.round(e.h*360),i=Math.round(e.s*100),r=Math.round(e.l*100);return this._a==1?"hsl("+t+", "+i+"%, "+r+"%)":"hsla("+t+", "+i+"%, "+r+"%, "+this._roundA+")"},toHex:function(e){return lg(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return hw(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(Nt(this._r,255)*100)+"%",g:Math.round(Nt(this._g,255)*100)+"%",b:Math.round(Nt(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+Math.round(Nt(this._r,255)*100)+"%, "+Math.round(Nt(this._g,255)*100)+"%, "+Math.round(Nt(this._b,255)*100)+"%)":"rgba("+Math.round(Nt(this._r,255)*100)+"%, "+Math.round(Nt(this._g,255)*100)+"%, "+Math.round(Nt(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:Sw[lg(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var t="#"+cg(this._r,this._g,this._b,this._a),i=t,r=this._gradientType?"GradientType = 1, ":"";if(e){var s=He(e);i="#"+cg(s._r,s._g,s._b,s._a)}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+t+",endColorstr="+i+")"},toString:function(e){var t=!!e;e=e||this._format;var i=!1,r=this._a<1&&this._a>=0,s=!t&&r&&(e==="hex"||e==="hex6"||e==="hex3"||e==="hex4"||e==="hex8"||e==="name");return s?e==="name"&&this._a===0?this.toName():this.toRgbString():(e==="rgb"&&(i=this.toRgbString()),e==="prgb"&&(i=this.toPercentageRgbString()),(e==="hex"||e==="hex6")&&(i=this.toHexString()),e==="hex3"&&(i=this.toHexString(!0)),e==="hex4"&&(i=this.toHex8String(!0)),e==="hex8"&&(i=this.toHex8String()),e==="name"&&(i=this.toName()),e==="hsl"&&(i=this.toHslString()),e==="hsv"&&(i=this.toHsvString()),i||this.toHexString())},clone:function(){return He(this.toString())},_applyModification:function(e,t){var i=e.apply(null,[this].concat([].slice.call(t)));return this._r=i._r,this._g=i._g,this._b=i._b,this.setAlpha(i._a),this},lighten:function(){return this._applyModification(mw,arguments)},brighten:function(){return this._applyModification(gw,arguments)},darken:function(){return this._applyModification(vw,arguments)},desaturate:function(){return this._applyModification(fw,arguments)},saturate:function(){return this._applyModification(dw,arguments)},greyscale:function(){return this._applyModification(pw,arguments)},spin:function(){return this._applyModification(_w,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(bw,arguments)},complement:function(){return this._applyCombination(xw,arguments)},monochromatic:function(){return this._applyCombination(Mw,arguments)},splitcomplement:function(){return this._applyCombination(yw,arguments)},triad:function(){return this._applyCombination(ug,[3])},tetrad:function(){return this._applyCombination(ug,[4])}};He.fromRatio=function(n,e){if(ru(n)=="object"){var t={};for(var i in n)n.hasOwnProperty(i)&&(i==="a"?t[i]=n[i]:t[i]=ma(n[i]));n=t}return He(n,e)};function aw(n){var e={r:0,g:0,b:0},t=1,i=null,r=null,s=null,o=!1,a=!1;return typeof n=="string"&&(n=Aw(n)),ru(n)=="object"&&($i(n.r)&&$i(n.g)&&$i(n.b)?(e=lw(n.r,n.g,n.b),o=!0,a=String(n.r).substr(-1)==="%"?"prgb":"rgb"):$i(n.h)&&$i(n.s)&&$i(n.v)?(i=ma(n.s),r=ma(n.v),e=uw(n.h,i,r),o=!0,a="hsv"):$i(n.h)&&$i(n.s)&&$i(n.l)&&(i=ma(n.s),s=ma(n.l),e=cw(n.h,i,s),o=!0,a="hsl"),n.hasOwnProperty("a")&&(t=n.a)),t=Q_(t),{ok:o,format:n.format||a,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:t}}function lw(n,e,t){return{r:Nt(n,255)*255,g:Nt(e,255)*255,b:Nt(t,255)*255}}function og(n,e,t){n=Nt(n,255),e=Nt(e,255),t=Nt(t,255);var i=Math.max(n,e,t),r=Math.min(n,e,t),s,o,a=(i+r)/2;if(i==r)s=o=0;else{var l=i-r;switch(o=a>.5?l/(2-i-r):l/(i+r),i){case n:s=(e-t)/l+(e<t?6:0);break;case e:s=(t-n)/l+2;break;case t:s=(n-e)/l+4;break}s/=6}return{h:s,s:o,l:a}}function cw(n,e,t){var i,r,s;n=Nt(n,360),e=Nt(e,100),t=Nt(t,100);function o(c,u,h){return h<0&&(h+=1),h>1&&(h-=1),h<1/6?c+(u-c)*6*h:h<1/2?u:h<2/3?c+(u-c)*(2/3-h)*6:c}if(e===0)i=r=s=t;else{var a=t<.5?t*(1+e):t+e-t*e,l=2*t-a;i=o(l,a,n+1/3),r=o(l,a,n),s=o(l,a,n-1/3)}return{r:i*255,g:r*255,b:s*255}}function ag(n,e,t){n=Nt(n,255),e=Nt(e,255),t=Nt(t,255);var i=Math.max(n,e,t),r=Math.min(n,e,t),s,o,a=i,l=i-r;if(o=i===0?0:l/i,i==r)s=0;else{switch(i){case n:s=(e-t)/l+(e<t?6:0);break;case e:s=(t-n)/l+2;break;case t:s=(n-e)/l+4;break}s/=6}return{h:s,s:o,v:a}}function uw(n,e,t){n=Nt(n,360)*6,e=Nt(e,100),t=Nt(t,100);var i=Math.floor(n),r=n-i,s=t*(1-e),o=t*(1-r*e),a=t*(1-(1-r)*e),l=i%6,c=[t,o,s,s,a,t][l],u=[a,t,t,o,s,s][l],h=[s,s,a,t,t,o][l];return{r:c*255,g:u*255,b:h*255}}function lg(n,e,t,i){var r=[vi(Math.round(n).toString(16)),vi(Math.round(e).toString(16)),vi(Math.round(t).toString(16))];return i&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0):r.join("")}function hw(n,e,t,i,r){var s=[vi(Math.round(n).toString(16)),vi(Math.round(e).toString(16)),vi(Math.round(t).toString(16)),vi(ex(i))];return r&&s[0].charAt(0)==s[0].charAt(1)&&s[1].charAt(0)==s[1].charAt(1)&&s[2].charAt(0)==s[2].charAt(1)&&s[3].charAt(0)==s[3].charAt(1)?s[0].charAt(0)+s[1].charAt(0)+s[2].charAt(0)+s[3].charAt(0):s.join("")}function cg(n,e,t,i){var r=[vi(ex(i)),vi(Math.round(n).toString(16)),vi(Math.round(e).toString(16)),vi(Math.round(t).toString(16))];return r.join("")}He.equals=function(n,e){return!n||!e?!1:He(n).toRgbString()==He(e).toRgbString()};He.random=function(){return He.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})};function fw(n,e){e=e===0?0:e||10;var t=He(n).toHsl();return t.s-=e/100,t.s=ch(t.s),He(t)}function dw(n,e){e=e===0?0:e||10;var t=He(n).toHsl();return t.s+=e/100,t.s=ch(t.s),He(t)}function pw(n){return He(n).desaturate(100)}function mw(n,e){e=e===0?0:e||10;var t=He(n).toHsl();return t.l+=e/100,t.l=ch(t.l),He(t)}function gw(n,e){e=e===0?0:e||10;var t=He(n).toRgb();return t.r=Math.max(0,Math.min(255,t.r-Math.round(255*-(e/100)))),t.g=Math.max(0,Math.min(255,t.g-Math.round(255*-(e/100)))),t.b=Math.max(0,Math.min(255,t.b-Math.round(255*-(e/100)))),He(t)}function vw(n,e){e=e===0?0:e||10;var t=He(n).toHsl();return t.l-=e/100,t.l=ch(t.l),He(t)}function _w(n,e){var t=He(n).toHsl(),i=(t.h+e)%360;return t.h=i<0?360+i:i,He(t)}function xw(n){var e=He(n).toHsl();return e.h=(e.h+180)%360,He(e)}function ug(n,e){if(isNaN(e)||e<=0)throw new Error("Argument to polyad must be a positive number");for(var t=He(n).toHsl(),i=[He(n)],r=360/e,s=1;s<e;s++)i.push(He({h:(t.h+s*r)%360,s:t.s,l:t.l}));return i}function yw(n){var e=He(n).toHsl(),t=e.h;return[He(n),He({h:(t+72)%360,s:e.s,l:e.l}),He({h:(t+216)%360,s:e.s,l:e.l})]}function bw(n,e,t){e=e||6,t=t||30;var i=He(n).toHsl(),r=360/t,s=[He(n)];for(i.h=(i.h-(r*e>>1)+720)%360;--e;)i.h=(i.h+r)%360,s.push(He(i));return s}function Mw(n,e){e=e||6;for(var t=He(n).toHsv(),i=t.h,r=t.s,s=t.v,o=[],a=1/e;e--;)o.push(He({h:i,s:r,v:s})),s=(s+a)%1;return o}He.mix=function(n,e,t){t=t===0?0:t||50;var i=He(n).toRgb(),r=He(e).toRgb(),s=t/100,o={r:(r.r-i.r)*s+i.r,g:(r.g-i.g)*s+i.g,b:(r.b-i.b)*s+i.b,a:(r.a-i.a)*s+i.a};return He(o)};He.readability=function(n,e){var t=He(n),i=He(e);return(Math.max(t.getLuminance(),i.getLuminance())+.05)/(Math.min(t.getLuminance(),i.getLuminance())+.05)};He.isReadable=function(n,e,t){var i=He.readability(n,e),r,s;switch(s=!1,r=Cw(t),r.level+r.size){case"AAsmall":case"AAAlarge":s=i>=4.5;break;case"AAlarge":s=i>=3;break;case"AAAsmall":s=i>=7;break}return s};He.mostReadable=function(n,e,t){var i=null,r=0,s,o,a,l;t=t||{},o=t.includeFallbackColors,a=t.level,l=t.size;for(var c=0;c<e.length;c++)s=He.readability(n,e[c]),s>r&&(r=s,i=He(e[c]));return He.isReadable(n,i,{level:a,size:l})||!o?i:(t.includeFallbackColors=!1,He.mostReadable(n,["#fff","#000"],t))};var Rd=He.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},Sw=He.hexNames=ww(Rd);function ww(n){var e={};for(var t in n)n.hasOwnProperty(t)&&(e[n[t]]=t);return e}function Q_(n){return n=parseFloat(n),(isNaN(n)||n<0||n>1)&&(n=1),n}function Nt(n,e){Tw(n)&&(n="100%");var t=Ew(n);return n=Math.min(e,Math.max(0,parseFloat(n))),t&&(n=parseInt(n*e,10)/100),Math.abs(n-e)<1e-6?1:n%e/parseFloat(e)}function ch(n){return Math.min(1,Math.max(0,n))}function qn(n){return parseInt(n,16)}function Tw(n){return typeof n=="string"&&n.indexOf(".")!=-1&&parseFloat(n)===1}function Ew(n){return typeof n=="string"&&n.indexOf("%")!=-1}function vi(n){return n.length==1?"0"+n:""+n}function ma(n){return n<=1&&(n=n*100+"%"),n}function ex(n){return Math.round(parseFloat(n)*255).toString(16)}function hg(n){return qn(n)/255}var pi=(function(){var n="[-\\+]?\\d+%?",e="[-\\+]?\\d*\\.\\d+%?",t="(?:"+e+")|(?:"+n+")",i="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?",r="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?";return{CSS_UNIT:new RegExp(t),rgb:new RegExp("rgb"+i),rgba:new RegExp("rgba"+r),hsl:new RegExp("hsl"+i),hsla:new RegExp("hsla"+r),hsv:new RegExp("hsv"+i),hsva:new RegExp("hsva"+r),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}})();function $i(n){return!!pi.CSS_UNIT.exec(n)}function Aw(n){n=n.replace(sw,"").replace(ow,"").toLowerCase();var e=!1;if(Rd[n])n=Rd[n],e=!0;else if(n=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var t;return(t=pi.rgb.exec(n))?{r:t[1],g:t[2],b:t[3]}:(t=pi.rgba.exec(n))?{r:t[1],g:t[2],b:t[3],a:t[4]}:(t=pi.hsl.exec(n))?{h:t[1],s:t[2],l:t[3]}:(t=pi.hsla.exec(n))?{h:t[1],s:t[2],l:t[3],a:t[4]}:(t=pi.hsv.exec(n))?{h:t[1],s:t[2],v:t[3]}:(t=pi.hsva.exec(n))?{h:t[1],s:t[2],v:t[3],a:t[4]}:(t=pi.hex8.exec(n))?{r:qn(t[1]),g:qn(t[2]),b:qn(t[3]),a:hg(t[4]),format:e?"name":"hex8"}:(t=pi.hex6.exec(n))?{r:qn(t[1]),g:qn(t[2]),b:qn(t[3]),format:e?"name":"hex"}:(t=pi.hex4.exec(n))?{r:qn(t[1]+""+t[1]),g:qn(t[2]+""+t[2]),b:qn(t[3]+""+t[3]),a:hg(t[4]+""+t[4]),format:e?"name":"hex8"}:(t=pi.hex3.exec(n))?{r:qn(t[1]+""+t[1]),g:qn(t[2]+""+t[2]),b:qn(t[3]+""+t[3]),format:e?"name":"hex"}:!1}function Cw(n){var e,t;return n=n||{level:"AA",size:"small"},e=(n.level||"AA").toUpperCase(),t=(n.size||"small").toLowerCase(),e!=="AA"&&e!=="AAA"&&(e="AA"),t!=="small"&&t!=="large"&&(t="small"),{level:e,size:t}}const Rw=["cx","cy","fill"],Iw=en({__name:"DrawingPoint",props:tu({id:{},color:{}},{coords:{required:!0},coordsModifiers:{}}),emits:tu(["moveKnot"],["update:coords"]),setup(n,{emit:e}){const t=Wa(n,"coords"),i=e,r=n,s=WM("el"),o=it(()=>s.value?.closest("svg")),a=it(()=>{const l=He(r.color||"black"),c=l.getBrightness();return c>200?l.darken(20).toHexString():c>150?l.lighten(15).toHexString():l.lighten(40).toHexString()});return iw(s,{initialValue:{...t.value},stopPropagation:!0,onMove(l,c){if(!o.value)return;const u=o.value.createSVGPoint();u.x=c.clientX,u.y=c.clientY;const h=o.value.getScreenCTM();if(h){const f=u.matrixTransform(h.inverse()),d={x:f.x-t.value.x,y:f.y-t.value.y};c.shiftKey?i("moveKnot",d):t.value={x:f.x,y:f.y}}}}),(l,c)=>(nt(),St("circle",{ref_key:"el",ref:s,class:"point",cx:t.value.x,cy:t.value.y,r:"6",fill:a.value},null,8,Rw))}}),Pw=vl(Iw,[["__scopeId","data-v-d4e0ec80"]]),Lw=en({__name:"DrawingKnot",props:tu({id:{},color:{}},{points:{type:Array,required:!0},pointsModifiers:{},isClosed:{type:Boolean,type:Boolean,default:!1},isClosedModifiers:{}}),emits:tu(["removeKnot"],["update:points","update:isClosed"]),setup(n,{emit:e}){const t=n,i=e,r=Wa(n,"points"),{id:s}=kr(t),o=Wa(n,"isClosed"),a=it(()=>q_({id:s.value,points:r.value,isClosed:o.value}));function l(f){f===0&&!o.value&&r.value.length>2&&(o.value=!0)}function c(f){r.value.length<=1||r.value.splice(f,1)}function u(f,d){const v=d.currentTarget?.closest("svg");if(!v)return;const m=Cd(d,v);if(m){const g=r.value.findIndex(M=>M.id===f.p1.id||M.id===f.p2.id);g!==-1&&r.value.splice(g+1,0,{id:r.value.length.toString(),...m,knotId:s.value})}}function h(f){r.value=r.value.map(d=>({...d,x:d.x+f.x,y:d.y+f.y}))}return(f,d)=>(nt(),St(Xt,null,[(nt(!0),St(Xt,null,Rs(a.value,(p,v)=>(nt(),ei(M1,{key:"line-"+v,index:v,line:p,onClick:_o(m=>u(p,m),["stop"]),color:t.color},null,8,["index","line","onClick","color"]))),128)),(nt(!0),St(Xt,null,Rs(r.value,(p,v)=>(nt(),ei(Pw,{key:"point-"+v,coords:p,id:p.id,color:t.color,"onUpdate:coords":m=>r.value[v]={...r.value[v],...m},onClick:[_o(m=>l(v),["stop"]),_o(m=>c(v),["alt","stop"]),d[0]||(d[0]=_o(m=>i("removeKnot"),["shift","alt","stop"]))],onMoveKnot:h},null,8,["coords","id","color","onUpdate:coords","onClick"]))),128))],64))}}),Hc=["#404e7c","#8C1C13","#f7996e","#17a398","#f4f1bb","#735751","#db5aba"],Dw={class:"drawing-board"},Uw=en({__name:"DrawingBoard",props:{knots:{default:()=>[{id:"1",points:[],isClosed:!1,color:Hc[0]}]},knotsModifiers:{},interFlipIds:{default:()=>new Set},interFlipIdsModifiers:{}},emits:["update:knots","update:interFlipIds"],setup(n){const e=Wa(n,"knots"),t=Tt(1),i=Wa(n,"interFlipIds");function r(f){const d=Cd(f,f.currentTarget);d&&a(d)}const{pressed:s}=rw();function o(f){if(!s.value)return;const d=Cd(f,f.currentTarget);!d||e.value.map(v=>v.points).flat().reduce((v,m)=>{const g=Math.hypot(m.x-d.x,m.y-d.y);return Math.min(v,g)},1/0)<60||a(d)}const a=ew(f=>{const d=e.value[0].id,p=e.value[0].points.length.toString();e.value[0].points.push({id:`${d}-${p}`,knotId:d,...f})},100),l=it(()=>Z_(e.value,i.value));function c(f){i.value.has(f)?i.value.delete(f):i.value.add(f)}function u(f){f&&(e.value.unshift({id:(t.value+1).toString(),points:[],isClosed:!1,color:Hc[t.value%Hc.length]}),t.value+=1)}function h(f){e.value.length<=1||e.value.splice(f,1)}return(f,d)=>(nt(),St("div",Dw,[(nt(),St("svg",{onClick:_o(r,["stop"]),onMousemove:o},[(nt(!0),St(Xt,null,Rs(e.value,(p,v)=>(nt(),ei(Lw,{key:p.id,id:p.id,color:p.color,points:p.points,"onUpdate:points":m=>p.points=m,isClosed:p.isClosed,"onUpdate:isClosed":[m=>p.isClosed=m,u],onRemoveKnot:m=>h(v)},null,8,["id","color","points","onUpdate:points","isClosed","onUpdate:isClosed","onRemoveKnot"]))),128)),(nt(!0),St(Xt,null,Rs(l.value,p=>(nt(),ei(y1,{topLine:p.topLine,intersectionPoint:p.point,lineColor:e.value.find(v=>v.id===p.topLine.knotId)?.color||"black",onClick:_o(v=>c(p.id),["stop"])},null,8,["topLine","intersectionPoint","lineColor","onClick"]))),256))],32))]))}}),Nw=vl(Uw,[["__scopeId","data-v-4ee3f3f4"]]);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Fs="179",Fi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},nr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},tx=0,Id=1,nx=2,Ow=3,Fw=0,Ep=1,Ap=2,Ni=3,Gi=0,on=1,Hn=2,ar=0,Ss=1,su=2,Pd=3,Ld=4,ix=5,Pr=100,rx=101,sx=102,ox=103,ax=104,lx=200,cx=201,ux=202,hx=203,ou=204,au=205,fx=206,dx=207,px=208,mx=209,gx=210,vx=211,_x=212,xx=213,yx=214,lu=0,cu=1,uu=2,Ps=3,hu=4,fu=5,du=6,pu=7,_l=0,bx=1,Mx=2,Mi=0,Sx=1,wx=2,Tx=3,uh=4,Ex=5,Ax=6,Cx=7,Dd="attached",Rx="detached",hh=300,mr=301,Or=302,Ka=303,Ja=304,Wo=306,Io=1e3,fn=1001,Po=1002,Yt=1003,fh=1004,Bw=1004,ms=1005,zw=1005,qt=1006,To=1007,kw=1007,_i=1008,Vw=1008,wi=1009,Cp=1010,Rp=1011,Lo=1012,dh=1013,gr=1014,Gn=1015,Bs=1016,ph=1017,mh=1018,Do=1020,Ip=35902,Pp=1021,Lp=1022,sn=1023,Uo=1026,No=1027,gh=1028,xl=1029,Dp=1030,vh=1031,Hw=1032,_h=1033,Ca=33776,Ra=33777,Ia=33778,Pa=33779,mu=35840,gu=35841,vu=35842,_u=35843,xu=36196,yu=37492,bu=37496,Mu=37808,Su=37809,wu=37810,Tu=37811,Eu=37812,Au=37813,Cu=37814,Ru=37815,Iu=37816,Pu=37817,Lu=37818,Du=37819,Uu=37820,Nu=37821,La=36492,Ou=36494,Fu=36495,Up=36283,Bu=36284,zu=36285,ku=36286,Ix=2200,Px=2201,Lx=2202,Oo=2300,Qa=2301,Gc=2302,gs=2400,vs=2401,el=2402,xh=2500,Np=2501,Gw=0,Ww=1,Xw=2,Dx=3200,Ux=3201,Yw=3202,jw=3203,Vr=0,Nx=1,sr="",An="srgb",Ls="srgb-linear",tl="linear",wt="srgb",$w=0,hs=7680,qw=7681,Zw=7682,Kw=7683,Jw=34055,Qw=34056,eT=5386,tT=512,nT=513,iT=514,rT=515,sT=516,oT=517,aT=518,Ud=519,Ox=512,Fx=513,Bx=514,Op=515,zx=516,kx=517,Vx=518,Hx=519,nl=35044,lT=35048,cT=35040,uT=35045,hT=35049,fT=35041,dT=35046,pT=35050,mT=35042,gT="100",Nd="300 es",Jn=2e3,Fo=2001,vT={COMPUTE:"compute",RENDER:"render"},_T={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},xT={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class Ei{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const r=i[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const mn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let fg=1234567;const ws=Math.PI/180,Bo=180/Math.PI;function ti(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(mn[n&255]+mn[n>>8&255]+mn[n>>16&255]+mn[n>>24&255]+"-"+mn[e&255]+mn[e>>8&255]+"-"+mn[e>>16&15|64]+mn[e>>24&255]+"-"+mn[t&63|128]+mn[t>>8&255]+"-"+mn[t>>16&255]+mn[t>>24&255]+mn[i&255]+mn[i>>8&255]+mn[i>>16&255]+mn[i>>24&255]).toLowerCase()}function Ke(n,e,t){return Math.max(e,Math.min(t,n))}function Fp(n,e){return(n%e+e)%e}function yT(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)}function bT(n,e,t){return n!==e?(t-n)/(e-n):0}function Da(n,e,t){return(1-t)*n+t*e}function MT(n,e,t,i){return Da(n,e,1-Math.exp(-t*i))}function ST(n,e=1){return e-Math.abs(Fp(n,e*2)-e)}function wT(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))}function TT(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))}function ET(n,e){return n+Math.floor(Math.random()*(e-n+1))}function AT(n,e){return n+Math.random()*(e-n)}function CT(n){return n*(.5-Math.random())}function RT(n){n!==void 0&&(fg=n);let e=fg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function IT(n){return n*ws}function PT(n){return n*Bo}function LT(n){return(n&n-1)===0&&n!==0}function DT(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))}function UT(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function NT(n,e,t,i,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),u=o((e+i)/2),h=s((e-i)/2),f=o((e-i)/2),d=s((i-e)/2),p=o((i-e)/2);switch(r){case"XYX":n.set(a*u,l*h,l*f,a*c);break;case"YZY":n.set(l*f,a*u,l*h,a*c);break;case"ZXZ":n.set(l*h,l*f,a*u,a*c);break;case"XZX":n.set(a*u,l*p,l*d,a*c);break;case"YXY":n.set(l*d,a*u,l*p,a*c);break;case"ZYZ":n.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function In(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function rt(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}const Wi={DEG2RAD:ws,RAD2DEG:Bo,generateUUID:ti,clamp:Ke,euclideanModulo:Fp,mapLinear:yT,inverseLerp:bT,lerp:Da,damp:MT,pingpong:ST,smoothstep:wT,smootherstep:TT,randInt:ET,randFloat:AT,randFloatSpread:CT,seededRandom:RT,degToRad:IT,radToDeg:PT,isPowerOfTwo:LT,ceilPowerOfTwo:DT,floorPowerOfTwo:UT,setQuaternionFromProperEuler:NT,normalize:rt,denormalize:In};class de{constructor(e=0,t=0){de.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Ke(this.x,e.x,t.x),this.y=Ke(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Ke(this.x,e,t),this.y=Ke(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ke(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ke(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class bn{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],h=i[r+3];const f=s[o+0],d=s[o+1],p=s[o+2],v=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=v;return}if(h!==v||l!==f||c!==d||u!==p){let m=1-a;const g=l*f+c*d+u*p+h*v,M=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){const C=Math.sqrt(y),w=Math.atan2(C,g*M);m=Math.sin(m*w)/C,a=Math.sin(a*w)/C}const b=a*M;if(l=l*m+f*b,c=c*m+d*b,u=u*m+p*b,h=h*m+v*b,m===1-a){const C=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=C,c*=C,u*=C,h*=C}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-a*d,e[t+2]=c*p+u*d+a*f-l*h,e[t+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),h=a(s/2),f=l(i/2),d=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=i+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(i>a&&i>h){const d=2*Math.sqrt(1+i-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-i-h);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-i-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ke(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*i+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=i*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,i=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(dg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(dg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*r-a*i),u=2*(a*t-s*r),h=2*(s*i-o*t);return this.x=t+l*c+o*h-a*u,this.y=i+l*u+a*c-s*h,this.z=r+l*h+s*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Ke(this.x,e.x,t.x),this.y=Ke(this.y,e.y,t.y),this.z=Ke(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Ke(this.x,e,t),this.y=Ke(this.y,e,t),this.z=Ke(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ke(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return lf.copy(this).projectOnVector(e),this.sub(lf)}reflect(e){return this.sub(lf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ke(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const lf=new U,dg=new bn;class tt{constructor(e,t,i,r,s,o,a,l,c){tt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,c)}set(e,t,i,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],h=i[7],f=i[2],d=i[5],p=i[8],v=r[0],m=r[3],g=r[6],M=r[1],y=r[4],b=r[7],C=r[2],w=r[5],E=r[8];return s[0]=o*v+a*M+l*C,s[3]=o*m+a*y+l*w,s[6]=o*g+a*b+l*E,s[1]=c*v+u*M+h*C,s[4]=c*m+u*y+h*w,s[7]=c*g+u*b+h*E,s[2]=f*v+d*M+p*C,s[5]=f*m+d*y+p*w,s[8]=f*g+d*b+p*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*s*u+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,p=t*h+i*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=h*v,e[1]=(r*c-u*i)*v,e[2]=(a*i-r*o)*v,e[3]=f*v,e[4]=(u*t-r*l)*v,e[5]=(r*s-a*t)*v,e[6]=d*v,e[7]=(i*l-c*t)*v,e[8]=(o*t-i*s)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(cf.makeScale(e,t)),this}rotate(e){return this.premultiply(cf.makeRotation(-e)),this}translate(e,t){return this.premultiply(cf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const cf=new tt;function Gx(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}const OT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function xo(n,e){return new OT[n](e)}function il(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Wx(){const n=il("canvas");return n.style.display="block",n}const pg={};function Eo(n){n in pg||(pg[n]=!0,console.warn(n))}function FT(n,e,t){return new Promise(function(i,r){function s(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:r();break;case n.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}const mg=new tt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),gg=new tt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function BT(){const n={enabled:!0,workingColorSpace:Ls,spaces:{},convert:function(r,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===wt&&(r.r=lr(r.r),r.g=lr(r.g),r.b=lr(r.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===wt&&(r.r=Ao(r.r),r.g=Ao(r.g),r.b=Ao(r.b))),r},workingToColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},colorSpaceToWorking:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===sr?tl:this.spaces[r].transfer},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,o){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,s){return Eo("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),n.workingToColorSpace(r,s)},toWorkingColorSpace:function(r,s){return Eo("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),n.colorSpaceToWorking(r,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return n.define({[Ls]:{primaries:e,whitePoint:i,transfer:tl,toXYZ:mg,fromXYZ:gg,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:An},outputColorSpaceConfig:{drawingBufferColorSpace:An}},[An]:{primaries:e,whitePoint:i,transfer:wt,toXYZ:mg,fromXYZ:gg,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:An}}}),n}const pt=BT();function lr(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Ao(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let Xs;class Xx{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{Xs===void 0&&(Xs=il("canvas")),Xs.width=e.width,Xs.height=e.height;const r=Xs.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),i=Xs}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=il("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=lr(s[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(lr(t[i]/255)*255):t[i]=lr(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let zT=0;class Lr{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:zT++}),this.uuid=ti(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(uf(r[o].image)):s.push(uf(r[o]))}else s=uf(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function uf(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Xx.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let kT=0;const hf=new U;class Ot extends Ei{constructor(e=Ot.DEFAULT_IMAGE,t=Ot.DEFAULT_MAPPING,i=fn,r=fn,s=qt,o=_i,a=sn,l=wi,c=Ot.DEFAULT_ANISOTROPY,u=sr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:kT++}),this.uuid=ti(),this.name="",this.source=new Lr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new de(0,0),this.repeat=new de(1,1),this.center=new de(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new tt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(hf).x}get height(){return this.source.getSize(hf).y}get depth(){return this.source.getSize(hf).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}r&&i&&r.isVector2&&i.isVector2||r&&i&&r.isVector3&&i.isVector3||r&&i&&r.isMatrix3&&i.isMatrix3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==hh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Io:e.x=e.x-Math.floor(e.x);break;case fn:e.x=e.x<0?0:1;break;case Po:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Io:e.y=e.y-Math.floor(e.y);break;case fn:e.y=e.y<0?0:1;break;case Po:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Ot.DEFAULT_IMAGE=null;Ot.DEFAULT_MAPPING=hh;Ot.DEFAULT_ANISOTROPY=1;class at{constructor(e=0,t=0,i=0,r=1){at.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],v=l[2],m=l[6],g=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-v)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+v)<.1&&Math.abs(p+m)<.1&&Math.abs(c+d+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,b=(d+1)/2,C=(g+1)/2,w=(u+f)/4,E=(h+v)/4,S=(p+m)/4;return y>b&&y>C?y<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(y),r=w/i,s=E/i):b>C?b<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),i=w/r,s=S/r):C<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(C),i=E/s,r=S/s),this.set(i,r,s,t),this}let M=Math.sqrt((m-p)*(m-p)+(h-v)*(h-v)+(f-u)*(f-u));return Math.abs(M)<.001&&(M=1),this.x=(m-p)/M,this.y=(h-v)/M,this.z=(f-u)/M,this.w=Math.acos((c+d+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Ke(this.x,e.x,t.x),this.y=Ke(this.y,e.y,t.y),this.z=Ke(this.z,e.z,t.z),this.w=Ke(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Ke(this.x,e,t),this.y=Ke(this.y,e,t),this.z=Ke(this.z,e,t),this.w=Ke(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ke(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Bp extends Ei{constructor(e=1,t=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:qt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=i.depth,this.scissor=new at(0,0,e,t),this.scissorTest=!1,this.viewport=new at(0,0,e,t);const r={width:e,height:t,depth:i.depth},s=new Ot(r);this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const t={minFilter:qt,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=i,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new Lr(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ti extends Bp{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class yh extends Ot{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Yt,this.minFilter=Yt,this.wrapR=fn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class VT extends Ti{constructor(e=1,t=1,i=1,r={}){super(e,t,r),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new yh(null,e,t,i),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class bh extends Ot{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Yt,this.minFilter=Yt,this.wrapR=fn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class HT extends Ti{constructor(e=1,t=1,i=1,r={}){super(e,t,r),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new bh(null,e,t,i),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class Kt{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(hi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(hi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=hi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,hi):hi.fromBufferAttribute(s,o),hi.applyMatrix4(e.matrixWorld),this.expandByPoint(hi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),zl.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),zl.copy(i.boundingBox)),zl.applyMatrix4(e.matrixWorld),this.union(zl)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,hi),hi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ko),kl.subVectors(this.max,Ko),Ys.subVectors(e.a,Ko),js.subVectors(e.b,Ko),$s.subVectors(e.c,Ko),yr.subVectors(js,Ys),br.subVectors($s,js),Zr.subVectors(Ys,$s);let t=[0,-yr.z,yr.y,0,-br.z,br.y,0,-Zr.z,Zr.y,yr.z,0,-yr.x,br.z,0,-br.x,Zr.z,0,-Zr.x,-yr.y,yr.x,0,-br.y,br.x,0,-Zr.y,Zr.x,0];return!ff(t,Ys,js,$s,kl)||(t=[1,0,0,0,1,0,0,0,1],!ff(t,Ys,js,$s,kl))?!1:(Vl.crossVectors(yr,br),t=[Vl.x,Vl.y,Vl.z],ff(t,Ys,js,$s,kl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,hi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(hi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(qi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),qi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),qi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),qi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),qi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),qi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),qi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),qi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(qi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const qi=[new U,new U,new U,new U,new U,new U,new U,new U],hi=new U,zl=new Kt,Ys=new U,js=new U,$s=new U,yr=new U,br=new U,Zr=new U,Ko=new U,kl=new U,Vl=new U,Kr=new U;function ff(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){Kr.fromArray(n,s);const a=r.x*Math.abs(Kr.x)+r.y*Math.abs(Kr.y)+r.z*Math.abs(Kr.z),l=e.dot(Kr),c=t.dot(Kr),u=i.dot(Kr);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const GT=new Kt,Jo=new U,df=new U;class Jt{constructor(e=new U,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):GT.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Jo.subVectors(e,this.center);const t=Jo.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(Jo,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(df.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Jo.copy(e.center).add(df)),this.expandByPoint(Jo.copy(e.center).sub(df))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Zi=new U,pf=new U,Hl=new U,Mr=new U,mf=new U,Gl=new U,gf=new U;class zs{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Zi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Zi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Zi.copy(this.origin).addScaledVector(this.direction,t),Zi.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){pf.copy(e).add(t).multiplyScalar(.5),Hl.copy(t).sub(e).normalize(),Mr.copy(this.origin).sub(pf);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Hl),a=Mr.dot(this.direction),l=-Mr.dot(Hl),c=Mr.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const v=1/u;h*=v,f*=v,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(pf).addScaledVector(Hl,f),d}intersectSphere(e,t){Zi.subVectors(e.center,this.origin);const i=Zi.dot(this.direction),r=Zi.dot(Zi)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),i>o||s>r||((s>i||isNaN(i))&&(i=s),(o<r||isNaN(r))&&(r=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Zi)!==null}intersectTriangle(e,t,i,r,s){mf.subVectors(t,e),Gl.subVectors(i,e),gf.crossVectors(mf,Gl);let o=this.direction.dot(gf),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Mr.subVectors(this.origin,e);const l=a*this.direction.dot(Gl.crossVectors(Mr,Gl));if(l<0)return null;const c=a*this.direction.dot(mf.cross(Mr));if(c<0||l+c>o)return null;const u=-a*Mr.dot(gf);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Xe{constructor(e,t,i,r,s,o,a,l,c,u,h,f,d,p,v,m){Xe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,c,u,h,f,d,p,v,m)}set(e,t,i,r,s,o,a,l,c,u,h,f,d,p,v,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=f,g[3]=d,g[7]=p,g[11]=v,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Xe().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/qs.setFromMatrixColumn(e,0).length(),s=1/qs.setFromMatrixColumn(e,1).length(),o=1/qs.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,v=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-v*c,t[9]=-a*l,t[2]=v-f*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,v=c*h;t[0]=f+v*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=v+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,v=c*h;t[0]=f-v*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=v-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,v=a*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+v,t[1]=l*h,t[5]=v*c+f,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,v=a*c;t[0]=l*u,t[4]=v-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-v*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,v=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+v,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=v*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(WT,e,XT)}lookAt(e,t,i){const r=this.elements;return jn.subVectors(e,t),jn.lengthSq()===0&&(jn.z=1),jn.normalize(),Sr.crossVectors(i,jn),Sr.lengthSq()===0&&(Math.abs(i.z)===1?jn.x+=1e-4:jn.z+=1e-4,jn.normalize(),Sr.crossVectors(i,jn)),Sr.normalize(),Wl.crossVectors(jn,Sr),r[0]=Sr.x,r[4]=Wl.x,r[8]=jn.x,r[1]=Sr.y,r[5]=Wl.y,r[9]=jn.y,r[2]=Sr.z,r[6]=Wl.z,r[10]=jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],h=i[5],f=i[9],d=i[13],p=i[2],v=i[6],m=i[10],g=i[14],M=i[3],y=i[7],b=i[11],C=i[15],w=r[0],E=r[4],S=r[8],_=r[12],x=r[1],A=r[5],D=r[9],k=r[13],W=r[2],Y=r[6],z=r[10],Q=r[14],Z=r[3],he=r[7],me=r[11],oe=r[15];return s[0]=o*w+a*x+l*W+c*Z,s[4]=o*E+a*A+l*Y+c*he,s[8]=o*S+a*D+l*z+c*me,s[12]=o*_+a*k+l*Q+c*oe,s[1]=u*w+h*x+f*W+d*Z,s[5]=u*E+h*A+f*Y+d*he,s[9]=u*S+h*D+f*z+d*me,s[13]=u*_+h*k+f*Q+d*oe,s[2]=p*w+v*x+m*W+g*Z,s[6]=p*E+v*A+m*Y+g*he,s[10]=p*S+v*D+m*z+g*me,s[14]=p*_+v*k+m*Q+g*oe,s[3]=M*w+y*x+b*W+C*Z,s[7]=M*E+y*A+b*Y+C*he,s[11]=M*S+y*D+b*z+C*me,s[15]=M*_+y*k+b*Q+C*oe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],v=e[7],m=e[11],g=e[15];return p*(+s*l*h-r*c*h-s*a*f+i*c*f+r*a*d-i*l*d)+v*(+t*l*d-t*c*f+s*o*f-r*o*d+r*c*u-s*l*u)+m*(+t*c*h-t*a*d-s*o*h+i*o*d+s*a*u-i*c*u)+g*(-r*a*u-t*l*h+t*a*f+r*o*h-i*o*f+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],v=e[13],m=e[14],g=e[15],M=h*m*c-v*f*c+v*l*d-a*m*d-h*l*g+a*f*g,y=p*f*c-u*m*c-p*l*d+o*m*d+u*l*g-o*f*g,b=u*v*c-p*h*c+p*a*d-o*v*d-u*a*g+o*h*g,C=p*h*l-u*v*l-p*a*f+o*v*f+u*a*m-o*h*m,w=t*M+i*y+r*b+s*C;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/w;return e[0]=M*E,e[1]=(v*f*s-h*m*s-v*r*d+i*m*d+h*r*g-i*f*g)*E,e[2]=(a*m*s-v*l*s+v*r*c-i*m*c-a*r*g+i*l*g)*E,e[3]=(h*l*s-a*f*s-h*r*c+i*f*c+a*r*d-i*l*d)*E,e[4]=y*E,e[5]=(u*m*s-p*f*s+p*r*d-t*m*d-u*r*g+t*f*g)*E,e[6]=(p*l*s-o*m*s-p*r*c+t*m*c+o*r*g-t*l*g)*E,e[7]=(o*f*s-u*l*s+u*r*c-t*f*c-o*r*d+t*l*d)*E,e[8]=b*E,e[9]=(p*h*s-u*v*s-p*i*d+t*v*d+u*i*g-t*h*g)*E,e[10]=(o*v*s-p*a*s+p*i*c-t*v*c-o*i*g+t*a*g)*E,e[11]=(u*a*s-o*h*s-u*i*c+t*h*c+o*i*d-t*a*d)*E,e[12]=C*E,e[13]=(u*v*r-p*h*r+p*i*f-t*v*f-u*i*m+t*h*m)*E,e[14]=(p*a*r-o*v*r-p*i*l+t*v*l+o*i*m-t*a*m)*E,e[15]=(o*h*r-u*a*r+u*i*l-t*h*l-o*i*f+t*a*f)*E,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,o){return this.set(1,i,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,p=s*h,v=o*u,m=o*h,g=a*h,M=l*c,y=l*u,b=l*h,C=i.x,w=i.y,E=i.z;return r[0]=(1-(v+g))*C,r[1]=(d+b)*C,r[2]=(p-y)*C,r[3]=0,r[4]=(d-b)*w,r[5]=(1-(f+g))*w,r[6]=(m+M)*w,r[7]=0,r[8]=(p+y)*E,r[9]=(m-M)*E,r[10]=(1-(f+v))*E,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=qs.set(r[0],r[1],r[2]).length();const o=qs.set(r[4],r[5],r[6]).length(),a=qs.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],fi.copy(this);const c=1/s,u=1/o,h=1/a;return fi.elements[0]*=c,fi.elements[1]*=c,fi.elements[2]*=c,fi.elements[4]*=u,fi.elements[5]*=u,fi.elements[6]*=u,fi.elements[8]*=h,fi.elements[9]*=h,fi.elements[10]*=h,t.setFromRotationMatrix(fi),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o,a=Jn,l=!1){const c=this.elements,u=2*s/(t-e),h=2*s/(i-r),f=(t+e)/(t-e),d=(i+r)/(i-r);let p,v;if(l)p=s/(o-s),v=o*s/(o-s);else if(a===Jn)p=-(o+s)/(o-s),v=-2*o*s/(o-s);else if(a===Fo)p=-o/(o-s),v=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=f,c[12]=0,c[1]=0,c[5]=h,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=p,c[14]=v,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,i,r,s,o,a=Jn,l=!1){const c=this.elements,u=2/(t-e),h=2/(i-r),f=-(t+e)/(t-e),d=-(i+r)/(i-r);let p,v;if(l)p=1/(o-s),v=o/(o-s);else if(a===Jn)p=-2/(o-s),v=-(o+s)/(o-s);else if(a===Fo)p=-1/(o-s),v=-s/(o-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=0,c[12]=f,c[1]=0,c[5]=h,c[9]=0,c[13]=d,c[2]=0,c[6]=0,c[10]=p,c[14]=v,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const qs=new U,fi=new Xe,WT=new U(0,0,0),XT=new U(1,1,1),Sr=new U,Wl=new U,jn=new U,vg=new Xe,_g=new bn;class Dn{constructor(e=0,t=0,i=0,r=Dn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(Ke(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ke(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ke(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Ke(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ke(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Ke(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return vg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(vg,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return _g.setFromEuler(this),this.setFromQuaternion(_g,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Dn.DEFAULT_ORDER="XYZ";class yl{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let YT=0;const xg=new U,Zs=new bn,Ki=new Xe,Xl=new U,Qo=new U,jT=new U,$T=new bn,yg=new U(1,0,0),bg=new U(0,1,0),Mg=new U(0,0,1),Sg={type:"added"},qT={type:"removed"},Ks={type:"childadded",child:null},vf={type:"childremoved",child:null};class gt extends Ei{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:YT++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=gt.DEFAULT_UP.clone();const e=new U,t=new Dn,i=new bn,r=new U(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Xe},normalMatrix:{value:new tt}}),this.matrix=new Xe,this.matrixWorld=new Xe,this.matrixAutoUpdate=gt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=gt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new yl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Zs.setFromAxisAngle(e,t),this.quaternion.multiply(Zs),this}rotateOnWorldAxis(e,t){return Zs.setFromAxisAngle(e,t),this.quaternion.premultiply(Zs),this}rotateX(e){return this.rotateOnAxis(yg,e)}rotateY(e){return this.rotateOnAxis(bg,e)}rotateZ(e){return this.rotateOnAxis(Mg,e)}translateOnAxis(e,t){return xg.copy(e).applyQuaternion(this.quaternion),this.position.add(xg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(yg,e)}translateY(e){return this.translateOnAxis(bg,e)}translateZ(e){return this.translateOnAxis(Mg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ki.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Xl.copy(e):Xl.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),Qo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ki.lookAt(Qo,Xl,this.up):Ki.lookAt(Xl,Qo,this.up),this.quaternion.setFromRotationMatrix(Ki),r&&(Ki.extractRotation(r.matrixWorld),Zs.setFromRotationMatrix(Ki),this.quaternion.premultiply(Zs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Sg),Ks.child=e,this.dispatchEvent(Ks),Ks.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(qT),vf.child=e,this.dispatchEvent(vf),vf.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ki.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ki.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ki),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Sg),Ks.child=e,this.dispatchEvent(Ks),Ks.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Qo,e,jT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Qo,$T,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(a=>({...a})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(r.boundingBox=this.boundingBox.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),h.length>0&&(i.shapes=h),f.length>0&&(i.skeletons=f),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=r,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}gt.DEFAULT_UP=new U(0,1,0);gt.DEFAULT_MATRIX_AUTO_UPDATE=!0;gt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const di=new U,Ji=new U,_f=new U,Qi=new U,Js=new U,Qs=new U,wg=new U,xf=new U,yf=new U,bf=new U,Mf=new at,Sf=new at,wf=new at;class Pn{constructor(e=new U,t=new U,i=new U){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),di.subVectors(e,t),r.cross(di);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){di.subVectors(r,t),Ji.subVectors(i,t),_f.subVectors(e,t);const o=di.dot(di),a=di.dot(Ji),l=di.dot(_f),c=Ji.dot(Ji),u=Ji.dot(_f),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Qi)===null?!1:Qi.x>=0&&Qi.y>=0&&Qi.x+Qi.y<=1}static getInterpolation(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,Qi)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Qi.x),l.addScaledVector(o,Qi.y),l.addScaledVector(a,Qi.z),l)}static getInterpolatedAttribute(e,t,i,r,s,o){return Mf.setScalar(0),Sf.setScalar(0),wf.setScalar(0),Mf.fromBufferAttribute(e,t),Sf.fromBufferAttribute(e,i),wf.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(Mf,s.x),o.addScaledVector(Sf,s.y),o.addScaledVector(wf,s.z),o}static isFrontFacing(e,t,i,r){return di.subVectors(i,t),Ji.subVectors(e,t),di.cross(Ji).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return di.subVectors(this.c,this.b),Ji.subVectors(this.a,this.b),di.cross(Ji).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Pn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Pn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,r,s){return Pn.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return Pn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Pn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let o,a;Js.subVectors(r,i),Qs.subVectors(s,i),xf.subVectors(e,i);const l=Js.dot(xf),c=Qs.dot(xf);if(l<=0&&c<=0)return t.copy(i);yf.subVectors(e,r);const u=Js.dot(yf),h=Qs.dot(yf);if(u>=0&&h<=u)return t.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(Js,o);bf.subVectors(e,s);const d=Js.dot(bf),p=Qs.dot(bf);if(p>=0&&d<=p)return t.copy(s);const v=d*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Qs,a);const m=u*p-d*h;if(m<=0&&h-u>=0&&d-p>=0)return wg.subVectors(s,r),a=(h-u)/(h-u+(d-p)),t.copy(r).addScaledVector(wg,a);const g=1/(m+v+f);return o=v*g,a=f*g,t.copy(i).addScaledVector(Js,o).addScaledVector(Qs,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Yx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},wr={h:0,s:0,l:0},Yl={h:0,s:0,l:0};function Tf(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class Ae{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=An){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,pt.colorSpaceToWorking(this,t),this}setRGB(e,t,i,r=pt.workingColorSpace){return this.r=e,this.g=t,this.b=i,pt.colorSpaceToWorking(this,r),this}setHSL(e,t,i,r=pt.workingColorSpace){if(e=Fp(e,1),t=Ke(t,0,1),i=Ke(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=Tf(o,s,e+1/3),this.g=Tf(o,s,e),this.b=Tf(o,s,e-1/3)}return pt.colorSpaceToWorking(this,r),this}setStyle(e,t=An){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=An){const i=Yx[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=lr(e.r),this.g=lr(e.g),this.b=lr(e.b),this}copyLinearToSRGB(e){return this.r=Ao(e.r),this.g=Ao(e.g),this.b=Ao(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=An){return pt.workingToColorSpace(gn.copy(this),e),Math.round(Ke(gn.r*255,0,255))*65536+Math.round(Ke(gn.g*255,0,255))*256+Math.round(Ke(gn.b*255,0,255))}getHexString(e=An){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=pt.workingColorSpace){pt.workingToColorSpace(gn.copy(this),t);const i=gn.r,r=gn.g,s=gn.b,o=Math.max(i,r,s),a=Math.min(i,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case i:l=(r-s)/h+(r<s?6:0);break;case r:l=(s-i)/h+2;break;case s:l=(i-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=pt.workingColorSpace){return pt.workingToColorSpace(gn.copy(this),t),e.r=gn.r,e.g=gn.g,e.b=gn.b,e}getStyle(e=An){pt.workingToColorSpace(gn.copy(this),e);const t=gn.r,i=gn.g,r=gn.b;return e!==An?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(wr),this.setHSL(wr.h+e,wr.s+t,wr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(wr),e.getHSL(Yl);const i=Da(wr.h,Yl.h,t),r=Da(wr.s,Yl.s,t),s=Da(wr.l,Yl.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const gn=new Ae;Ae.NAMES=Yx;let ZT=0;class Mn extends Ei{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ZT++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=Ss,this.side=Gi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ou,this.blendDst=au,this.blendEquation=Pr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ae(0,0,0),this.blendAlpha=0,this.depthFunc=Ps,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ud,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=hs,this.stencilZFail=hs,this.stencilZPass=hs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ss&&(i.blending=this.blending),this.side!==Gi&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==ou&&(i.blendSrc=this.blendSrc),this.blendDst!==au&&(i.blendDst=this.blendDst),this.blendEquation!==Pr&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Ps&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Ud&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==hs&&(i.stencilFail=this.stencilFail),this.stencilZFail!==hs&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==hs&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class ci extends Mn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Dn,this.combine=_l,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const or=KT();function KT(){const n=new ArrayBuffer(4),e=new Float32Array(n),t=new Uint32Array(n),i=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,r[l]=24,r[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,r[l]=-c-1,r[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,r[l]=13,r[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,r[l]=24,r[l|256]=24):(i[l]=31744,i[l|256]=64512,r[l]=13,r[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;(c&8388608)===0;)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:r,mantissaTable:s,exponentTable:o,offsetTable:a}}function kn(n){Math.abs(n)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),n=Ke(n,-65504,65504),or.floatView[0]=n;const e=or.uint32View[0],t=e>>23&511;return or.baseTable[t]+((e&8388607)>>or.shiftTable[t])}function ga(n){const e=n>>10;return or.uint32View[0]=or.mantissaTable[or.offsetTable[e]+(n&1023)]+or.exponentTable[e],or.floatView[0]}class JT{static toHalfFloat(e){return kn(e)}static fromHalfFloat(e){return ga(e)}}const $t=new U,jl=new de;let QT=0;class mt{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:QT++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=nl,this.updateRanges=[],this.gpuType=Gn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)jl.fromBufferAttribute(this,t),jl.applyMatrix3(e),this.setXY(t,jl.x,jl.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)$t.fromBufferAttribute(this,t),$t.applyMatrix3(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)$t.fromBufferAttribute(this,t),$t.applyMatrix4(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)$t.fromBufferAttribute(this,t),$t.applyNormalMatrix(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)$t.fromBufferAttribute(this,t),$t.transformDirection(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=In(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=rt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=In(t,this.array)),t}setX(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=In(t,this.array)),t}setY(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=In(t,this.array)),t}setZ(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=In(t,this.array)),t}setW(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),r=rt(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),r=rt(r,this.array),s=rt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==nl&&(e.usage=this.usage),e}}class eE extends mt{constructor(e,t,i){super(new Int8Array(e),t,i)}}class tE extends mt{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class nE extends mt{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class iE extends mt{constructor(e,t,i){super(new Int16Array(e),t,i)}}class zp extends mt{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class rE extends mt{constructor(e,t,i){super(new Int32Array(e),t,i)}}class kp extends mt{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class sE extends mt{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=ga(this.array[e*this.itemSize]);return this.normalized&&(t=In(t,this.array)),t}setX(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize]=kn(t),this}getY(e){let t=ga(this.array[e*this.itemSize+1]);return this.normalized&&(t=In(t,this.array)),t}setY(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+1]=kn(t),this}getZ(e){let t=ga(this.array[e*this.itemSize+2]);return this.normalized&&(t=In(t,this.array)),t}setZ(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+2]=kn(t),this}getW(e){let t=ga(this.array[e*this.itemSize+3]);return this.normalized&&(t=In(t,this.array)),t}setW(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+3]=kn(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array)),this.array[e+0]=kn(t),this.array[e+1]=kn(i),this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),r=rt(r,this.array)),this.array[e+0]=kn(t),this.array[e+1]=kn(i),this.array[e+2]=kn(r),this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),r=rt(r,this.array),s=rt(s,this.array)),this.array[e+0]=kn(t),this.array[e+1]=kn(i),this.array[e+2]=kn(r),this.array[e+3]=kn(s),this}}class Fe extends mt{constructor(e,t,i){super(new Float32Array(e),t,i)}}let oE=0;const ri=new Xe,Ef=new gt,eo=new U,$n=new Kt,ea=new Kt,rn=new U;class et extends Ei{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:oE++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Gx(e)?kp:zp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new tt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ri.makeRotationFromQuaternion(e),this.applyMatrix4(ri),this}rotateX(e){return ri.makeRotationX(e),this.applyMatrix4(ri),this}rotateY(e){return ri.makeRotationY(e),this.applyMatrix4(ri),this}rotateZ(e){return ri.makeRotationZ(e),this.applyMatrix4(ri),this}translate(e,t,i){return ri.makeTranslation(e,t,i),this.applyMatrix4(ri),this}scale(e,t,i){return ri.makeScale(e,t,i),this.applyMatrix4(ri),this}lookAt(e){return Ef.lookAt(e),Ef.updateMatrix(),this.applyMatrix4(Ef.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(eo).negate(),this.translate(eo.x,eo.y,eo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let r=0,s=e.length;r<s;r++){const o=e[r];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Fe(i,3))}else{const i=Math.min(e.length,t.count);for(let r=0;r<i;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Kt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];$n.setFromBufferAttribute(s),this.morphTargetsRelative?(rn.addVectors(this.boundingBox.min,$n.min),this.boundingBox.expandByPoint(rn),rn.addVectors(this.boundingBox.max,$n.max),this.boundingBox.expandByPoint(rn)):(this.boundingBox.expandByPoint($n.min),this.boundingBox.expandByPoint($n.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Jt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new U,1/0);return}if(e){const i=this.boundingSphere.center;if($n.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];ea.setFromBufferAttribute(a),this.morphTargetsRelative?(rn.addVectors($n.min,ea.min),$n.expandByPoint(rn),rn.addVectors($n.max,ea.max),$n.expandByPoint(rn)):($n.expandByPoint(ea.min),$n.expandByPoint(ea.max))}$n.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)rn.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(rn));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)rn.fromBufferAttribute(a,c),l&&(eo.fromBufferAttribute(e,c),rn.add(eo)),r=Math.max(r,i.distanceToSquared(rn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new mt(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let S=0;S<i.count;S++)a[S]=new U,l[S]=new U;const c=new U,u=new U,h=new U,f=new de,d=new de,p=new de,v=new U,m=new U;function g(S,_,x){c.fromBufferAttribute(i,S),u.fromBufferAttribute(i,_),h.fromBufferAttribute(i,x),f.fromBufferAttribute(s,S),d.fromBufferAttribute(s,_),p.fromBufferAttribute(s,x),u.sub(c),h.sub(c),d.sub(f),p.sub(f);const A=1/(d.x*p.y-p.x*d.y);isFinite(A)&&(v.copy(u).multiplyScalar(p.y).addScaledVector(h,-d.y).multiplyScalar(A),m.copy(h).multiplyScalar(d.x).addScaledVector(u,-p.x).multiplyScalar(A),a[S].add(v),a[_].add(v),a[x].add(v),l[S].add(m),l[_].add(m),l[x].add(m))}let M=this.groups;M.length===0&&(M=[{start:0,count:e.count}]);for(let S=0,_=M.length;S<_;++S){const x=M[S],A=x.start,D=x.count;for(let k=A,W=A+D;k<W;k+=3)g(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const y=new U,b=new U,C=new U,w=new U;function E(S){C.fromBufferAttribute(r,S),w.copy(C);const _=a[S];y.copy(_),y.sub(C.multiplyScalar(C.dot(_))).normalize(),b.crossVectors(w,_);const A=b.dot(l[S])<0?-1:1;o.setXYZW(S,y.x,y.y,y.z,A)}for(let S=0,_=M.length;S<_;++S){const x=M[S],A=x.start,D=x.count;for(let k=A,W=A+D;k<W;k+=3)E(e.getX(k+0)),E(e.getX(k+1)),E(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new mt(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let f=0,d=i.count;f<d;f++)i.setXYZ(f,0,0,0);const r=new U,s=new U,o=new U,a=new U,l=new U,c=new U,u=new U,h=new U;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),v=e.getX(f+1),m=e.getX(f+2);r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,v),o.fromBufferAttribute(t,m),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,m),a.add(u),l.add(u),c.add(u),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),i.setXYZ(f+0,u.x,u.y,u.z),i.setXYZ(f+1,u.x,u.y,u.z),i.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)rn.fromBufferAttribute(e,t),rn.normalize(),e.setXYZ(t,rn.x,rn.y,rn.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let v=0,m=l.length;v<m;v++){a.isInterleavedBufferAttribute?d=l[v]*a.data.stride+a.offset:d=l[v]*u;for(let g=0;g<u;g++)f[p++]=c[d++]}return new mt(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new et,i=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,i);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Tg=new Xe,Jr=new zs,$l=new Jt,Eg=new U,ql=new U,Zl=new U,Kl=new U,Af=new U,Jl=new U,Ag=new U,Ql=new U;class bt extends gt{constructor(e=new et,t=new ci){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(s&&a){Jl.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(Af.fromBufferAttribute(h,e),o?Jl.addScaledVector(Af,u):Jl.addScaledVector(Af.sub(t),u))}t.add(Jl)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),$l.copy(i.boundingSphere),$l.applyMatrix4(s),Jr.copy(e.ray).recast(e.near),!($l.containsPoint(Jr.origin)===!1&&(Jr.intersectSphere($l,Eg)===null||Jr.origin.distanceToSquared(Eg)>(e.far-e.near)**2))&&(Tg.copy(s).invert(),Jr.copy(e.ray).applyMatrix4(Tg),!(i.boundingBox!==null&&Jr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Jr)))}_computeIntersections(e,t,i){let r;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,f=s.groups,d=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,v=f.length;p<v;p++){const m=f[p],g=o[m.materialIndex],M=Math.max(m.start,d.start),y=Math.min(a.count,Math.min(m.start+m.count,d.start+d.count));for(let b=M,C=y;b<C;b+=3){const w=a.getX(b),E=a.getX(b+1),S=a.getX(b+2);r=ec(this,g,e,i,c,u,h,w,E,S),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,d.start),v=Math.min(a.count,d.start+d.count);for(let m=p,g=v;m<g;m+=3){const M=a.getX(m),y=a.getX(m+1),b=a.getX(m+2);r=ec(this,o,e,i,c,u,h,M,y,b),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,v=f.length;p<v;p++){const m=f[p],g=o[m.materialIndex],M=Math.max(m.start,d.start),y=Math.min(l.count,Math.min(m.start+m.count,d.start+d.count));for(let b=M,C=y;b<C;b+=3){const w=b,E=b+1,S=b+2;r=ec(this,g,e,i,c,u,h,w,E,S),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,d.start),v=Math.min(l.count,d.start+d.count);for(let m=p,g=v;m<g;m+=3){const M=m,y=m+1,b=m+2;r=ec(this,o,e,i,c,u,h,M,y,b),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function aE(n,e,t,i,r,s,o,a){let l;if(e.side===on?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side===Gi,a),l===null)return null;Ql.copy(a),Ql.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(Ql);return c<t.near||c>t.far?null:{distance:c,point:Ql.clone(),object:n}}function ec(n,e,t,i,r,s,o,a,l,c){n.getVertexPosition(a,ql),n.getVertexPosition(l,Zl),n.getVertexPosition(c,Kl);const u=aE(n,e,t,i,ql,Zl,Kl,Ag);if(u){const h=new U;Pn.getBarycoord(Ag,ql,Zl,Kl,h),r&&(u.uv=Pn.getInterpolatedAttribute(r,a,l,c,h,new de)),s&&(u.uv1=Pn.getInterpolatedAttribute(s,a,l,c,h,new de)),o&&(u.normal=Pn.getInterpolatedAttribute(o,a,l,c,h,new U),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const f={a,b:l,c,normal:new U,materialIndex:0};Pn.getNormal(ql,Zl,Kl,f.normal),u.face=f,u.barycoord=h}return u}class Hr extends et{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,i,t,e,o,s,0),p("z","y","x",1,-1,i,t,-e,o,s,1),p("x","z","y",1,1,e,i,t,r,o,2),p("x","z","y",1,-1,e,i,-t,r,o,3),p("x","y","z",1,-1,e,t,i,r,s,4),p("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new Fe(c,3)),this.setAttribute("normal",new Fe(u,3)),this.setAttribute("uv",new Fe(h,2));function p(v,m,g,M,y,b,C,w,E,S,_){const x=b/E,A=C/S,D=b/2,k=C/2,W=w/2,Y=E+1,z=S+1;let Q=0,Z=0;const he=new U;for(let me=0;me<z;me++){const oe=me*A-k;for(let Ee=0;Ee<Y;Ee++){const Ve=Ee*x-D;he[v]=Ve*M,he[m]=oe*y,he[g]=W,c.push(he.x,he.y,he.z),he[v]=0,he[m]=0,he[g]=w>0?1:-1,u.push(he.x,he.y,he.z),h.push(Ee/E),h.push(1-me/S),Q+=1}}for(let me=0;me<S;me++)for(let oe=0;oe<E;oe++){const Ee=f+oe+Y*me,Ve=f+oe+Y*(me+1),ze=f+(oe+1)+Y*(me+1),ae=f+(oe+1)+Y*me;l.push(Ee,Ve,ae),l.push(Ve,ze,ae),Z+=6}a.addGroup(d,Z,_),d+=Z,f+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function zo(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function En(n){const e={};for(let t=0;t<n.length;t++){const i=zo(n[t]);for(const r in i)e[r]=i[r]}return e}function lE(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function jx(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:pt.workingColorSpace}const Ds={clone:zo,merge:En};var cE=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,uE=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class pn extends Mn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=cE,this.fragmentShader=uE,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=zo(e.uniforms),this.uniformsGroups=lE(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class bl extends gt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Xe,this.projectionMatrix=new Xe,this.projectionMatrixInverse=new Xe,this.coordinateSystem=Jn,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Tr=new U,Cg=new de,Rg=new de;class Rt extends bl{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Bo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ws*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Bo*2*Math.atan(Math.tan(ws*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){Tr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Tr.x,Tr.y).multiplyScalar(-e/Tr.z),Tr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Tr.x,Tr.y).multiplyScalar(-e/Tr.z)}getViewSize(e,t){return this.getViewBounds(e,Cg,Rg),t.subVectors(Rg,Cg)}setViewOffset(e,t,i,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ws*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*i/c,r*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const to=-90,no=1;class $x extends gt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Rt(to,no,e,t);r.layers=this.layers,this.add(r);const s=new Rt(to,no,e,t);s.layers=this.layers,this.add(s);const o=new Rt(to,no,e,t);o.layers=this.layers,this.add(o);const a=new Rt(to,no,e,t);a.layers=this.layers,this.add(a);const l=new Rt(to,no,e,t);l.layers=this.layers,this.add(l);const c=new Rt(to,no,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===Jn)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Fo)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,u]=this.children,h=e.getRenderTarget(),f=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(t,s),e.setRenderTarget(i,1,r),e.render(t,o),e.setRenderTarget(i,2,r),e.render(t,a),e.setRenderTarget(i,3,r),e.render(t,l),e.setRenderTarget(i,4,r),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,r),e.render(t,u),e.setRenderTarget(h,f,d),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class Ml extends Ot{constructor(e=[],t=mr,i,r,s,o,a,l,c,u){super(e,t,i,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class qx extends Ti{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new Ml(r),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Hr(5,5,5),s=new pn({name:"CubemapFromEquirect",uniforms:zo(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:on,blending:ar});s.uniforms.tEquirect.value=t;const o=new bt(r,s),a=t.minFilter;return t.minFilter===_i&&(t.minFilter=qt),new $x(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,i=!0,r=!0){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}}class _s extends gt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const hE={type:"move"};class Wc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new _s,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new _s,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new _s,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const m=t.getJointPose(v,i),g=this._getHandJoint(c,v);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(hE)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new _s;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Mh{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ae(e),this.density=t}clone(){return new Mh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Sh{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new Ae(e),this.near=t,this.far=i}clone(){return new Sh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Us extends gt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Dn,this.environmentIntensity=1,this.environmentRotation=new Dn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Sl{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=nl,this.updateRanges=[],this.version=0,this.uuid=ti()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const wn=new U;class Ln{constructor(e,t,i,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix4(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)wn.fromBufferAttribute(this,t),wn.applyNormalMatrix(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)wn.fromBufferAttribute(this,t),wn.transformDirection(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=In(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=rt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=In(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=In(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=In(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=In(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),r=rt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),r=rt(r,this.array),s=rt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new mt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ln(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Vp extends Mn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let io;const ta=new U,ro=new U,so=new U,oo=new de,na=new de,Zx=new Xe,tc=new U,ia=new U,nc=new U,Ig=new de,Cf=new de,Pg=new de;class Kx extends gt{constructor(e=new Vp){if(super(),this.isSprite=!0,this.type="Sprite",io===void 0){io=new et;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Sl(t,5);io.setIndex([0,1,2,0,2,3]),io.setAttribute("position",new Ln(i,3,0,!1)),io.setAttribute("uv",new Ln(i,2,3,!1))}this.geometry=io,this.material=e,this.center=new de(.5,.5),this.count=1}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ro.setFromMatrixScale(this.matrixWorld),Zx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),so.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ro.multiplyScalar(-so.z);const i=this.material.rotation;let r,s;i!==0&&(s=Math.cos(i),r=Math.sin(i));const o=this.center;ic(tc.set(-.5,-.5,0),so,o,ro,r,s),ic(ia.set(.5,-.5,0),so,o,ro,r,s),ic(nc.set(.5,.5,0),so,o,ro,r,s),Ig.set(0,0),Cf.set(1,0),Pg.set(1,1);let a=e.ray.intersectTriangle(tc,ia,nc,!1,ta);if(a===null&&(ic(ia.set(-.5,.5,0),so,o,ro,r,s),Cf.set(0,1),a=e.ray.intersectTriangle(tc,nc,ia,!1,ta),a===null))return;const l=e.ray.origin.distanceTo(ta);l<e.near||l>e.far||t.push({distance:l,point:ta.clone(),uv:Pn.getInterpolation(ta,tc,ia,nc,Ig,Cf,Pg,new de),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ic(n,e,t,i,r,s){oo.subVectors(n,t).addScalar(.5).multiply(i),r!==void 0?(na.x=s*oo.x-r*oo.y,na.y=r*oo.x+s*oo.y):na.copy(oo),n.copy(e),n.x+=na.x,n.y+=na.y,n.applyMatrix4(Zx)}const rc=new U,Lg=new U;class Jx extends gt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,r=t.length;i<r;i++){const s=t[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const r=this.levels;let s;for(s=0;s<r.length&&!(t<r[s].distance);s++);return r.splice(s,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const r=t.splice(i,1);return this.remove(r[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,r;for(i=1,r=t.length;i<r;i++){let s=t[i].distance;if(t[i].object.visible&&(s-=s*t[i].hysteresis),e<s)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){rc.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(rc);this.getObjectForDistance(r).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){rc.setFromMatrixPosition(e.matrixWorld),Lg.setFromMatrixPosition(this.matrixWorld);const i=rc.distanceTo(Lg)/e.zoom;t[0].object.visible=!0;let r,s;for(r=1,s=t.length;r<s;r++){let o=t[r].distance;if(t[r].object.visible&&(o-=o*t[r].hysteresis),i>=o)t[r-1].object.visible=!1,t[r].object.visible=!0;else break}for(this._currentLevel=r-1;r<s;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let r=0,s=i.length;r<s;r++){const o=i[r];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const Dg=new U,Ug=new at,Ng=new at,fE=new U,Og=new Xe,sc=new U,Rf=new Jt,Fg=new Xe,If=new zs;class Qx extends bt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Dd,this.bindMatrix=new Xe,this.bindMatrixInverse=new Xe,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Kt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,sc),this.boundingBox.expandByPoint(sc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Jt),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,sc),this.boundingSphere.expandByPoint(sc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,r=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Rf.copy(this.boundingSphere),Rf.applyMatrix4(r),e.ray.intersectsSphere(Rf)!==!1&&(Fg.copy(r).invert(),If.copy(e.ray).applyMatrix4(Fg),!(this.boundingBox!==null&&If.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,If)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new at,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Dd?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Rx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,r=this.geometry;Ug.fromBufferAttribute(r.attributes.skinIndex,e),Ng.fromBufferAttribute(r.attributes.skinWeight,e),Dg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Ng.getComponent(s);if(o!==0){const a=Ug.getComponent(s);Og.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(fE.copy(Dg).applyMatrix4(Og),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Hp extends gt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class li extends Ot{constructor(e=null,t=1,i=1,r,s,o,a,l,c=Yt,u=Yt,h,f){super(null,o,a,l,c,u,r,s,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Bg=new Xe,dE=new Xe;class wh{constructor(e=[],t=[]){this.uuid=ti(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new Xe)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new Xe;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:dE;Bg.multiplyMatrices(a,t[s]),Bg.toArray(i,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new wh(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new li(t,e,e,sn,Gn);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){const s=e.bones[i];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Hp),this.bones.push(o),this.boneInverses.push(new Xe().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const o=t[r];e.bones.push(o.uuid);const a=i[r];e.boneInverses.push(a.toArray())}return e}}class ko extends mt{constructor(e,t,i,r=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ao=new Xe,zg=new Xe,oc=[],kg=new Kt,pE=new Xe,ra=new bt,sa=new Jt;class ey extends bt{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ko(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<i;r++)this.setMatrixAt(r,pE)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Kt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,ao),kg.copy(e.boundingBox).applyMatrix4(ao),this.boundingBox.union(kg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Jt),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,ao),sa.copy(e.boundingSphere).applyMatrix4(ao),this.boundingSphere.union(sa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,r=this.morphTexture.source.data.data,s=i.length+1,o=e*s+1;for(let a=0;a<i.length;a++)i[a]=r[o+a]}raycast(e,t){const i=this.matrixWorld,r=this.count;if(ra.geometry=this.geometry,ra.material=this.material,ra.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),sa.copy(this.boundingSphere),sa.applyMatrix4(i),e.ray.intersectsSphere(sa)!==!1))for(let s=0;s<r;s++){this.getMatrixAt(s,ao),zg.multiplyMatrices(i,ao),ra.matrixWorld=zg,ra.raycast(e,oc);for(let o=0,a=oc.length;o<a;o++){const l=oc[o];l.instanceId=s,l.object=this,t.push(l)}oc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ko(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,r=i.length+1;this.morphTexture===null&&(this.morphTexture=new li(new Float32Array(r*this.count),r,this.count,gh,Gn));const s=this.morphTexture.source.data.data;let o=0;for(let c=0;c<i.length;c++)o+=i[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=r*e;s[l]=a,s.set(i,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Pf=new U,mE=new U,gE=new tt;class mi{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Pf.subVectors(i,t).cross(mE.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Pf),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||gE.getNormalMatrix(e),r=this.coplanarPoint(Pf).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Qr=new Jt,vE=new de(.5,.5),ac=new U;class Xo{constructor(e=new mi,t=new mi,i=new mi,r=new mi,s=new mi,o=new mi){this.planes=[e,t,i,r,s,o]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Jn,i=!1){const r=this.planes,s=e.elements,o=s[0],a=s[1],l=s[2],c=s[3],u=s[4],h=s[5],f=s[6],d=s[7],p=s[8],v=s[9],m=s[10],g=s[11],M=s[12],y=s[13],b=s[14],C=s[15];if(r[0].setComponents(c-o,d-u,g-p,C-M).normalize(),r[1].setComponents(c+o,d+u,g+p,C+M).normalize(),r[2].setComponents(c+a,d+h,g+v,C+y).normalize(),r[3].setComponents(c-a,d-h,g-v,C-y).normalize(),i)r[4].setComponents(l,f,m,b).normalize(),r[5].setComponents(c-l,d-f,g-m,C-b).normalize();else if(r[4].setComponents(c-l,d-f,g-m,C-b).normalize(),t===Jn)r[5].setComponents(c+l,d+f,g+m,C+b).normalize();else if(t===Fo)r[5].setComponents(l,f,m,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Qr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Qr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Qr)}intersectsSprite(e){Qr.center.set(0,0,0);const t=vE.distanceTo(e.center);return Qr.radius=.7071067811865476+t,Qr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Qr)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(ac.x=r.normal.x>0?e.max.x:e.min.x,ac.y=r.normal.y>0?e.max.y:e.min.y,ac.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(ac)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const Ii=new Xe,Pi=new Xo;class Th{constructor(){this.coordinateSystem=Jn}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const r=t.cameras[i];if(Ii.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Pi.setFromProjectionMatrix(Ii,r.coordinateSystem,r.reversedDepth),Pi.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const r=t.cameras[i];if(Ii.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Pi.setFromProjectionMatrix(Ii,r.coordinateSystem,r.reversedDepth),Pi.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const r=t.cameras[i];if(Ii.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Pi.setFromProjectionMatrix(Ii,r.coordinateSystem,r.reversedDepth),Pi.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const r=t.cameras[i];if(Ii.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Pi.setFromProjectionMatrix(Ii,r.coordinateSystem,r.reversedDepth),Pi.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const r=t.cameras[i];if(Ii.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Pi.setFromProjectionMatrix(Ii,r.coordinateSystem,r.reversedDepth),Pi.containsPoint(e))return!0}return!1}clone(){return new Th}}function Lf(n,e){return n-e}function _E(n,e){return n.z-e.z}function xE(n,e){return e.z-n.z}class yE{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i,r){const s=this.pool,o=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=i,a.index=r}reset(){this.list.length=0,this.index=0}}const Fn=new Xe,bE=new Ae(1,1,1),Vg=new Xo,ME=new Th,lc=new Kt,es=new Jt,oa=new U,Hg=new U,SE=new U,Df=new yE,vn=new bt,cc=[];function wE(n,e,t=0){const i=e.itemSize;if(n.isInterleavedBufferAttribute||n.array.constructor!==e.array.constructor){const r=n.count;for(let s=0;s<r;s++)for(let o=0;o<i;o++)e.setComponent(s+t,o,n.getComponent(s,o))}else e.array.set(n.array,t*i);e.needsUpdate=!0}function ts(n,e){if(n.constructor!==e.constructor){const t=Math.min(n.length,e.length);for(let i=0;i<t;i++)e[i]=n[i]}else{const t=Math.min(n.length,e.length);e.set(new n.constructor(n.buffer,0,t))}}class ty extends bt{constructor(e,t,i=t*2,r){super(new et,r),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new li(t,e,e,sn,Gn);this._matricesTexture=i}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),i=new li(t,e,e,xl,gr);this._indirectTexture=i}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),i=new li(t,e,e,sn,Gn);i.colorSpace=pt.workingColorSpace,this._colorsTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,r=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const o=e.getAttribute(s),{array:a,itemSize:l,normalized:c}=o,u=new a.constructor(i*l),h=new mt(u,l,c);t.setAttribute(s,h)}if(e.getIndex()!==null){const s=i>65535?new Uint32Array(r):new Uint16Array(r);t.setIndex(new mt(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(!e.hasAttribute(i))throw new Error(`THREE.BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const r=e.getAttribute(i),s=t.getAttribute(i);if(r.itemSize!==s.itemSize||r.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Kt);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let i=0,r=t.length;i<r;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,Fn),this.getBoundingBoxAt(s,lc).applyMatrix4(Fn),e.union(lc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Jt);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let i=0,r=t.length;i<r;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,Fn),this.getBoundingSphereAt(s,es).applyMatrix4(Fn),e.union(es)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const i={visible:!0,active:!0,geometryIndex:e};let r=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Lf),r=this._availableInstanceIds.shift(),this._instanceInfo[r]=i):(r=this._instanceInfo.length,this._instanceInfo.push(i));const s=this._matricesTexture;Fn.identity().toArray(s.image.data,r*16),s.needsUpdate=!0;const o=this._colorsTexture;return o&&(bE.toArray(o.image.data,r*4),o.needsUpdate=!0),this._visibilityChanged=!0,r}addGeometry(e,t=-1,i=-1){this._initializeGeometry(e),this._validateGeometry(e);const r={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;r.vertexStart=this._nextVertexStart,r.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(r.indexStart=this._nextIndexStart,r.reservedIndexCount=i===-1?o.count:i),r.indexStart!==-1&&r.indexStart+r.reservedIndexCount>this._maxIndexCount||r.vertexStart+r.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Lf),l=this._availableGeometryIds.shift(),s[l]=r):(l=this._geometryCount,this._geometryCount++,s.push(r)),this.setGeometryAt(l,e),this._nextIndexStart=r.indexStart+r.reservedIndexCount,this._nextVertexStart=r.vertexStart+r.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,r=i.getIndex()!==null,s=i.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(r&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const u in i.attributes){const h=t.getAttribute(u),f=i.getAttribute(u);wE(h,f,l);const d=h.itemSize;for(let p=h.count,v=c;p<v;p++){const m=l+p;for(let g=0;g<d;g++)f.setComponent(m,g,0)}f.needsUpdate=!0,f.addUpdateRange(l*d,c*d)}if(r){const u=a.indexStart,h=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let f=0;f<o.count;f++)s.setX(u+f,l+o.getX(f));for(let f=o.count,d=h;f<d;f++)s.setX(u+f,l);s.needsUpdate=!0,s.addUpdateRange(u,a.reservedIndexCount)}return a.start=r?a.indexStart:a.vertexStart,a.count=r?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const i=this._instanceInfo;for(let r=0,s=i.length;r<s;r++)i[r].active&&i[r].geometryIndex===e&&this.deleteInstance(r);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const i=this._geometryInfo,r=i.map((o,a)=>a).sort((o,a)=>i[o].vertexStart-i[a].vertexStart),s=this.geometry;for(let o=0,a=i.length;o<a;o++){const l=r[o],c=i[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==t){const{indexStart:u,vertexStart:h,reservedIndexCount:f}=c,d=s.index,p=d.array,v=e-h;for(let m=u;m<u+f;m++)p[m]=p[m]+v;d.array.copyWithin(t,u,u+f),d.addUpdateRange(t,f),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:u,reservedVertexCount:h}=c,f=s.attributes;for(const d in f){const p=f[d],{array:v,itemSize:m}=p;v.copyWithin(e*m,u*m,(u+h)*m),p.addUpdateRange(e*m,h*m)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,r=this._geometryInfo[e];if(r.boundingBox===null){const s=new Kt,o=i.index,a=i.attributes.position;for(let l=r.start,c=r.start+r.count;l<c;l++){let u=l;o&&(u=o.getX(u)),s.expandByPoint(oa.fromBufferAttribute(a,u))}r.boundingBox=s}return t.copy(r.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,r=this._geometryInfo[e];if(r.boundingSphere===null){const s=new Jt;this.getBoundingBoxAt(e,lc),lc.getCenter(s.center);const o=i.index,a=i.attributes.position;let l=0;for(let c=r.start,u=r.start+r.count;c<u;c++){let h=c;o&&(h=o.getX(h)),oa.fromBufferAttribute(a,h),l=Math.max(l,s.center.distanceToSquared(oa))}s.radius=Math.sqrt(l),r.boundingSphere=s}return t.copy(r.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const i=this._matricesTexture,r=this._matricesTexture.image.data;return t.toArray(r,e*16),i.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const i=this._geometryInfo[e];return t.vertexStart=i.vertexStart,t.vertexCount=i.vertexCount,t.reservedVertexCount=i.reservedVertexCount,t.indexStart=i.indexStart,t.indexCount=i.indexCount,t.reservedIndexCount=i.reservedIndexCount,t.start=i.start,t.count=i.count,t}setInstanceCount(e){const t=this._availableInstanceIds,i=this._instanceInfo;for(t.sort(Lf);t[t.length-1]===i.length-1;)i.pop(),t.pop();if(e<i.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const r=new Int32Array(e),s=new Int32Array(e);ts(this._multiDrawCounts,r),ts(this._multiDrawStarts,s),this._multiDrawCounts=r,this._multiDrawStarts=s,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),ts(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),ts(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),ts(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const i=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...i.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...i.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new et,this._initializeGeometry(s));const o=this.geometry;s.index&&ts(s.index.array,o.index.array);for(const a in s.attributes)ts(s.attributes[a].array,o.attributes[a].array)}raycast(e,t){const i=this._instanceInfo,r=this._geometryInfo,s=this.matrixWorld,o=this.geometry;vn.material=this.material,vn.geometry.index=o.index,vn.geometry.attributes=o.attributes,vn.geometry.boundingBox===null&&(vn.geometry.boundingBox=new Kt),vn.geometry.boundingSphere===null&&(vn.geometry.boundingSphere=new Jt);for(let a=0,l=i.length;a<l;a++){if(!i[a].visible||!i[a].active)continue;const c=i[a].geometryIndex,u=r[c];vn.geometry.setDrawRange(u.start,u.count),this.getMatrixAt(a,vn.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,vn.geometry.boundingBox),this.getBoundingSphereAt(c,vn.geometry.boundingSphere),vn.raycast(e,cc);for(let h=0,f=cc.length;h<f;h++){const d=cc[h];d.object=this,d.batchId=a,t.push(d)}cc.length=0}vn.material=null,vn.geometry.index=null,vn.geometry.attributes={},vn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,i,r,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=r.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,u=this._multiDrawCounts,h=this._geometryInfo,f=this.perObjectFrustumCulled,d=this._indirectTexture,p=d.image.data,v=i.isArrayCamera?ME:Vg;f&&!i.isArrayCamera&&(Fn.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),Vg.setFromProjectionMatrix(Fn,i.coordinateSystem,i.reversedDepth));let m=0;if(this.sortObjects){Fn.copy(this.matrixWorld).invert(),oa.setFromMatrixPosition(i.matrixWorld).applyMatrix4(Fn),Hg.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(Fn);for(let y=0,b=l.length;y<b;y++)if(l[y].visible&&l[y].active){const C=l[y].geometryIndex;this.getMatrixAt(y,Fn),this.getBoundingSphereAt(C,es).applyMatrix4(Fn);let w=!1;if(f&&(w=!v.intersectsSphere(es,i)),!w){const E=h[C],S=SE.subVectors(es.center,oa).dot(Hg);Df.push(E.start,E.count,S,y)}}const g=Df.list,M=this.customSort;M===null?g.sort(s.transparent?xE:_E):M.call(this,g,i);for(let y=0,b=g.length;y<b;y++){const C=g[y];c[m]=C.start*a,u[m]=C.count,p[m]=C.index,m++}Df.reset()}else for(let g=0,M=l.length;g<M;g++)if(l[g].visible&&l[g].active){const y=l[g].geometryIndex;let b=!1;if(f&&(this.getMatrixAt(g,Fn),this.getBoundingSphereAt(y,es).applyMatrix4(Fn),b=!v.intersectsSphere(es,i)),!b){const C=h[y];c[m]=C.start*a,u[m]=C.count,p[m]=g,m++}}d.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,i,r,s,o){this.onBeforeRender(e,null,r,s,o)}}class Un extends Mn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ae(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Vu=new U,Hu=new U,Gg=new Xe,aa=new zs,uc=new Jt,Uf=new U,Wg=new U;class Fr extends gt{constructor(e=new et,t=new Un){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let r=1,s=t.count;r<s;r++)Vu.fromBufferAttribute(t,r-1),Hu.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=Vu.distanceTo(Hu);e.setAttribute("lineDistance",new Fe(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),uc.copy(i.boundingSphere),uc.applyMatrix4(r),uc.radius+=s,e.ray.intersectsSphere(uc)===!1)return;Gg.copy(r).invert(),aa.copy(e.ray).applyMatrix4(Gg);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,u=i.index,f=i.attributes.position;if(u!==null){const d=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let v=d,m=p-1;v<m;v+=c){const g=u.getX(v),M=u.getX(v+1),y=hc(this,e,aa,l,g,M,v);y&&t.push(y)}if(this.isLineLoop){const v=u.getX(p-1),m=u.getX(d),g=hc(this,e,aa,l,v,m,p-1);g&&t.push(g)}}else{const d=Math.max(0,o.start),p=Math.min(f.count,o.start+o.count);for(let v=d,m=p-1;v<m;v+=c){const g=hc(this,e,aa,l,v,v+1,v);g&&t.push(g)}if(this.isLineLoop){const v=hc(this,e,aa,l,p-1,d,p-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function hc(n,e,t,i,r,s,o){const a=n.geometry.attributes.position;if(Vu.fromBufferAttribute(a,r),Hu.fromBufferAttribute(a,s),t.distanceSqToSegment(Vu,Hu,Uf,Wg)>i)return;Uf.applyMatrix4(n.matrixWorld);const c=e.ray.origin.distanceTo(Uf);if(!(c<e.near||c>e.far))return{distance:c,point:Wg.clone().applyMatrix4(n.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:n}}const Xg=new U,Yg=new U;class Xi extends Fr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let r=0,s=t.count;r<s;r+=2)Xg.fromBufferAttribute(t,r),Yg.fromBufferAttribute(t,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+Xg.distanceTo(Yg);e.setAttribute("lineDistance",new Fe(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class ny extends Fr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Gp extends Mn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const jg=new Xe,Od=new zs,fc=new Jt,dc=new U;class iy extends gt{constructor(e=new et,t=new Gp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),fc.copy(i.boundingSphere),fc.applyMatrix4(r),fc.radius+=s,e.ray.intersectsSphere(fc)===!1)return;jg.copy(r).invert(),Od.copy(e.ray).applyMatrix4(jg);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,h=i.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let p=f,v=d;p<v;p++){const m=c.getX(p);dc.fromBufferAttribute(h,m),$g(dc,m,l,r,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,v=d;p<v;p++)dc.fromBufferAttribute(h,p),$g(dc,p,l,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function $g(n,e,t,i,r,s,o){const a=Od.distanceSqToPoint(n);if(a<t){const l=new U;Od.closestPointToPoint(n,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class ry extends Ot{constructor(e,t,i,r,s=qt,o=qt,a,l,c){super(e,t,i,r,s,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const u=this;function h(){u.needsUpdate=!0,u._requestVideoFrameCallbackId=e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&(this._requestVideoFrameCallbackId=e.requestVideoFrameCallback(h))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class TE extends ry{constructor(e,t,i,r,s,o,a,l){super({},e,t,i,r,s,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class EE extends Ot{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Yt,this.minFilter=Yt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Ts extends Ot{constructor(e,t,i,r,s,o,a,l,c,u,h,f){super(null,o,a,l,c,u,r,s,h,f),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class AE extends Ts{constructor(e,t,i,r,s,o){super(e,t,i,s,o),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=fn,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class CE extends Ts{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,mr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class RE extends Ot{constructor(e,t,i,r,s,o,a,l,c){super(e,t,i,r,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Wp extends Ot{constructor(e,t,i=gr,r,s,o,a=Yt,l=Yt,c,u=Uo,h=1){if(u!==Uo&&u!==No)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const f={width:e,height:t,depth:h};super(f,r,s,o,a,l,u,i,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Lr(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Eh extends et{constructor(e=1,t=1,i=4,r=8,s=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:i,radialSegments:r,heightSegments:s},t=Math.max(0,t),i=Math.max(1,Math.floor(i)),r=Math.max(3,Math.floor(r)),s=Math.max(1,Math.floor(s));const o=[],a=[],l=[],c=[],u=t/2,h=Math.PI/2*e,f=t,d=2*h+f,p=i*2+s,v=r+1,m=new U,g=new U;for(let M=0;M<=p;M++){let y=0,b=0,C=0,w=0;if(M<=i){const _=M/i,x=_*Math.PI/2;b=-u-e*Math.cos(x),C=e*Math.sin(x),w=-e*Math.cos(x),y=_*h}else if(M<=i+s){const _=(M-i)/s;b=-u+_*t,C=e,w=0,y=h+_*f}else{const _=(M-i-s)/i,x=_*Math.PI/2;b=u+e*Math.sin(x),C=e*Math.cos(x),w=e*Math.sin(x),y=h+f+_*h}const E=Math.max(0,Math.min(1,y/d));let S=0;M===0?S=.5/r:M===p&&(S=-.5/r);for(let _=0;_<=r;_++){const x=_/r,A=x*Math.PI*2,D=Math.sin(A),k=Math.cos(A);g.x=-C*k,g.y=b,g.z=C*D,a.push(g.x,g.y,g.z),m.set(-C*k,w,C*D),m.normalize(),l.push(m.x,m.y,m.z),c.push(x+S,E)}if(M>0){const _=(M-1)*v;for(let x=0;x<r;x++){const A=_+x,D=_+x+1,k=M*v+x,W=M*v+x+1;o.push(A,D,k),o.push(D,W,k)}}}this.setIndex(o),this.setAttribute("position",new Fe(a,3)),this.setAttribute("normal",new Fe(l,3)),this.setAttribute("uv",new Fe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Eh(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class Ah extends et{constructor(e=1,t=32,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new U,u=new de;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=i+h/t*r;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new Fe(o,3)),this.setAttribute("normal",new Fe(a,3)),this.setAttribute("uv",new Fe(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ah(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class wl extends et{constructor(e=1,t=1,i=1,r=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const v=[],m=i/2;let g=0;M(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Fe(h,3)),this.setAttribute("normal",new Fe(f,3)),this.setAttribute("uv",new Fe(d,2));function M(){const b=new U,C=new U;let w=0;const E=(t-e)/i;for(let S=0;S<=s;S++){const _=[],x=S/s,A=x*(t-e)+e;for(let D=0;D<=r;D++){const k=D/r,W=k*l+a,Y=Math.sin(W),z=Math.cos(W);C.x=A*Y,C.y=-x*i+m,C.z=A*z,h.push(C.x,C.y,C.z),b.set(Y,E,z).normalize(),f.push(b.x,b.y,b.z),d.push(k,1-x),_.push(p++)}v.push(_)}for(let S=0;S<r;S++)for(let _=0;_<s;_++){const x=v[_][S],A=v[_+1][S],D=v[_+1][S+1],k=v[_][S+1];(e>0||_!==0)&&(u.push(x,A,k),w+=3),(t>0||_!==s-1)&&(u.push(A,D,k),w+=3)}c.addGroup(g,w,0),g+=w}function y(b){const C=p,w=new de,E=new U;let S=0;const _=b===!0?e:t,x=b===!0?1:-1;for(let D=1;D<=r;D++)h.push(0,m*x,0),f.push(0,x,0),d.push(.5,.5),p++;const A=p;for(let D=0;D<=r;D++){const W=D/r*l+a,Y=Math.cos(W),z=Math.sin(W);E.x=_*z,E.y=m*x,E.z=_*Y,h.push(E.x,E.y,E.z),f.push(0,x,0),w.x=Y*.5+.5,w.y=z*.5*x+.5,d.push(w.x,w.y),p++}for(let D=0;D<r;D++){const k=C+D,W=A+D;b===!0?u.push(W,W+1,k):u.push(W+1,W,k),S+=3}c.addGroup(g,S,b===!0?1:2),g+=S}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wl(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Tl extends wl{constructor(e=1,t=1,i=32,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,i,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Tl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Gr extends et{constructor(e=[],t=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};const s=[],o=[];a(r),c(i),u(),this.setAttribute("position",new Fe(s,3)),this.setAttribute("normal",new Fe(s.slice(),3)),this.setAttribute("uv",new Fe(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(M){const y=new U,b=new U,C=new U;for(let w=0;w<t.length;w+=3)d(t[w+0],y),d(t[w+1],b),d(t[w+2],C),l(y,b,C,M)}function l(M,y,b,C){const w=C+1,E=[];for(let S=0;S<=w;S++){E[S]=[];const _=M.clone().lerp(b,S/w),x=y.clone().lerp(b,S/w),A=w-S;for(let D=0;D<=A;D++)D===0&&S===w?E[S][D]=_:E[S][D]=_.clone().lerp(x,D/A)}for(let S=0;S<w;S++)for(let _=0;_<2*(w-S)-1;_++){const x=Math.floor(_/2);_%2===0?(f(E[S][x+1]),f(E[S+1][x]),f(E[S][x])):(f(E[S][x+1]),f(E[S+1][x+1]),f(E[S+1][x]))}}function c(M){const y=new U;for(let b=0;b<s.length;b+=3)y.x=s[b+0],y.y=s[b+1],y.z=s[b+2],y.normalize().multiplyScalar(M),s[b+0]=y.x,s[b+1]=y.y,s[b+2]=y.z}function u(){const M=new U;for(let y=0;y<s.length;y+=3){M.x=s[y+0],M.y=s[y+1],M.z=s[y+2];const b=m(M)/2/Math.PI+.5,C=g(M)/Math.PI+.5;o.push(b,1-C)}p(),h()}function h(){for(let M=0;M<o.length;M+=6){const y=o[M+0],b=o[M+2],C=o[M+4],w=Math.max(y,b,C),E=Math.min(y,b,C);w>.9&&E<.1&&(y<.2&&(o[M+0]+=1),b<.2&&(o[M+2]+=1),C<.2&&(o[M+4]+=1))}}function f(M){s.push(M.x,M.y,M.z)}function d(M,y){const b=M*3;y.x=e[b+0],y.y=e[b+1],y.z=e[b+2]}function p(){const M=new U,y=new U,b=new U,C=new U,w=new de,E=new de,S=new de;for(let _=0,x=0;_<s.length;_+=9,x+=6){M.set(s[_+0],s[_+1],s[_+2]),y.set(s[_+3],s[_+4],s[_+5]),b.set(s[_+6],s[_+7],s[_+8]),w.set(o[x+0],o[x+1]),E.set(o[x+2],o[x+3]),S.set(o[x+4],o[x+5]),C.copy(M).add(y).add(b).divideScalar(3);const A=m(C);v(w,x+0,M,A),v(E,x+2,y,A),v(S,x+4,b,A)}}function v(M,y,b,C){C<0&&M.x===1&&(o[y]=M.x-1),b.x===0&&b.z===0&&(o[y]=C/2/Math.PI+.5)}function m(M){return Math.atan2(M.z,-M.x)}function g(M){return Math.atan2(-M.y,Math.sqrt(M.x*M.x+M.z*M.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Gr(e.vertices,e.indices,e.radius,e.details)}}class Ch extends Gr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ch(e.radius,e.detail)}}const pc=new U,mc=new U,Nf=new U,gc=new Pn;class sy extends et{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const r=Math.pow(10,4),s=Math.cos(ws*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:m,c:g}=gc;if(v.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),gc.getNormal(Nf),h[0]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,h[1]=`${Math.round(m.x*r)},${Math.round(m.y*r)},${Math.round(m.z*r)}`,h[2]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let M=0;M<3;M++){const y=(M+1)%3,b=h[M],C=h[y],w=gc[u[M]],E=gc[u[y]],S=`${b}_${C}`,_=`${C}_${b}`;_ in f&&f[_]?(Nf.dot(f[_].normal)<=s&&(d.push(w.x,w.y,w.z),d.push(E.x,E.y,E.z)),f[_]=null):S in f||(f[S]={index0:c[M],index1:c[y],normal:Nf.clone()})}}for(const p in f)if(f[p]){const{index0:v,index1:m}=f[p];pc.fromBufferAttribute(a,v),mc.fromBufferAttribute(a,m),d.push(pc.x,pc.y,pc.z),d.push(mc.x,mc.y,mc.z)}this.setAttribute("position",new Fe(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ai{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)i=this.getPoint(o/e),s+=i.distanceTo(r),t.push(s),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const i=this.getLengths();let r=0;const s=i.length;let o;t?o=t:o=e*i[s-1];let a=0,l=s-1,c;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),c=i[r]-o,c<0)a=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,i[r]===o)return r/(s-1);const u=i[r],f=i[r+1]-u,d=(o-u)/f;return(r+d)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),a=this.getPoint(s),l=t||(o.isVector2?new de:new U);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t=!1){const i=new U,r=[],s=[],o=[],a=new U,l=new Xe;for(let d=0;d<=e;d++){const p=d/e;r[d]=this.getTangentAt(p,new U)}s[0]=new U,o[0]=new U;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),f=Math.abs(r[0].z);u<=c&&(c=u,i.set(1,0,0)),h<=c&&(c=h,i.set(0,1,0)),f<=c&&i.set(0,0,1),a.crossVectors(r[0],i).normalize(),s[0].crossVectors(r[0],a),o[0].crossVectors(r[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(r[d-1],r[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Ke(r[d-1].dot(r[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,p))}o[d].crossVectors(r[d],s[d])}if(t===!0){let d=Math.acos(Ke(s[0].dot(s[e]),-1,1));d/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(r[p],d*p)),o[p].crossVectors(r[p],s[p])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Rh extends Ai{constructor(e=0,t=0,i=1,r=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new de){const i=t,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class oy extends Rh{constructor(e,t,i,r,s,o){super(e,t,i,i,r,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Xp(){let n=0,e=0,t=0,i=0;function r(s,o,a,l){n=s,e=a,t=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return n+e*s+t*o+i*a}}}const vc=new U,Of=new Xp,Ff=new Xp,Bf=new Xp;class ay extends Ai{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new U){const i=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=r[(a-1)%s]:(vc.subVectors(r[0],r[1]).add(r[0]),c=vc);const h=r[a%s],f=r[(a+1)%s];if(this.closed||a+2<s?u=r[(a+2)%s]:(vc.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=vc),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),v=Math.pow(h.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(u),d);v<1e-4&&(v=1),p<1e-4&&(p=v),m<1e-4&&(m=v),Of.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,v,m),Ff.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,v,m),Bf.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,v,m)}else this.curveType==="catmullrom"&&(Of.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),Ff.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),Bf.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return i.set(Of.calc(l),Ff.calc(l),Bf.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new U().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function qg(n,e,t,i,r){const s=(i-e)*.5,o=(r-t)*.5,a=n*n,l=n*a;return(2*t-2*i+s+o)*l+(-3*t+3*i-2*s-o)*a+s*n+t}function IE(n,e){const t=1-n;return t*t*e}function PE(n,e){return 2*(1-n)*n*e}function LE(n,e){return n*n*e}function Ua(n,e,t,i){return IE(n,e)+PE(n,t)+LE(n,i)}function DE(n,e){const t=1-n;return t*t*t*e}function UE(n,e){const t=1-n;return 3*t*t*n*e}function NE(n,e){return 3*(1-n)*n*n*e}function OE(n,e){return n*n*n*e}function Na(n,e,t,i,r){return DE(n,e)+UE(n,t)+NE(n,i)+OE(n,r)}class Yp extends Ai{constructor(e=new de,t=new de,i=new de,r=new de){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new de){const i=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(Na(e,r.x,s.x,o.x,a.x),Na(e,r.y,s.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ly extends Ai{constructor(e=new U,t=new U,i=new U,r=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new U){const i=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(Na(e,r.x,s.x,o.x,a.x),Na(e,r.y,s.y,o.y,a.y),Na(e,r.z,s.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class jp extends Ai{constructor(e=new de,t=new de){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new de){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new de){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cy extends Ai{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $p extends Ai{constructor(e=new de,t=new de,i=new de){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new de){const i=t,r=this.v0,s=this.v1,o=this.v2;return i.set(Ua(e,r.x,s.x,o.x),Ua(e,r.y,s.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class qp extends Ai{constructor(e=new U,t=new U,i=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new U){const i=t,r=this.v0,s=this.v1,o=this.v2;return i.set(Ua(e,r.x,s.x,o.x),Ua(e,r.y,s.y,o.y),Ua(e,r.z,s.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zp extends Ai{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new de){const i=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),a=s-o,l=r[o===0?o:o-1],c=r[o],u=r[o>r.length-2?r.length-1:o+1],h=r[o>r.length-3?r.length-1:o+2];return i.set(qg(a,l.x,c.x,u.x,h.x),qg(a,l.y,c.y,u.y,h.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new de().fromArray(r))}return this}}var Gu=Object.freeze({__proto__:null,ArcCurve:oy,CatmullRomCurve3:ay,CubicBezierCurve:Yp,CubicBezierCurve3:ly,EllipseCurve:Rh,LineCurve:jp,LineCurve3:cy,QuadraticBezierCurve:$p,QuadraticBezierCurve3:qp,SplineCurve:Zp});class uy extends Ai{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Gu[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=i){const o=r[s]-i,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let r=0,s=this.curves;r<s.length;r++){const o=s[r],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];i&&i.equals(u)||(t.push(u),i=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(new Gu[r.type]().fromJSON(r))}return this}}class Wu extends uy{constructor(e){super(),this.type="Path",this.currentPoint=new de,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new jp(this.currentPoint.clone(),new de(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){const s=new $p(this.currentPoint.clone(),new de(e,t),new de(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,s,o){const a=new Yp(this.currentPoint.clone(),new de(e,t),new de(i,r),new de(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new Zp(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,r,s,o),this}absarc(e,t,i,r,s,o){return this.absellipse(e,t,i,i,r,s,o),this}ellipse(e,t,i,r,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,i,r,s,o,a,l),this}absellipse(e,t,i,r,s,o,a,l){const c=new Rh(e,t,i,r,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Es extends Wu{constructor(e){super(e),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(new Wu().fromJSON(r))}return this}}function FE(n,e,t=2){const i=e&&e.length,r=i?e[0]*t:n.length;let s=hy(n,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c;if(i&&(s=HE(n,e,s,t)),n.length>80*t){a=1/0,l=1/0;let u=-1/0,h=-1/0;for(let f=t;f<r;f+=t){const d=n[f],p=n[f+1];d<a&&(a=d),p<l&&(l=p),d>u&&(u=d),p>h&&(h=p)}c=Math.max(u-a,h-l),c=c!==0?32767/c:0}return rl(s,o,t,a,l,c,0),o}function hy(n,e,t,i,r){let s;if(r===QE(n,e,t,i)>0)for(let o=e;o<t;o+=i)s=Zg(o/i|0,n[o],n[o+1],s);else for(let o=t-i;o>=e;o-=i)s=Zg(o/i|0,n[o],n[o+1],s);return s&&Vo(s,s.next)&&(ol(s),s=s.next),s}function Ns(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(Vo(t,t.next)||Vt(t.prev,t,t.next)===0)){if(ol(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function rl(n,e,t,i,r,s,o){if(!n)return;!o&&s&&jE(n,i,r,s);let a=n;for(;n.prev!==n.next;){const l=n.prev,c=n.next;if(s?zE(n,i,r,s):BE(n)){e.push(l.i,n.i,c.i),ol(n),n=c.next,a=c.next;continue}if(n=c,n===a){o?o===1?(n=kE(Ns(n),e),rl(n,e,t,i,r,s,2)):o===2&&VE(n,e,t,i,r,s):rl(Ns(n),e,t,i,r,s,1);break}}}function BE(n){const e=n.prev,t=n,i=n.next;if(Vt(e,t,i)>=0)return!1;const r=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,u=Math.min(r,s,o),h=Math.min(a,l,c),f=Math.max(r,s,o),d=Math.max(a,l,c);let p=i.next;for(;p!==e;){if(p.x>=u&&p.x<=f&&p.y>=h&&p.y<=d&&va(r,a,s,l,o,c,p.x,p.y)&&Vt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function zE(n,e,t,i){const r=n.prev,s=n,o=n.next;if(Vt(r,s,o)>=0)return!1;const a=r.x,l=s.x,c=o.x,u=r.y,h=s.y,f=o.y,d=Math.min(a,l,c),p=Math.min(u,h,f),v=Math.max(a,l,c),m=Math.max(u,h,f),g=Fd(d,p,e,t,i),M=Fd(v,m,e,t,i);let y=n.prevZ,b=n.nextZ;for(;y&&y.z>=g&&b&&b.z<=M;){if(y.x>=d&&y.x<=v&&y.y>=p&&y.y<=m&&y!==r&&y!==o&&va(a,u,l,h,c,f,y.x,y.y)&&Vt(y.prev,y,y.next)>=0||(y=y.prevZ,b.x>=d&&b.x<=v&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&va(a,u,l,h,c,f,b.x,b.y)&&Vt(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;y&&y.z>=g;){if(y.x>=d&&y.x<=v&&y.y>=p&&y.y<=m&&y!==r&&y!==o&&va(a,u,l,h,c,f,y.x,y.y)&&Vt(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;b&&b.z<=M;){if(b.x>=d&&b.x<=v&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&va(a,u,l,h,c,f,b.x,b.y)&&Vt(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function kE(n,e){let t=n;do{const i=t.prev,r=t.next.next;!Vo(i,r)&&dy(i,t,t.next,r)&&sl(i,r)&&sl(r,i)&&(e.push(i.i,t.i,r.i),ol(t),ol(t.next),t=n=r),t=t.next}while(t!==n);return Ns(t)}function VE(n,e,t,i,r,s){let o=n;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&ZE(o,a)){let l=py(o,a);o=Ns(o,o.next),l=Ns(l,l.next),rl(o,e,t,i,r,s,0),rl(l,e,t,i,r,s,0);return}a=a.next}o=o.next}while(o!==n)}function HE(n,e,t,i){const r=[];for(let s=0,o=e.length;s<o;s++){const a=e[s]*i,l=s<o-1?e[s+1]*i:n.length,c=hy(n,a,l,i,!1);c===c.next&&(c.steiner=!0),r.push(qE(c))}r.sort(GE);for(let s=0;s<r.length;s++)t=WE(r[s],t);return t}function GE(n,e){let t=n.x-e.x;if(t===0&&(t=n.y-e.y,t===0)){const i=(n.next.y-n.y)/(n.next.x-n.x),r=(e.next.y-e.y)/(e.next.x-e.x);t=i-r}return t}function WE(n,e){const t=XE(n,e);if(!t)return e;const i=py(t,n);return Ns(i,i.next),Ns(t,t.next)}function XE(n,e){let t=e;const i=n.x,r=n.y;let s=-1/0,o;if(Vo(n,t))return t;do{if(Vo(n,t.next))return t.next;if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const h=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=i&&h>s&&(s=h,o=t.x<t.next.x?t:t.next,h===i))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let u=1/0;t=o;do{if(i>=t.x&&t.x>=l&&i!==t.x&&fy(r<c?i:s,r,l,c,r<c?s:i,r,t.x,t.y)){const h=Math.abs(r-t.y)/(i-t.x);sl(t,n)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&YE(o,t)))&&(o=t,u=h)}t=t.next}while(t!==a);return o}function YE(n,e){return Vt(n.prev,n,e.prev)<0&&Vt(e.next,n,n.next)<0}function jE(n,e,t,i){let r=n;do r.z===0&&(r.z=Fd(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,$E(r)}function $E(n){let e,t=1;do{let i=n,r;n=null;let s=null;for(e=0;i;){e++;let o=i,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||i.z<=o.z)?(r=i,i=i.nextZ,a--):(r=o,o=o.nextZ,l--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;i=o}s.nextZ=null,t*=2}while(e>1);return n}function Fd(n,e,t,i,r){return n=(n-t)*r|0,e=(e-i)*r|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function qE(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function fy(n,e,t,i,r,s,o,a){return(r-o)*(e-a)>=(n-o)*(s-a)&&(n-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(r-o)*(i-a)}function va(n,e,t,i,r,s,o,a){return!(n===o&&e===a)&&fy(n,e,t,i,r,s,o,a)}function ZE(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!KE(n,e)&&(sl(n,e)&&sl(e,n)&&JE(n,e)&&(Vt(n.prev,n,e.prev)||Vt(n,e.prev,e))||Vo(n,e)&&Vt(n.prev,n,n.next)>0&&Vt(e.prev,e,e.next)>0)}function Vt(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function Vo(n,e){return n.x===e.x&&n.y===e.y}function dy(n,e,t,i){const r=xc(Vt(n,e,t)),s=xc(Vt(n,e,i)),o=xc(Vt(t,i,n)),a=xc(Vt(t,i,e));return!!(r!==s&&o!==a||r===0&&_c(n,t,e)||s===0&&_c(n,i,e)||o===0&&_c(t,n,i)||a===0&&_c(t,e,i))}function _c(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function xc(n){return n>0?1:n<0?-1:0}function KE(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&dy(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function sl(n,e){return Vt(n.prev,n,n.next)<0?Vt(n,e,n.next)>=0&&Vt(n,n.prev,e)>=0:Vt(n,e,n.prev)<0||Vt(n,n.next,e)<0}function JE(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function py(n,e){const t=Bd(n.i,n.x,n.y),i=Bd(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function Zg(n,e,t,i){const r=Bd(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function ol(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function Bd(n,e,t){return{i:n,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function QE(n,e,t,i){let r=0;for(let s=e,o=t-i;s<t;s+=i)r+=(n[o]-n[s])*(n[s+1]+n[o+1]),o=s;return r}class eA{static triangulate(e,t,i=2){return FE(e,t,i)}}class xi{static area(e){const t=e.length;let i=0;for(let r=t-1,s=0;s<t;r=s++)i+=e[r].x*e[s].y-e[s].x*e[r].y;return i*.5}static isClockWise(e){return xi.area(e)<0}static triangulateShape(e,t){const i=[],r=[],s=[];Kg(e),Jg(i,e);let o=e.length;t.forEach(Kg);for(let l=0;l<t.length;l++)r.push(o),o+=t[l].length,Jg(i,t[l]);const a=eA.triangulate(i,r);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Kg(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function Jg(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class Ih extends et{constructor(e=new Es([new de(.5,.5),new de(-.5,.5),new de(-.5,-.5),new de(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new Fe(r,3)),this.setAttribute("uv",new Fe(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,M=t.UVGenerator!==void 0?t.UVGenerator:tA;let y,b=!1,C,w,E,S;g&&(y=g.getSpacedPoints(u),b=!0,f=!1,C=g.computeFrenetFrames(u,!1),w=new U,E=new U,S=new U),f||(m=0,d=0,p=0,v=0);const _=a.extractPoints(c);let x=_.shape;const A=_.holes;if(!xi.isClockWise(x)){x=x.reverse();for(let O=0,B=A.length;O<B;O++){const G=A[O];xi.isClockWise(G)&&(A[O]=G.reverse())}}function k(O){const G=10000000000000001e-36;let H=O[0];for(let K=1;K<=O.length;K++){const q=K%O.length,J=O[q],ie=J.x-H.x,pe=J.y-H.y,L=ie*ie+pe*pe,R=Math.max(Math.abs(J.x),Math.abs(J.y),Math.abs(H.x),Math.abs(H.y)),j=G*R*R;if(L<=j){O.splice(q,1),K--;continue}H=J}}k(x),A.forEach(k);const W=A.length,Y=x;for(let O=0;O<W;O++){const B=A[O];x=x.concat(B)}function z(O,B,G){return B||console.error("THREE.ExtrudeGeometry: vec does not exist"),O.clone().addScaledVector(B,G)}const Q=x.length;function Z(O,B,G){let H,K,q;const J=O.x-B.x,ie=O.y-B.y,pe=G.x-O.x,L=G.y-O.y,R=J*J+ie*ie,j=J*L-ie*pe;if(Math.abs(j)>Number.EPSILON){const te=Math.sqrt(R),fe=Math.sqrt(pe*pe+L*L),re=B.x-ie/te,Ce=B.y+J/te,ve=G.x-L/fe,Pe=G.y+pe/fe,Le=((ve-re)*L-(Pe-Ce)*pe)/(J*L-ie*pe);H=re+J*Le-O.x,K=Ce+ie*Le-O.y;const be=H*H+K*K;if(be<=2)return new de(H,K);q=Math.sqrt(be/2)}else{let te=!1;J>Number.EPSILON?pe>Number.EPSILON&&(te=!0):J<-Number.EPSILON?pe<-Number.EPSILON&&(te=!0):Math.sign(ie)===Math.sign(L)&&(te=!0),te?(H=-ie,K=J,q=Math.sqrt(R)):(H=J,K=ie,q=Math.sqrt(R/2))}return new de(H/q,K/q)}const he=[];for(let O=0,B=Y.length,G=B-1,H=O+1;O<B;O++,G++,H++)G===B&&(G=0),H===B&&(H=0),he[O]=Z(Y[O],Y[G],Y[H]);const me=[];let oe,Ee=he.concat();for(let O=0,B=W;O<B;O++){const G=A[O];oe=[];for(let H=0,K=G.length,q=K-1,J=H+1;H<K;H++,q++,J++)q===K&&(q=0),J===K&&(J=0),oe[H]=Z(G[H],G[q],G[J]);me.push(oe),Ee=Ee.concat(oe)}let Ve;if(m===0)Ve=xi.triangulateShape(Y,A);else{const O=[],B=[];for(let G=0;G<m;G++){const H=G/m,K=d*Math.cos(H*Math.PI/2),q=p*Math.sin(H*Math.PI/2)+v;for(let J=0,ie=Y.length;J<ie;J++){const pe=z(Y[J],he[J],q);I(pe.x,pe.y,-K),H===0&&O.push(pe)}for(let J=0,ie=W;J<ie;J++){const pe=A[J];oe=me[J];const L=[];for(let R=0,j=pe.length;R<j;R++){const te=z(pe[R],oe[R],q);I(te.x,te.y,-K),H===0&&L.push(te)}H===0&&B.push(L)}}Ve=xi.triangulateShape(O,B)}const ze=Ve.length,ae=p+v;for(let O=0;O<Q;O++){const B=f?z(x[O],Ee[O],ae):x[O];b?(E.copy(C.normals[0]).multiplyScalar(B.x),w.copy(C.binormals[0]).multiplyScalar(B.y),S.copy(y[0]).add(E).add(w),I(S.x,S.y,S.z)):I(B.x,B.y,0)}for(let O=1;O<=u;O++)for(let B=0;B<Q;B++){const G=f?z(x[B],Ee[B],ae):x[B];b?(E.copy(C.normals[O]).multiplyScalar(G.x),w.copy(C.binormals[O]).multiplyScalar(G.y),S.copy(y[O]).add(E).add(w),I(S.x,S.y,S.z)):I(G.x,G.y,h/u*O)}for(let O=m-1;O>=0;O--){const B=O/m,G=d*Math.cos(B*Math.PI/2),H=p*Math.sin(B*Math.PI/2)+v;for(let K=0,q=Y.length;K<q;K++){const J=z(Y[K],he[K],H);I(J.x,J.y,h+G)}for(let K=0,q=A.length;K<q;K++){const J=A[K];oe=me[K];for(let ie=0,pe=J.length;ie<pe;ie++){const L=z(J[ie],oe[ie],H);b?I(L.x,L.y+y[u-1].y,y[u-1].x+G):I(L.x,L.y,h+G)}}}ye(),_e();function ye(){const O=r.length/3;if(f){let B=0,G=Q*B;for(let H=0;H<ze;H++){const K=Ve[H];F(K[2]+G,K[1]+G,K[0]+G)}B=u+m*2,G=Q*B;for(let H=0;H<ze;H++){const K=Ve[H];F(K[0]+G,K[1]+G,K[2]+G)}}else{for(let B=0;B<ze;B++){const G=Ve[B];F(G[2],G[1],G[0])}for(let B=0;B<ze;B++){const G=Ve[B];F(G[0]+Q*u,G[1]+Q*u,G[2]+Q*u)}}i.addGroup(O,r.length/3-O,0)}function _e(){const O=r.length/3;let B=0;ue(Y,B),B+=Y.length;for(let G=0,H=A.length;G<H;G++){const K=A[G];ue(K,B),B+=K.length}i.addGroup(O,r.length/3-O,1)}function ue(O,B){let G=O.length;for(;--G>=0;){const H=G;let K=G-1;K<0&&(K=O.length-1);for(let q=0,J=u+m*2;q<J;q++){const ie=Q*q,pe=Q*(q+1),L=B+H+ie,R=B+K+ie,j=B+K+pe,te=B+H+pe;$(L,R,j,te)}}}function I(O,B,G){l.push(O),l.push(B),l.push(G)}function F(O,B,G){P(O),P(B),P(G);const H=r.length/3,K=M.generateTopUV(i,r,H-3,H-2,H-1);T(K[0]),T(K[1]),T(K[2])}function $(O,B,G,H){P(O),P(B),P(H),P(B),P(G),P(H);const K=r.length/3,q=M.generateSideWallUV(i,r,K-6,K-3,K-2,K-1);T(q[0]),T(q[1]),T(q[3]),T(q[1]),T(q[2]),T(q[3])}function P(O){r.push(l[O*3+0]),r.push(l[O*3+1]),r.push(l[O*3+2])}function T(O){s.push(O.x),s.push(O.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return nA(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];i.push(a)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new Gu[r.type]().fromJSON(r)),new Ih(i,e.options)}}const tA={generateTopUV:function(n,e,t,i,r){const s=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[r*3],u=e[r*3+1];return[new de(s,o),new de(a,l),new de(c,u)]},generateSideWallUV:function(n,e,t,i,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],u=e[i*3+1],h=e[i*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],v=e[s*3],m=e[s*3+1],g=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new de(o,1-l),new de(c,1-h),new de(f,1-p),new de(v,1-g)]:[new de(a,1-l),new de(u,1-h),new de(d,1-p),new de(m,1-g)]}};function nA(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const s=n[i];t.shapes.push(s.uuid)}else t.shapes.push(n.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Ph extends Gr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ph(e.radius,e.detail)}}class Lh extends et{constructor(e=[new de(0,-.5),new de(.5,0),new de(0,.5)],t=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=Ke(r,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],u=1/t,h=new U,f=new de,d=new U,p=new U,v=new U;let m=0,g=0;for(let M=0;M<=e.length-1;M++)switch(M){case 0:m=e[M+1].x-e[M].x,g=e[M+1].y-e[M].y,d.x=g*1,d.y=-m,d.z=g*0,v.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:m=e[M+1].x-e[M].x,g=e[M+1].y-e[M].y,d.x=g*1,d.y=-m,d.z=g*0,p.copy(d),d.x+=v.x,d.y+=v.y,d.z+=v.z,d.normalize(),l.push(d.x,d.y,d.z),v.copy(p)}for(let M=0;M<=t;M++){const y=i+M*u*r,b=Math.sin(y),C=Math.cos(y);for(let w=0;w<=e.length-1;w++){h.x=e[w].x*b,h.y=e[w].y,h.z=e[w].x*C,o.push(h.x,h.y,h.z),f.x=M/t,f.y=w/(e.length-1),a.push(f.x,f.y);const E=l[3*w+0]*b,S=l[3*w+1],_=l[3*w+0]*C;c.push(E,S,_)}}for(let M=0;M<t;M++)for(let y=0;y<e.length-1;y++){const b=y+M*e.length,C=b,w=b+e.length,E=b+e.length+1,S=b+1;s.push(C,w,S),s.push(E,S,w)}this.setIndex(s),this.setAttribute("position",new Fe(o,3)),this.setAttribute("uv",new Fe(a,2)),this.setAttribute("normal",new Fe(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lh(e.points,e.segments,e.phiStart,e.phiLength)}}class El extends Gr{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new El(e.radius,e.detail)}}class Wr extends et{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,h=e/a,f=t/l,d=[],p=[],v=[],m=[];for(let g=0;g<u;g++){const M=g*f-o;for(let y=0;y<c;y++){const b=y*h-s;p.push(b,-M,0),v.push(0,0,1),m.push(y/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let M=0;M<a;M++){const y=M+c*g,b=M+c*(g+1),C=M+1+c*(g+1),w=M+1+c*g;d.push(y,b,w),d.push(b,C,w)}this.setIndex(d),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(v,3)),this.setAttribute("uv",new Fe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wr(e.width,e.height,e.widthSegments,e.heightSegments)}}class Dh extends et{constructor(e=.5,t=1,i=32,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},i=Math.max(3,i),r=Math.max(1,r);const a=[],l=[],c=[],u=[];let h=e;const f=(t-e)/r,d=new U,p=new de;for(let v=0;v<=r;v++){for(let m=0;m<=i;m++){const g=s+m/i*o;d.x=h*Math.cos(g),d.y=h*Math.sin(g),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let v=0;v<r;v++){const m=v*(i+1);for(let g=0;g<i;g++){const M=g+m,y=M,b=M+i+1,C=M+i+2,w=M+1;a.push(y,b,w),a.push(b,C,w)}}this.setIndex(a),this.setAttribute("position",new Fe(l,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Dh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Uh extends et{constructor(e=new Es([new de(0,.5),new de(-.5,-.5),new de(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new Fe(r,3)),this.setAttribute("normal",new Fe(s,3)),this.setAttribute("uv",new Fe(o,2));function c(u){const h=r.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;xi.isClockWise(d)===!1&&(d=d.reverse());for(let m=0,g=p.length;m<g;m++){const M=p[m];xi.isClockWise(M)===!0&&(p[m]=M.reverse())}const v=xi.triangulateShape(d,p);for(let m=0,g=p.length;m<g;m++){const M=p[m];d=d.concat(M)}for(let m=0,g=d.length;m<g;m++){const M=d[m];r.push(M.x,M.y,0),s.push(0,0,1),o.push(M.x,M.y)}for(let m=0,g=v.length;m<g;m++){const M=v[m],y=M[0]+h,b=M[1]+h,C=M[2]+h;i.push(y,b,C),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return iA(t,e)}static fromJSON(e,t){const i=[];for(let r=0,s=e.shapes.length;r<s;r++){const o=t[e.shapes[r]];i.push(o)}return new Uh(i,e.curveSegments)}}function iA(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const r=n[t];e.shapes.push(r.uuid)}else e.shapes.push(n.uuid);return e}class Al extends et{constructor(e=1,t=32,i=16,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new U,f=new U,d=[],p=[],v=[],m=[];for(let g=0;g<=i;g++){const M=[],y=g/i;let b=0;g===0&&o===0?b=.5/t:g===i&&l===Math.PI&&(b=-.5/t);for(let C=0;C<=t;C++){const w=C/t;h.x=-e*Math.cos(r+w*s)*Math.sin(o+y*a),h.y=e*Math.cos(o+y*a),h.z=e*Math.sin(r+w*s)*Math.sin(o+y*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),v.push(f.x,f.y,f.z),m.push(w+b,1-y),M.push(c++)}u.push(M)}for(let g=0;g<i;g++)for(let M=0;M<t;M++){const y=u[g][M+1],b=u[g][M],C=u[g+1][M],w=u[g+1][M+1];(g!==0||o>0)&&d.push(y,b,w),(g!==i-1||l<Math.PI)&&d.push(b,C,w)}this.setIndex(d),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(v,3)),this.setAttribute("uv",new Fe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Al(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Nh extends Gr{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Nh(e.radius,e.detail)}}class Oh extends et{constructor(e=1,t=.4,i=12,r=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:s},i=Math.floor(i),r=Math.floor(r);const o=[],a=[],l=[],c=[],u=new U,h=new U,f=new U;for(let d=0;d<=i;d++)for(let p=0;p<=r;p++){const v=p/r*s,m=d/i*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(v),h.y=(e+t*Math.cos(m))*Math.sin(v),h.z=t*Math.sin(m),a.push(h.x,h.y,h.z),u.x=e*Math.cos(v),u.y=e*Math.sin(v),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/r),c.push(d/i)}for(let d=1;d<=i;d++)for(let p=1;p<=r;p++){const v=(r+1)*d+p-1,m=(r+1)*(d-1)+p-1,g=(r+1)*(d-1)+p,M=(r+1)*d+p;o.push(v,m,M),o.push(m,g,M)}this.setIndex(o),this.setAttribute("position",new Fe(a,3)),this.setAttribute("normal",new Fe(l,3)),this.setAttribute("uv",new Fe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Fh extends et{constructor(e=1,t=.4,i=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:s,q:o},i=Math.floor(i),r=Math.floor(r);const a=[],l=[],c=[],u=[],h=new U,f=new U,d=new U,p=new U,v=new U,m=new U,g=new U;for(let y=0;y<=i;++y){const b=y/i*s*Math.PI*2;M(b,s,o,e,d),M(b+.01,s,o,e,p),m.subVectors(p,d),g.addVectors(p,d),v.crossVectors(m,g),g.crossVectors(v,m),v.normalize(),g.normalize();for(let C=0;C<=r;++C){const w=C/r*Math.PI*2,E=-t*Math.cos(w),S=t*Math.sin(w);h.x=d.x+(E*g.x+S*v.x),h.y=d.y+(E*g.y+S*v.y),h.z=d.z+(E*g.z+S*v.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(y/i),u.push(C/r)}}for(let y=1;y<=i;y++)for(let b=1;b<=r;b++){const C=(r+1)*(y-1)+(b-1),w=(r+1)*y+(b-1),E=(r+1)*y+b,S=(r+1)*(y-1)+b;a.push(C,w,S),a.push(w,E,S)}this.setIndex(a),this.setAttribute("position",new Fe(l,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(u,2));function M(y,b,C,w,E){const S=Math.cos(y),_=Math.sin(y),x=C/b*y,A=Math.cos(x);E.x=w*(2+A)*.5*S,E.y=w*(2+A)*_*.5,E.z=w*Math.sin(x)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Bh extends et{constructor(e=new qp(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new U,l=new U,c=new de;let u=new U;const h=[],f=[],d=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new Fe(h,3)),this.setAttribute("normal",new Fe(f,3)),this.setAttribute("uv",new Fe(d,2));function v(){for(let y=0;y<t;y++)m(y);m(s===!1?t:0),M(),g()}function m(y){u=e.getPointAt(y/t,u);const b=o.normals[y],C=o.binormals[y];for(let w=0;w<=r;w++){const E=w/r*Math.PI*2,S=Math.sin(E),_=-Math.cos(E);l.x=_*b.x+S*C.x,l.y=_*b.y+S*C.y,l.z=_*b.z+S*C.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+i*l.x,a.y=u.y+i*l.y,a.z=u.z+i*l.z,h.push(a.x,a.y,a.z)}}function g(){for(let y=1;y<=t;y++)for(let b=1;b<=r;b++){const C=(r+1)*(y-1)+(b-1),w=(r+1)*y+(b-1),E=(r+1)*y+b,S=(r+1)*(y-1)+b;p.push(C,w,S),p.push(w,E,S)}}function M(){for(let y=0;y<=t;y++)for(let b=0;b<=r;b++)c.x=y/t,c.y=b/r,d.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Bh(new Gu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Kp extends et{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,r=new U,s=new U;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,v=f+d;p<v;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),M=a.getX(p+(m+1)%3);r.fromBufferAttribute(o,g),s.fromBufferAttribute(o,M),Qg(r,s,i)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;r.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),Qg(r,s,i)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Fe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Qg(n,e,t){const i=`${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;return t.has(i)===!0||t.has(r)===!0?!1:(t.add(i),t.add(r),!0)}var e0=Object.freeze({__proto__:null,BoxGeometry:Hr,CapsuleGeometry:Eh,CircleGeometry:Ah,ConeGeometry:Tl,CylinderGeometry:wl,DodecahedronGeometry:Ch,EdgesGeometry:sy,ExtrudeGeometry:Ih,IcosahedronGeometry:Ph,LatheGeometry:Lh,OctahedronGeometry:El,PlaneGeometry:Wr,PolyhedronGeometry:Gr,RingGeometry:Dh,ShapeGeometry:Uh,SphereGeometry:Al,TetrahedronGeometry:Nh,TorusGeometry:Oh,TorusKnotGeometry:Fh,TubeGeometry:Bh,WireframeGeometry:Kp});class my extends Mn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ae(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Oa extends pn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Jp extends Mn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Dn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class gy extends Jp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new de(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ke(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ae(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class vy extends Mn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ae(16777215),this.specular=new Ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Dn,this.combine=_l,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _y extends Mn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class xy extends Mn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class yy extends Mn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Dn,this.combine=_l,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Qp extends Mn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Dx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class em extends Mn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class by extends Mn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vr,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class My extends Un{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function xs(n,e){return!n||n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)}function Sy(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)}function wy(n){function e(r,s){return n[r]-n[s]}const t=n.length,i=new Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(e),i}function zd(n,e,t){const i=n.length,r=new n.constructor(i);for(let s=0,o=0;o!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)r[o++]=n[a+l]}return r}function tm(n,e,t,i){let r=1,s=n[0];for(;s!==void 0&&s[i]===void 0;)s=n[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),t.push(...o)),s=n[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=n[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),t.push(o)),s=n[r++];while(s!==void 0)}function rA(n,e,t,i,r=30){const s=n.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<t||p>=i)){h.push(c.times[d]);for(let v=0;v<u;++v)f.push(c.values[d*u+v])}}h.length!==0&&(c.times=xs(h,c.times.constructor),c.values=xs(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function sA(n,e=0,t=n,i=30){i<=0&&(i=30);const r=t.tracks.length,s=e/i;for(let o=0;o<r;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=n.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let v;if(s<=a.times[0]){const g=u,M=h-u;v=a.values.slice(g,M)}else if(s>=a.times[p]){const g=p*h+u,M=g+h-u;v=a.values.slice(g,M)}else{const g=a.createInterpolant(),M=u,y=h-u;g.evaluate(s),v=g.resultBuffer.slice(M,y)}l==="quaternion"&&new bn().fromArray(v).normalize().conjugate().toArray(v);const m=c.times.length;for(let g=0;g<m;++g){const M=g*d+f;if(l==="quaternion")bn.multiplyQuaternionsFlat(c.values,M,v,0,c.values,M);else{const y=d-f*2;for(let b=0;b<y;++b)c.values[M+b]-=v[b]}}}return n.blendMode=Np,n}class oA{static convertArray(e,t){return xs(e,t)}static isTypedArray(e){return Sy(e)}static getKeyframeOrder(e){return wy(e)}static sortedArray(e,t,i){return zd(e,t,i)}static flattenJSON(e,t,i,r){tm(e,t,i,r)}static subclip(e,t,i,r,s=30){return rA(e,t,i,r,s)}static makeClipAdditive(e,t=0,i=e,r=30){return sA(e,t,i,r)}}class Cl{constructor(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,r=t[i],s=t[i-1];e:{t:{let o;n:{i:if(!(e<r)){for(let a=i+2;;){if(r===void 0){if(e<s)break i;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(s=r,r=t[++i],e<r)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(i=2,s=a);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(r=s,s=t[--i-1],e>=s)break t}o=i,i=0;break n}break e}for(;i<o;){const a=i+o>>>1;e<t[a]?o=a:i=a+1}if(r=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,r)}return this.interpolate_(i,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,r=this.valueSize,s=e*r;for(let o=0;o!==r;++o)t[o]=i[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Ty extends Cl{constructor(e,t,i,r){super(e,t,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:gs,endingEnd:gs}}intervalChanged_(e,t,i){const r=this.parameterPositions;let s=e-2,o=e+1,a=r[s],l=r[o];if(a===void 0)switch(this.getSettings_().endingStart){case vs:s=e,a=2*t-i;break;case el:s=r.length-2,a=t+r[s]-r[s+1];break;default:s=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case vs:o=e,l=2*i-t;break;case el:o=1,l=i+r[1]-r[0];break;default:o=e-1,l=t}const c=(i-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,i,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(i-t)/(r-t),v=p*p,m=v*p,g=-f*m+2*f*v-f*p,M=(1+f)*m+(-1.5-2*f)*v+(-.5+f)*p+1,y=(-1-d)*m+(1.5+d)*v+.5*p,b=d*m-d*v;for(let C=0;C!==a;++C)s[C]=g*o[u+C]+M*o[c+C]+y*o[l+C]+b*o[h+C];return s}}class nm extends Cl{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(i-t)/(r-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[c+f]*h+o[l+f]*u;return s}}class Ey extends Cl{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class ui{constructor(e,t,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=xs(t,this.TimeBufferType),this.values=xs(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:xs(e.times,Array),values:xs(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new Ey(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new nm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Ty(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Oo:t=this.InterpolantFactoryMethodDiscrete;break;case Qa:t=this.InterpolantFactoryMethodLinear;break;case Gc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Oo;case this.InterpolantFactoryMethodLinear:return Qa;case this.InterpolantFactoryMethodSmooth:return Gc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=e}return this}trim(e,t){const i=this.times,r=i.length;let s=0,o=r-1;for(;s!==r&&i[s]<e;)++s;for(;o!==-1&&i[o]>t;)--o;if(++o,s!==0||o!==r){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=i.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(r!==void 0&&Sy(r))for(let a=0,l=r.length;a!==l;++a){const c=r[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),r=this.getInterpolation()===Gc,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(r)l=!0;else{const h=a*i,f=h-i,d=h+i;for(let p=0;p!==i;++p){const v=t[h+p];if(v!==t[f+p]||v!==t[d+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*i,f=o*i;for(let d=0;d!==i;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*i,l=o*i,c=0;c!==i;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,r=new i(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}ui.prototype.ValueTypeName="";ui.prototype.TimeBufferType=Float32Array;ui.prototype.ValueBufferType=Float32Array;ui.prototype.DefaultInterpolation=Qa;class ks extends ui{constructor(e,t,i){super(e,t,i)}}ks.prototype.ValueTypeName="bool";ks.prototype.ValueBufferType=Array;ks.prototype.DefaultInterpolation=Oo;ks.prototype.InterpolantFactoryMethodLinear=void 0;ks.prototype.InterpolantFactoryMethodSmooth=void 0;class im extends ui{constructor(e,t,i,r){super(e,t,i,r)}}im.prototype.ValueTypeName="color";class al extends ui{constructor(e,t,i,r){super(e,t,i,r)}}al.prototype.ValueTypeName="number";class Ay extends Cl{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(i-t)/(r-t);let c=e*a;for(let u=c+a;c!==u;c+=4)bn.slerpFlat(s,0,o,c-a,o,c,l);return s}}class Rl extends ui{constructor(e,t,i,r){super(e,t,i,r)}InterpolantFactoryMethodLinear(e){return new Ay(this.times,this.values,this.getValueSize(),e)}}Rl.prototype.ValueTypeName="quaternion";Rl.prototype.InterpolantFactoryMethodSmooth=void 0;class Vs extends ui{constructor(e,t,i){super(e,t,i)}}Vs.prototype.ValueTypeName="string";Vs.prototype.ValueBufferType=Array;Vs.prototype.DefaultInterpolation=Oo;Vs.prototype.InterpolantFactoryMethodLinear=void 0;Vs.prototype.InterpolantFactoryMethodSmooth=void 0;class ll extends ui{constructor(e,t,i,r){super(e,t,i,r)}}ll.prototype.ValueTypeName="vector";class cl{constructor(e="",t=-1,i=[],r=xh){this.name=e,this.tracks=i,this.duration=t,this.blendMode=r,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,r=1/(e.fps||1);for(let o=0,a=i.length;o!==a;++o)t.push(lA(i[o]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=i.length;s!==o;++s)t.push(ui.toJSON(i[s]));return r}static CreateFromMorphTargetSequence(e,t,i,r){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=wy(l);l=zd(l,1,u),c=zd(c,1,u),!r&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new al(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===t)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const r={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=r[h];f||(r[h]=f=[]),f.push(c)}}const o=[];for(const a in r)o.push(this.CreateFromMorphTargetSequence(a,r[a],t,i));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(h,f,d,p,v){if(d.length!==0){const m=[],g=[];tm(d,m,g,p),m.length!==0&&v.push(new h(f,m,g))}},r=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let v=0;v<f[p].morphTargets.length;v++)d[f[p].morphTargets[v]]=-1;for(const v in d){const m=[],g=[];for(let M=0;M!==f[p].morphTargets.length;++M){const y=f[p];m.push(y.time),g.push(y.morphTarget===v?1:0)}r.push(new al(".morphTargetInfluence["+v+"]",m,g))}l=d.length*o}else{const d=".bones["+t[h].name+"]";i(ll,d+".position",f,"pos",r),i(Rl,d+".quaternion",f,"rot",r),i(ll,d+".scale",f,"scl",r)}}return r.length===0?null:new this(s,l,r,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,r=e.length;i!==r;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function aA(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return al;case"vector":case"vector2":case"vector3":case"vector4":return ll;case"color":return im;case"quaternion":return Rl;case"bool":case"boolean":return ks;case"string":return Vs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function lA(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=aA(n.type);if(n.times===void 0){const t=[],i=[];tm(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}const zi={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class rm{constructor(e,t,i){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.abortController=new AbortController,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const Cy=new rm;class Wn{constructor(e){this.manager=e!==void 0?e:Cy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(r,s){i.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}Wn.DEFAULT_MATERIAL_NAME="__DEFAULT";const er={};class cA extends Error{constructor(e,t){super(e),this.response=t}}class vr extends Wn{constructor(e){super(e),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=zi.get(`file:${e}`);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(er[e]!==void 0){er[e].push({onLoad:t,onProgress:i,onError:r});return}er[e]=[],er[e].push({onLoad:t,onProgress:i,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=er[e],h=c.body.getReader(),f=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let v=0;const m=new ReadableStream({start(g){M();function M(){h.read().then(({done:y,value:b})=>{if(y)g.close();else{v+=b.byteLength;const C=new ProgressEvent("progress",{lengthComputable:p,loaded:v,total:d});for(let w=0,E=u.length;w<E;w++){const S=u[w];S.onProgress&&S.onProgress(C)}g.enqueue(b),M()}},y=>{g.error(y)})}}});return new Response(m)}else throw new cA(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a==="")return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{zi.add(`file:${e}`,c);const u=er[e];delete er[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=er[e];if(u===void 0)throw this.manager.itemError(e),c;delete er[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class uA extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=this,o=new vr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const t=[];for(let i=0;i<e.length;i++){const r=cl.parse(e[i]);t.push(r)}return t}}class hA extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=this,o=[],a=new Ts,l=new vr(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=s.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(a.minFilter=qt),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},i,r)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let v=0;v<f.mipmapCount;v++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+v]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=qt),a.format=f.format,a.needsUpdate=!0,t&&t(a)},i,r);return a}}const lo=new WeakMap;class ul extends Wn{constructor(e){super(e)}load(e,t,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=zi.get(`image:${e}`);if(o!==void 0){if(o.complete===!0)s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0);else{let h=lo.get(o);h===void 0&&(h=[],lo.set(o,h)),h.push({onLoad:t,onError:r})}return o}const a=il("img");function l(){u(),t&&t(this);const h=lo.get(this)||[];for(let f=0;f<h.length;f++){const d=h[f];d.onLoad&&d.onLoad(this)}lo.delete(this),s.manager.itemEnd(e)}function c(h){u(),r&&r(h),zi.remove(`image:${e}`);const f=lo.get(this)||[];for(let d=0;d<f.length;d++){const p=f[d];p.onError&&p.onError(h)}lo.delete(this),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),zi.add(`image:${e}`,a),s.manager.itemStart(e),a.src=e,a}}class fA extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=new Ml;s.colorSpace=An;const o=new ul(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,r)}for(let c=0;c<e.length;++c)l(c);return s}}class dA extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=this,o=new li,a=new vr(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){let c;try{c=s.parse(l)}catch(u){if(r!==void 0)r(u);else{console.error(u);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:fn,o.wrapT=c.wrapT!==void 0?c.wrapT:fn,o.magFilter=c.magFilter!==void 0?c.magFilter:qt,o.minFilter=c.minFilter!==void 0?c.minFilter:qt,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=_i),c.mipmapCount===1&&(o.minFilter=qt),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},i,r),o}}class pA extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=new Ot,o=new ul(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},i,r),s}}class Xr extends gt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ae(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Ry extends Xr{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(gt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ae(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const zf=new Xe,t0=new U,n0=new U;class sm{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new de(512,512),this.mapType=wi,this.map=null,this.mapPass=null,this.matrix=new Xe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Xo,this._frameExtents=new de(1,1),this._viewportCount=1,this._viewports=[new at(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;t0.setFromMatrixPosition(e.matrixWorld),t.position.copy(t0),n0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(n0),t.updateMatrixWorld(),zf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(zf,t.coordinateSystem,t.reversedDepth),t.reversedDepth?i.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(zf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class mA extends sm{constructor(){super(new Rt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,i=Bo*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height*this.aspect,s=e.distance||t.far;(i!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Iy extends Xr{constructor(e,t,i=0,r=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(gt.DEFAULT_UP),this.updateMatrix(),this.target=new gt,this.distance=i,this.angle=r,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new mA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const i0=new Xe,la=new U,kf=new U;class gA extends sm{constructor(){super(new Rt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new de(4,2),this._viewportCount=6,this._viewports=[new at(2,1,1,1),new at(0,1,1,1),new at(3,1,1,1),new at(1,1,1,1),new at(3,0,1,1),new at(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,r=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),la.setFromMatrixPosition(e.matrixWorld),i.position.copy(la),kf.copy(i.position),kf.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(kf),i.updateMatrixWorld(),r.makeTranslation(-la.x,-la.y,-la.z),i0.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i0,i.coordinateSystem,i.reversedDepth)}}class Py extends Xr{constructor(e,t,i=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new gA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class cr extends bl{constructor(e=-1,t=1,i=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class vA extends sm{constructor(){super(new cr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Ly extends Xr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(gt.DEFAULT_UP),this.updateMatrix(),this.target=new gt,this.shadow=new vA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Dy extends Xr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Uy extends Xr{constructor(e,t,i=10,r=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Ny{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*i),t.addScaledVector(o[4],1.092548*(i*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(i*s)),t.addScaledVector(o[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*i),t.addScaledVector(o[4],2*.429043*i*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*i*s),t.addScaledVector(o[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const i=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-r*r)}}class Oy extends Xr{constructor(e=new Ny,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class zh extends Wn{constructor(e){super(e),this.textures={}}load(e,t,i,r){const s=this,o=new vr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const t=this.textures;function i(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const r=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new Ae().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(r.dispersion=e.dispersion),e.iridescence!==void 0&&(r.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(r.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(r.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(r.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(r.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(r.depthFunc=e.depthFunc),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(r.blendSrc=e.blendSrc),e.blendDst!==void 0&&(r.blendDst=e.blendDst),e.blendEquation!==void 0&&(r.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(r.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(r.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(r.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&r.blendColor!==void 0&&r.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(r.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==void 0&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(r.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(r.uniforms[s]={},o.type){case"t":r.uniforms[s].value=i(o.value);break;case"c":r.uniforms[s].value=new Ae().setHex(o.value);break;case"v2":r.uniforms[s].value=new de().fromArray(o.value);break;case"v3":r.uniforms[s].value=new U().fromArray(o.value);break;case"v4":r.uniforms[s].value=new at().fromArray(o.value);break;case"m3":r.uniforms[s].value=new tt().fromArray(o.value);break;case"m4":r.uniforms[s].value=new Xe().fromArray(o.value);break;default:r.uniforms[s].value=o.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(r.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)r.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(r.lights=e.lights),e.clipping!==void 0&&(r.clipping=e.clipping),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=i(e.map)),e.matcap!==void 0&&(r.matcap=i(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new de().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=i(e.envMap)),e.envMapRotation!==void 0&&r.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new de().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(r.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(r.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(r.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(r.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=i(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return zh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:my,SpriteMaterial:Vp,RawShaderMaterial:Oa,ShaderMaterial:pn,PointsMaterial:Gp,MeshPhysicalMaterial:gy,MeshStandardMaterial:Jp,MeshPhongMaterial:vy,MeshToonMaterial:_y,MeshNormalMaterial:xy,MeshLambertMaterial:yy,MeshDepthMaterial:Qp,MeshDistanceMaterial:em,MeshBasicMaterial:ci,MeshMatcapMaterial:by,LineDashedMaterial:My,LineBasicMaterial:Un,Material:Mn};return new t[e]}}class kd{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class om extends et{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Fy extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=this,o=new vr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const t={},i={};function r(d,p){if(t[p]!==void 0)return t[p];const m=d.interleavedBuffers[p],g=s(d,m.buffer),M=xo(m.type,g),y=new Sl(M,m.stride);return y.uuid=m.uuid,t[p]=y,y}function s(d,p){if(i[p]!==void 0)return i[p];const m=d.arrayBuffers[p],g=new Uint32Array(m).buffer;return i[p]=g,g}const o=e.isInstancedBufferGeometry?new om:new et,a=e.data.index;if(a!==void 0){const d=xo(a.type,a.array);o.setIndex(new mt(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let v;if(p.isInterleavedBufferAttribute){const m=r(e.data,p.data);v=new Ln(m,p.itemSize,p.offset,p.normalized)}else{const m=xo(p.type,p.array),g=p.isInstancedBufferAttribute?ko:mt;v=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(v.name=p.name),p.usage!==void 0&&v.setUsage(p.usage),o.setAttribute(d,v)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],v=[];for(let m=0,g=p.length;m<g;m++){const M=p[m];let y;if(M.isInterleavedBufferAttribute){const b=r(e.data,M.data);y=new Ln(b,M.itemSize,M.offset,M.normalized)}else{const b=xo(M.type,M.array);y=new mt(b,M.itemSize,M.normalized)}M.name!==void 0&&(y.name=M.name),v.push(y)}o.morphAttributes[d]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const v=h[d];o.addGroup(v.start,v.count,v.materialIndex)}const f=e.data.boundingSphere;return f!==void 0&&(o.boundingSphere=new Jt().fromJSON(f)),e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class _A extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=this,o=this.path===""?kd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new vr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){r!==void 0&&r(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){r!==void 0&&r(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},i,r)}async loadAsync(e,t){const i=this,r=this.path===""?kd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const s=new vr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(a)}parse(e,t){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,i),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),this.bindLightTargets(c),t!==void 0){let h=!1;for(const f in o)if(o[f].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,r,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const s=new Es().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new wh().fromJSON(e[s],r);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};if(e!==void 0){const r=new Fy;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(l);break;default:l.type in e0?a=e0[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),i[l.uuid]=a}}return i}parseMaterials(e,t){const i={},r={};if(e!==void 0){const s=new zh;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),r[l.uuid]=i[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],s=cl.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const i=this,r={};let s;function o(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(u)}else return l.data?{data:xo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new rm(t);s=new ul(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,v=f.length;p<v;p++){const m=f[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?d.push(g):d.push(new li(g.data,g.width,g.height)))}r[h.uuid]=new Lr(d)}else{const d=a(h.url);r[h.uuid]=new Lr(d)}}}return r}async parseImagesAsync(e){const t=this,i={};let r;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await r.loadAsync(l)}else return o.data?{data:xo(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){r=new ul(this.manager),r.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await s(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new li(p.data,p.width,p.height)))}i[l.uuid]=new Lr(u)}else{const u=await s(l.url);i[l.uuid]=new Lr(u)}}}return i}parseTextures(e,t){function i(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let u;Array.isArray(c)?(u=new Ml,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new li:u=new Ot,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=i(a.mapping,xA)),a.channel!==void 0&&(u.channel=a.channel),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=i(a.wrap[0],r0),u.wrapT=i(a.wrap[1],r0)),a.format!==void 0&&(u.format=a.format),a.internalFormat!==void 0&&(u.internalFormat=a.internalFormat),a.type!==void 0&&(u.type=a.type),a.colorSpace!==void 0&&(u.colorSpace=a.colorSpace),a.minFilter!==void 0&&(u.minFilter=i(a.minFilter,s0)),a.magFilter!==void 0&&(u.magFilter=i(a.magFilter,s0)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.generateMipmaps!==void 0&&(u.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(u.compareFunction=a.compareFunction),a.userData!==void 0&&(u.userData=a.userData),r[a.uuid]=u}return r}parseObject(e,t,i,r,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,v=f.length;p<v;p++){const m=f[p];i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),d.push(i[m])}return d}return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),i[f]}}function c(f){return r[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),r[f]}let u,h;switch(e.type){case"Scene":o=new Us,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Ae(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Sh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Mh(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new Rt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new cr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Dy(e.color,e.intensity);break;case"DirectionalLight":o=new Ly(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new Py(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Uy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Iy(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new Ry(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Oy().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=l(e.material),o=new Qx(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=l(e.material),o=new bt(u,h);break;case"InstancedMesh":u=a(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new ey(u,h,f),o.instanceMatrix=new ko(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new ko(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":u=a(e.geometry),h=l(e.material),o=new ty(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,h),o.geometry=u,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._geometryInfo=e.geometryInfo.map(v=>{let m=null,g=null;return v.boundingBox!==void 0&&(m=new Kt().fromJSON(v.boundingBox)),v.boundingSphere!==void 0&&(g=new Jt().fromJSON(v.boundingSphere)),{...v,boundingBox:m,boundingSphere:g}}),o._instanceInfo=e.instanceInfo,o._availableInstanceIds=e._availableInstanceIds,o._availableGeometryIds=e._availableGeometryIds,o._nextIndexStart=e.nextIndexStart,o._nextVertexStart=e.nextVertexStart,o._geometryCount=e.geometryCount,o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._matricesTexture=c(e.matricesTexture.uuid),o._indirectTexture=c(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(o.boundingSphere=new Jt().fromJSON(e.boundingSphere)),e.boundingBox!==void 0&&(o.boundingBox=new Kt().fromJSON(e.boundingBox));break;case"LOD":o=new Jx;break;case"Line":o=new Fr(a(e.geometry),l(e.material));break;case"LineLoop":o=new ny(a(e.geometry),l(e.material));break;case"LineSegments":o=new Xi(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new iy(a(e.geometry),l(e.material));break;case"Sprite":o=new Kx(l(e.material));break;case"Group":o=new _s;break;case"Bone":o=new Hp;break;default:o=new gt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,i,r,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],v=o.getObjectByProperty("uuid",p.object);v!==void 0&&o.addLevel(v,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=t[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const i=t.target,r=e.getObjectByProperty("uuid",i);r!==void 0?t.target=r:t.target=new gt}})}}const xA={UVMapping:hh,CubeReflectionMapping:mr,CubeRefractionMapping:Or,EquirectangularReflectionMapping:Ka,EquirectangularRefractionMapping:Ja,CubeUVReflectionMapping:Wo},r0={RepeatWrapping:Io,ClampToEdgeWrapping:fn,MirroredRepeatWrapping:Po},s0={NearestFilter:Yt,NearestMipmapNearestFilter:fh,NearestMipmapLinearFilter:ms,LinearFilter:qt,LinearMipmapNearestFilter:To,LinearMipmapLinearFilter:_i},Vf=new WeakMap;class yA extends Wn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(e){return this.options=e,this}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=zi.get(`image-bitmap:${e}`);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(c=>{if(Vf.has(o)===!0)r&&r(Vf.get(o)),s.manager.itemError(e),s.manager.itemEnd(e);else return t&&t(c),s.manager.itemEnd(e),c});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,a.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return zi.add(`image-bitmap:${e}`,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){r&&r(c),Vf.set(l,c),zi.remove(`image-bitmap:${e}`),s.manager.itemError(e),s.manager.itemEnd(e)});zi.add(`image-bitmap:${e}`,l),s.manager.itemStart(e)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let yc;class am{static getContext(){return yc===void 0&&(yc=new(window.AudioContext||window.webkitAudioContext)),yc}static setContext(e){yc=e}}class bA extends Wn{constructor(e){super(e)}load(e,t,i,r){const s=this,o=new vr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);am.getContext().decodeAudioData(c,function(h){t(h)}).catch(a)}catch(c){a(c)}},i,r);function a(l){r?r(l):console.error(l),s.manager.itemError(e)}}}const o0=new Xe,a0=new Xe,ns=new Xe;class MA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Rt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Rt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ns.copy(e.projectionMatrix);const r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(ws*t.fov*.5)/t.zoom;let a,l;a0.elements[12]=-r,o0.elements[12]=r,a=-o*t.aspect+s,l=o*t.aspect+s,ns.elements[0]=2*t.near/(l-a),ns.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(ns),a=-o*t.aspect-s,l=o*t.aspect-s,ns.elements[0]=2*t.near/(l-a),ns.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(ns)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(a0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(o0)}}class By extends Rt{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class kh{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const is=new U,Hf=new bn,SA=new U,rs=new U,ss=new U;class wA extends gt{constructor(){super(),this.type="AudioListener",this.context=am.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new kh}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(is,Hf,SA),rs.set(0,0,-1).applyQuaternion(Hf),ss.set(0,1,0).applyQuaternion(Hf),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(is.x,i),t.positionY.linearRampToValueAtTime(is.y,i),t.positionZ.linearRampToValueAtTime(is.z,i),t.forwardX.linearRampToValueAtTime(rs.x,i),t.forwardY.linearRampToValueAtTime(rs.y,i),t.forwardZ.linearRampToValueAtTime(rs.z,i),t.upX.linearRampToValueAtTime(ss.x,i),t.upY.linearRampToValueAtTime(ss.y,i),t.upZ.linearRampToValueAtTime(ss.z,i)}else t.setPosition(is.x,is.y,is.z),t.setOrientation(rs.x,rs.y,rs.z,ss.x,ss.y,ss.z)}}class zy extends gt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const os=new U,l0=new bn,TA=new U,as=new U;class EA extends zy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(os,l0,TA),as.set(0,0,1).applyQuaternion(l0);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(os.x,i),t.positionY.linearRampToValueAtTime(os.y,i),t.positionZ.linearRampToValueAtTime(os.z,i),t.orientationX.linearRampToValueAtTime(as.x,i),t.orientationY.linearRampToValueAtTime(as.y,i),t.orientationZ.linearRampToValueAtTime(as.z,i)}else t.setPosition(os.x,os.y,os.z),t.setOrientation(as.x,as.y,as.z)}}class AA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class ky{constructor(e,t,i){this.binding=e,this.valueSize=i;let r,s,o;switch(t){case"quaternion":r=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:r=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,r=this.valueSize,s=e*r+r;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==r;++a)i[s+a]=i[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(i,s,0,a,r)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,r=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,r=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(i,r,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){a.setValue(i,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(t,r);for(let s=i,o=r;s!==o;++s)t[s]=t[r+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,r,s){if(r>=.5)for(let o=0;o!==s;++o)e[t+o]=e[i+o]}_slerp(e,t,i,r){bn.slerpFlat(e,t,e,t,e,i,r)}_slerpAdditive(e,t,i,r,s){const o=this._workIndex*s;bn.multiplyQuaternionsFlat(e,o,e,t,e,i),bn.slerpFlat(e,t,e,t,e,o,r)}_lerp(e,t,i,r,s){const o=1-r;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[i+a]*r}}_lerpAdditive(e,t,i,r,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[i+o]*r}}}const lm="\\[\\]\\.:\\/",CA=new RegExp("["+lm+"]","g"),cm="[^"+lm+"]",RA="[^"+lm.replace("\\.","")+"]",IA=/((?:WC+[\/:])*)/.source.replace("WC",cm),PA=/(WCOD+)?/.source.replace("WCOD",RA),LA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",cm),DA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",cm),UA=new RegExp("^"+IA+PA+LA+DA+"$"),NA=["material","materials","bones","map"];class OA{constructor(e,t,i){const r=i||ct.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=i.length;r!==s;++r)i[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class ct{constructor(e,t,i){this.path=t,this.parsedPath=i||ct.parseTrackName(t),this.node=ct.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new ct.Composite(e,t,i):new ct(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(CA,"")}static parseTrackName(e){const t=UA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=i.nodeName.substring(r+1);NA.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[t++]=i[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=ct.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[r];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ct.Composite=OA;ct.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};ct.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};ct.prototype.GetterByBindingType=[ct.prototype._getValue_direct,ct.prototype._getValue_array,ct.prototype._getValue_arrayElement,ct.prototype._getValue_toArray];ct.prototype.SetterByBindingTypeAndVersioning=[[ct.prototype._setValue_direct,ct.prototype._setValue_direct_setNeedsUpdate,ct.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ct.prototype._setValue_array,ct.prototype._setValue_array_setNeedsUpdate,ct.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ct.prototype._setValue_arrayElement,ct.prototype._setValue_arrayElement_setNeedsUpdate,ct.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ct.prototype._setValue_fromArray,ct.prototype._setValue_fromArray_setNeedsUpdate,ct.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class FA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,r=arguments.length;i!==r;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let v=0,m=o;v!==m;++v)s[v].push(new ct(f,i[v],r[v]))}else if(p<c){a=e[p];const v=--c,m=e[v];t[m.uuid]=p,e[p]=m,t[d]=v,e[v]=f;for(let g=0,M=o;g!==M;++g){const y=s[g],b=y[v];let C=y[p];y[p]=b,C===void 0&&(C=new ct(f,i[g],r[g])),y[v]=C}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=t[c];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=r;d!==p;++d){const v=i[d],m=v[h],g=v[u];v[u]=m,v[h]=g}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--o,v=e[p];t[d.uuid]=h,e[h]=d,t[v.uuid]=f,e[f]=v,e.pop();for(let m=0,g=r;m!==g;++m){const M=i[m],y=M[f],b=M[p];M[h]=y,M[f]=b,M.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,v=r;p!==v;++p){const m=i[p];m[h]=m[f],m.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const i=this._bindingsIndicesByPath;let r=i[e];const s=this._bindings;if(r!==void 0)return s[r];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);r=s.length,i[e]=r,o.push(e),a.push(t),s.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new ct(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const r=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=i,o[i]=l,o.pop(),s[i]=s[a],s.pop(),r[i]=r[a],r.pop()}}}class Vy{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:gs,endingEnd:gs};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Px,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i=!1){if(e.fadeOut(t),this.fadeIn(t),i===!0){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i=!1){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Np:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case xh:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const o=i===Lx;if(e===0)return s===-1?r:o&&(s&1)===1?t-r:r;if(i===Ix){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=t||r<0){const a=Math.floor(r/t);r-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return t-r}return r}_setEndings(e,t,i){const r=this._interpolantSettings;i?(r.endingStart=vs,r.endingEnd=vs):(e?r.endingStart=this.zeroSlopeAtStart?vs:gs:r.endingStart=el,t?r.endingEnd=this.zeroSlopeAtEnd?vs:gs:r.endingEnd=el)}_scheduleFading(e,t,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=i,this}}const BA=new Float32Array(1);class zA extends Ei{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,r=e._clip.tracks,s=r.length,o=e._propertyBindings,a=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=r[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const v=t&&t._propertyBindings[h].binding.parsedPath;p=new ky(ct.create(i,d,v),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,i)}const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const s=t[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const s=t[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const r=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=r.length,r.push(e),o.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],r=e._cacheIndex;i._cacheIndex=r,t[r]=i,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const s=t[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_addInactiveBinding(e,t,i){const r=this._bindingsByRootAndName,s=this._bindings;let o=r[t];o===void 0&&(o={},r[t]=o),o[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,r=i.rootNode.uuid,s=i.path,o=this._bindingsByRootAndName,a=o[r],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[r]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=i,t[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new nm(new Float32Array(2),new Float32Array(2),1,BA),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=i,t[i]=s}clipAction(e,t,i){const r=t||this._root,s=r.uuid;let o=typeof e=="string"?cl.findByName(r,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(i===void 0&&(o!==null?i=o.blendMode:i=xh),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===i)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new Vy(this,o,t,i);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const i=t||this._root,r=i.uuid,s=typeof e=="string"?cl.findByName(i,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,r=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==i;++c)t[c]._update(r,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,r=this._actionsByClip,s=r[i];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete r[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const o in i){const a=i[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class kA extends Bp{constructor(e=1,t=1,i=1,r={}){super(e,t,r),this.isRenderTarget3D=!0,this.depth=i,this.texture=new bh(null,e,t,i),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class Vh{constructor(e){this.value=e}clone(){return new Vh(this.value.clone===void 0?this.value:this.value.clone())}}let VA=0;class HA extends Ei{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:VA++}),this.name="",this.usage=nl,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,r=t.length;i<r;i++){const s=Array.isArray(t[i])?t[i]:[t[i]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class Xu extends Sl{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class GA{constructor(e,t,i,r,s,o=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=r,this.count=s,this.normalized=o,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const c0=new Xe;class Hy{constructor(e,t,i=0,r=1/0){this.ray=new zs(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new yl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return c0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(c0),this}intersectObject(e,t=!0,i=[]){return Vd(e,this,i,t),i.sort(u0),i}intersectObjects(e,t=!0,i=[]){for(let r=0,s=e.length;r<s;r++)Vd(e[r],this,i,t);return i.sort(u0),i}}function u0(n,e){return n.distance-e.distance}function Vd(n,e,t,i){let r=!0;if(n.layers.test(e.layers)&&n.raycast(e,t)===!1&&(r=!1),r===!0&&i===!0){const s=n.children;for(let o=0,a=s.length;o<a;o++)Vd(s[o],e,t,!0)}}class WA{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(e){this._document=e,e.hidden!==void 0&&(this._pageVisibilityHandler=XA.bind(this),e.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(e){return this._timescale=e,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(e){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(e!==void 0?e:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function XA(){this._document.hidden===!1&&this.reset()}class Hd{constructor(e=1,t=0,i=0){this.radius=e,this.phi=t,this.theta=i}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Ke(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Ke(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class YA{constructor(e=1,t=0,i=0){this.radius=e,this.theta=t,this.y=i}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}class um{constructor(e,t,i,r){um.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,r)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,r){const s=this.elements;return s[0]=e,s[2]=t,s[1]=i,s[3]=r,this}}const h0=new de;class Gy{constructor(e=new de(1/0,1/0),t=new de(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=h0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,h0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const f0=new U,bc=new U,co=new U,uo=new U,Gf=new U,jA=new U,$A=new U;class Wy{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){f0.subVectors(e,this.start),bc.subVectors(this.end,this.start);const i=bc.dot(bc);let s=bc.dot(f0)/i;return t&&(s=Ke(s,0,1)),s}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(r).add(this.start)}distanceSqToLine3(e,t=jA,i=$A){const r=10000000000000001e-32;let s,o;const a=this.start,l=e.start,c=this.end,u=e.end;co.subVectors(c,a),uo.subVectors(u,l),Gf.subVectors(a,l);const h=co.dot(co),f=uo.dot(uo),d=uo.dot(Gf);if(h<=r&&f<=r)return t.copy(a),i.copy(l),t.sub(i),t.dot(t);if(h<=r)s=0,o=d/f,o=Ke(o,0,1);else{const p=co.dot(Gf);if(f<=r)o=0,s=Ke(-p/h,0,1);else{const v=co.dot(uo),m=h*f-v*v;m!==0?s=Ke((v*d-p*f)/m,0,1):s=0,o=(v*s+d)/f,o<0?(o=0,s=Ke(-p/h,0,1)):o>1&&(o=1,s=Ke((v-p)/h,0,1))}}return t.copy(a).add(co.multiplyScalar(s)),i.copy(l).add(uo.multiplyScalar(o)),t.sub(i),t.dot(t)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const d0=new U;class qA extends gt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new et,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}i.setAttribute("position",new Fe(r,3));const s=new Un({fog:!1,toneMapped:!1});this.cone=new Xi(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),d0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(d0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Er=new U,Mc=new Xe,Wf=new Xe;class ZA extends Xi{constructor(e){const t=Xy(e),i=new et,r=[],s=[];for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(0,0,0),s.push(0,0,0))}i.setAttribute("position",new Fe(r,3)),i.setAttribute("color",new Fe(s,3));const o=new Un({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,o),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;const a=new Ae(255),l=new Ae(65280);this.setColors(a,l)}updateMatrixWorld(e){const t=this.bones,i=this.geometry,r=i.getAttribute("position");Wf.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Mc.multiplyMatrices(Wf,a.matrixWorld),Er.setFromMatrixPosition(Mc),r.setXYZ(o,Er.x,Er.y,Er.z),Mc.multiplyMatrices(Wf,a.parent.matrixWorld),Er.setFromMatrixPosition(Mc),r.setXYZ(o+1,Er.x,Er.y,Er.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}setColors(e,t){const r=this.geometry.getAttribute("color");for(let s=0;s<r.count;s+=2)r.setXYZ(s,e.r,e.g,e.b),r.setXYZ(s+1,t.r,t.g,t.b);return r.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function Xy(n){const e=[];n.isBone===!0&&e.push(n);for(let t=0;t<n.children.length;t++)e.push(...Xy(n.children[t]));return e}class KA extends bt{constructor(e,t,i){const r=new Al(t,4,2),s=new ci({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const JA=new U,p0=new Ae,m0=new Ae;class QA extends gt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const r=new El(t);r.rotateY(Math.PI*.5),this.material=new ci({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new mt(o,3)),this.add(new bt(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");p0.copy(this.light.color),m0.copy(this.light.groundColor);for(let i=0,r=t.count;i<r;i++){const s=i<r/2?p0:m0;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(JA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class eC extends Xi{constructor(e=10,t=10,i=4473924,r=8947848){i=new Ae(i),r=new Ae(r);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=f===s?i:r;v.toArray(c,d),d+=3,v.toArray(c,d),d+=3,v.toArray(c,d),d+=3,v.toArray(c,d),d+=3}const u=new et;u.setAttribute("position",new Fe(l,3)),u.setAttribute("color",new Fe(c,3));const h=new Un({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class tC extends Xi{constructor(e=10,t=16,i=8,r=64,s=4473924,o=8947848){s=new Ae(s),o=new Ae(o);const a=[],l=[];if(t>1)for(let h=0;h<t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const v=h&1?s:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let h=0;h<i;h++){const f=h&1?s:o,d=e-e/i*h;for(let p=0;p<r;p++){let v=p/r*(Math.PI*2),m=Math.sin(v)*d,g=Math.cos(v)*d;a.push(m,0,g),l.push(f.r,f.g,f.b),v=(p+1)/r*(Math.PI*2),m=Math.sin(v)*d,g=Math.cos(v)*d,a.push(m,0,g),l.push(f.r,f.g,f.b)}}const c=new et;c.setAttribute("position",new Fe(a,3)),c.setAttribute("color",new Fe(l,3));const u=new Un({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const g0=new U,Sc=new U,v0=new U;class nC extends gt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let r=new et;r.setAttribute("position",new Fe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Un({fog:!1,toneMapped:!1});this.lightPlane=new Fr(r,s),this.add(this.lightPlane),r=new et,r.setAttribute("position",new Fe([0,0,0,0,0,1],3)),this.targetLine=new Fr(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),g0.setFromMatrixPosition(this.light.matrixWorld),Sc.setFromMatrixPosition(this.light.target.matrixWorld),v0.subVectors(Sc,g0),this.lightPlane.lookAt(Sc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Sc),this.targetLine.scale.z=v0.length()}}const wc=new U,Wt=new bl;class iC extends Xi{constructor(e){const t=new et,i=new Un({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,v){l(p),l(v)}function l(p){r.push(0,0,0),s.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}t.setAttribute("position",new Fe(r,3)),t.setAttribute("color",new Fe(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new Ae(16755200),u=new Ae(16711680),h=new Ae(43775),f=new Ae(16777215),d=new Ae(3355443);this.setColors(c,u,h,f,d)}setColors(e,t,i,r,s){const a=this.geometry.getAttribute("color");return a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,r.r,r.g,r.b),a.setXYZ(39,r.r,r.g,r.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0,this}update(){const e=this.geometry,t=this.pointMap,i=1,r=1;let s,o;if(Wt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)s=1,o=0;else if(this.camera.coordinateSystem===Jn)s=-1,o=1;else if(this.camera.coordinateSystem===Fo)s=0,o=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);jt("c",t,e,Wt,0,0,s),jt("t",t,e,Wt,0,0,o),jt("n1",t,e,Wt,-i,-r,s),jt("n2",t,e,Wt,i,-r,s),jt("n3",t,e,Wt,-i,r,s),jt("n4",t,e,Wt,i,r,s),jt("f1",t,e,Wt,-i,-r,o),jt("f2",t,e,Wt,i,-r,o),jt("f3",t,e,Wt,-i,r,o),jt("f4",t,e,Wt,i,r,o),jt("u1",t,e,Wt,i*.7,r*1.1,s),jt("u2",t,e,Wt,-i*.7,r*1.1,s),jt("u3",t,e,Wt,0,r*2,s),jt("cf1",t,e,Wt,-i,0,o),jt("cf2",t,e,Wt,i,0,o),jt("cf3",t,e,Wt,0,-r,o),jt("cf4",t,e,Wt,0,r,o),jt("cn1",t,e,Wt,-i,0,s),jt("cn2",t,e,Wt,i,0,s),jt("cn3",t,e,Wt,0,-r,s),jt("cn4",t,e,Wt,0,r,s),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function jt(n,e,t,i,r,s,o){wc.set(r,s,o).unproject(i);const a=e[n];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],wc.x,wc.y,wc.z)}}const Tc=new Kt;class rC extends Xi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),s=new et;s.setIndex(new mt(i,1)),s.setAttribute("position",new mt(r,3)),super(s,new Un({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Tc.setFromObject(this.object),Tc.isEmpty())return;const e=Tc.min,t=Tc.max,i=this.geometry.attributes.position,r=i.array;r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=e.x,r[4]=t.y,r[5]=t.z,r[6]=e.x,r[7]=e.y,r[8]=t.z,r[9]=t.x,r[10]=e.y,r[11]=t.z,r[12]=t.x,r[13]=t.y,r[14]=e.z,r[15]=e.x,r[16]=t.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=t.x,r[22]=e.y,r[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class sC extends Xi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new et;s.setIndex(new mt(i,1)),s.setAttribute("position",new Fe(r,3)),super(s,new Un({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class oC extends Fr{constructor(e,t=1,i=16776960){const r=i,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new et;o.setAttribute("position",new Fe(s,3)),o.computeBoundingSphere(),super(o,new Un({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new et;l.setAttribute("position",new Fe(a,3)),l.computeBoundingSphere(),this.add(new bt(l,new ci({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const _0=new U;let Ec,Xf;class aC extends gt{constructor(e=new U(0,0,1),t=new U(0,0,0),i=1,r=16776960,s=i*.2,o=s*.2){super(),this.type="ArrowHelper",Ec===void 0&&(Ec=new et,Ec.setAttribute("position",new Fe([0,0,0,0,1,0],3)),Xf=new Tl(.5,1,5,1),Xf.translate(0,-.5,0)),this.position.copy(t),this.line=new Fr(Ec,new Un({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new bt(Xf,new ci({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_0,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class lC extends Xi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new et;r.setAttribute("position",new Fe(t,3)),r.setAttribute("color",new Fe(i,3));const s=new Un({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,t,i){const r=new Ae,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(t),r.toArray(s,6),r.toArray(s,9),r.set(i),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Yy{constructor(){this.type="ShapePath",this.color=new Ae,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Wu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,r){return this.currentPath.quadraticCurveTo(e,t,i,r),this}bezierCurveTo(e,t,i,r,s,o){return this.currentPath.bezierCurveTo(e,t,i,r,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const M=[];for(let y=0,b=g.length;y<b;y++){const C=g[y],w=new Es;w.curves=C.curves,M.push(w)}return M}function i(g,M){const y=M.length;let b=!1;for(let C=y-1,w=0;w<y;C=w++){let E=M[C],S=M[w],_=S.x-E.x,x=S.y-E.y;if(Math.abs(x)>Number.EPSILON){if(x<0&&(E=M[w],_=-_,S=M[C],x=-x),g.y<E.y||g.y>S.y)continue;if(g.y===E.y){if(g.x===E.x)return!0}else{const A=x*(g.x-E.x)-_*(g.y-E.y);if(A===0)return!0;if(A<0)continue;b=!b}}else{if(g.y!==E.y)continue;if(S.x<=g.x&&g.x<=E.x||E.x<=g.x&&g.x<=S.x)return!0}}return b}const r=xi.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new Es,l.curves=a.curves,c.push(l),c;let u=!r(s[0].getPoints());u=e?!u:u;const h=[],f=[];let d=[],p=0,v;f[p]=void 0,d[p]=[];for(let g=0,M=s.length;g<M;g++)a=s[g],v=a.getPoints(),o=r(v),o=e?!o:o,o?(!u&&f[p]&&p++,f[p]={s:new Es,p:v},f[p].s.curves=a.curves,u&&p++,d[p]=[]):d[p].push({h:a,p:v[0]});if(!f[0])return t(s);if(f.length>1){let g=!1,M=0;for(let y=0,b=f.length;y<b;y++)h[y]=[];for(let y=0,b=f.length;y<b;y++){const C=d[y];for(let w=0;w<C.length;w++){const E=C[w];let S=!0;for(let _=0;_<f.length;_++)i(E.p,f[_].p)&&(y!==_&&M++,S?(S=!1,h[_].push(E)):g=!0);S&&h[y].push(E)}}M>0&&g===!1&&(d=h)}let m;for(let g=0,M=f.length;g<M;g++){l=f[g].s,c.push(l),m=d[g];for(let y=0,b=m.length;y<b;y++)l.holes.push(m[y].h)}return c}}class cC extends Ei{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function uC(n,e){const t=n.image&&n.image.width?n.image.width/n.image.height:1;return t>e?(n.repeat.x=1,n.repeat.y=t/e,n.offset.x=0,n.offset.y=(1-n.repeat.y)/2):(n.repeat.x=e/t,n.repeat.y=1,n.offset.x=(1-n.repeat.x)/2,n.offset.y=0),n}function hC(n,e){const t=n.image&&n.image.width?n.image.width/n.image.height:1;return t>e?(n.repeat.x=e/t,n.repeat.y=1,n.offset.x=(1-n.repeat.x)/2,n.offset.y=0):(n.repeat.x=1,n.repeat.y=t/e,n.offset.x=0,n.offset.y=(1-n.repeat.y)/2),n}function fC(n){return n.repeat.x=1,n.repeat.y=1,n.offset.x=0,n.offset.y=0,n}function Gd(n,e,t,i){const r=dC(i);switch(t){case Pp:return n*e;case gh:return n*e/r.components*r.byteLength;case xl:return n*e/r.components*r.byteLength;case Dp:return n*e*2/r.components*r.byteLength;case vh:return n*e*2/r.components*r.byteLength;case Lp:return n*e*3/r.components*r.byteLength;case sn:return n*e*4/r.components*r.byteLength;case _h:return n*e*4/r.components*r.byteLength;case Ca:case Ra:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case Ia:case Pa:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case gu:case _u:return Math.max(n,16)*Math.max(e,8)/4;case mu:case vu:return Math.max(n,8)*Math.max(e,8)/2;case xu:case yu:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case bu:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case Mu:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case Su:return Math.floor((n+4)/5)*Math.floor((e+3)/4)*16;case wu:return Math.floor((n+4)/5)*Math.floor((e+4)/5)*16;case Tu:return Math.floor((n+5)/6)*Math.floor((e+4)/5)*16;case Eu:return Math.floor((n+5)/6)*Math.floor((e+5)/6)*16;case Au:return Math.floor((n+7)/8)*Math.floor((e+4)/5)*16;case Cu:return Math.floor((n+7)/8)*Math.floor((e+5)/6)*16;case Ru:return Math.floor((n+7)/8)*Math.floor((e+7)/8)*16;case Iu:return Math.floor((n+9)/10)*Math.floor((e+4)/5)*16;case Pu:return Math.floor((n+9)/10)*Math.floor((e+5)/6)*16;case Lu:return Math.floor((n+9)/10)*Math.floor((e+7)/8)*16;case Du:return Math.floor((n+9)/10)*Math.floor((e+9)/10)*16;case Uu:return Math.floor((n+11)/12)*Math.floor((e+9)/10)*16;case Nu:return Math.floor((n+11)/12)*Math.floor((e+11)/12)*16;case La:case Ou:case Fu:return Math.ceil(n/4)*Math.ceil(e/4)*16;case Up:case Bu:return Math.ceil(n/4)*Math.ceil(e/4)*8;case zu:case ku:return Math.ceil(n/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function dC(n){switch(n){case wi:case Cp:return{byteLength:1,components:1};case Lo:case Rp:case Bs:return{byteLength:2,components:1};case ph:case mh:return{byteLength:2,components:4};case gr:case dh:case Gn:return{byteLength:4,components:1};case Ip:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${n}.`)}class pC{static contain(e,t){return uC(e,t)}static cover(e,t){return hC(e,t)}static fill(e){return fC(e)}static getByteLength(e,t,i,r){return Gd(e,t,i,r)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fs}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fs);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function jy(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function mC(n){const e=new WeakMap;function t(a,l){const c=a.array,u=a.usage,h=c.byteLength,f=n.createBuffer();n.bindBuffer(l,f),n.bufferData(l,c,u),a.onUploadCallback();let d;if(c instanceof Float32Array)d=n.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)d=n.HALF_FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?d=n.HALF_FLOAT:d=n.UNSIGNED_SHORT;else if(c instanceof Int16Array)d=n.SHORT;else if(c instanceof Uint32Array)d=n.UNSIGNED_INT;else if(c instanceof Int32Array)d=n.INT;else if(c instanceof Int8Array)d=n.BYTE;else if(c instanceof Uint8Array)d=n.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)d=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:f,type:d,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:h}}function i(a,l,c){const u=l.array,h=l.updateRanges;if(n.bindBuffer(c,a),h.length===0)n.bufferSubData(c,0,u);else{h.sort((d,p)=>d.start-p.start);let f=0;for(let d=1;d<h.length;d++){const p=h[f],v=h[d];v.start<=p.start+p.count+1?p.count=Math.max(p.count,v.start+v.count-p.start):(++f,h[f]=v)}h.length=f+1;for(let d=0,p=h.length;d<p;d++){const v=h[d];n.bufferSubData(c,v.start*u.BYTES_PER_ELEMENT,u,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(n.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:r,remove:s,update:o}}var gC=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,vC=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,_C=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,xC=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yC=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,bC=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,MC=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,SC=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,wC=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,TC=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,EC=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,AC=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,CC=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,RC=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,IC=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,PC=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,LC=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,DC=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,UC=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,NC=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,OC=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,FC=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,BC=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,zC=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,kC=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,VC=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,HC=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,GC=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,WC=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,XC=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,YC="gl_FragColor = linearToOutputTexel( gl_FragColor );",jC=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,$C=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,qC=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,ZC=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,KC=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,JC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,QC=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,eR=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,tR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,nR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,iR=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,rR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,sR=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,oR=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,aR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,lR=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,cR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,uR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,hR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,fR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,dR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,pR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,mR=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,gR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,vR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,_R=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,xR=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,yR=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,bR=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,MR=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,SR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,wR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,TR=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ER=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,AR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,CR=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,RR=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,IR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,PR=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,LR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,DR=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,UR=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,NR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,OR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,FR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,BR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,zR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,kR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,VR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,HR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,GR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,WR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,XR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,YR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,jR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,$R=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,qR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,ZR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,KR=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSEDEPTHBUF
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSEDEPTHBUF
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare , distribution.x );
		#endif
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,JR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,QR=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,e2=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,t2=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,n2=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,i2=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,r2=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,s2=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,o2=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,a2=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,l2=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,c2=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,u2=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,h2=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,f2=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,d2=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,p2=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const m2=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,g2=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,v2=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,_2=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,x2=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,y2=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,b2=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,M2=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSEDEPTHBUF
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,S2=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,w2=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,T2=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,E2=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,A2=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,C2=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,R2=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,I2=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,P2=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,L2=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,D2=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,U2=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,N2=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,O2=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,F2=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,B2=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,z2=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,k2=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,V2=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,H2=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,G2=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,W2=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,X2=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Y2=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,j2=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,$2=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ot={alphahash_fragment:gC,alphahash_pars_fragment:vC,alphamap_fragment:_C,alphamap_pars_fragment:xC,alphatest_fragment:yC,alphatest_pars_fragment:bC,aomap_fragment:MC,aomap_pars_fragment:SC,batching_pars_vertex:wC,batching_vertex:TC,begin_vertex:EC,beginnormal_vertex:AC,bsdfs:CC,iridescence_fragment:RC,bumpmap_pars_fragment:IC,clipping_planes_fragment:PC,clipping_planes_pars_fragment:LC,clipping_planes_pars_vertex:DC,clipping_planes_vertex:UC,color_fragment:NC,color_pars_fragment:OC,color_pars_vertex:FC,color_vertex:BC,common:zC,cube_uv_reflection_fragment:kC,defaultnormal_vertex:VC,displacementmap_pars_vertex:HC,displacementmap_vertex:GC,emissivemap_fragment:WC,emissivemap_pars_fragment:XC,colorspace_fragment:YC,colorspace_pars_fragment:jC,envmap_fragment:$C,envmap_common_pars_fragment:qC,envmap_pars_fragment:ZC,envmap_pars_vertex:KC,envmap_physical_pars_fragment:lR,envmap_vertex:JC,fog_vertex:QC,fog_pars_vertex:eR,fog_fragment:tR,fog_pars_fragment:nR,gradientmap_pars_fragment:iR,lightmap_pars_fragment:rR,lights_lambert_fragment:sR,lights_lambert_pars_fragment:oR,lights_pars_begin:aR,lights_toon_fragment:cR,lights_toon_pars_fragment:uR,lights_phong_fragment:hR,lights_phong_pars_fragment:fR,lights_physical_fragment:dR,lights_physical_pars_fragment:pR,lights_fragment_begin:mR,lights_fragment_maps:gR,lights_fragment_end:vR,logdepthbuf_fragment:_R,logdepthbuf_pars_fragment:xR,logdepthbuf_pars_vertex:yR,logdepthbuf_vertex:bR,map_fragment:MR,map_pars_fragment:SR,map_particle_fragment:wR,map_particle_pars_fragment:TR,metalnessmap_fragment:ER,metalnessmap_pars_fragment:AR,morphinstance_vertex:CR,morphcolor_vertex:RR,morphnormal_vertex:IR,morphtarget_pars_vertex:PR,morphtarget_vertex:LR,normal_fragment_begin:DR,normal_fragment_maps:UR,normal_pars_fragment:NR,normal_pars_vertex:OR,normal_vertex:FR,normalmap_pars_fragment:BR,clearcoat_normal_fragment_begin:zR,clearcoat_normal_fragment_maps:kR,clearcoat_pars_fragment:VR,iridescence_pars_fragment:HR,opaque_fragment:GR,packing:WR,premultiplied_alpha_fragment:XR,project_vertex:YR,dithering_fragment:jR,dithering_pars_fragment:$R,roughnessmap_fragment:qR,roughnessmap_pars_fragment:ZR,shadowmap_pars_fragment:KR,shadowmap_pars_vertex:JR,shadowmap_vertex:QR,shadowmask_pars_fragment:e2,skinbase_vertex:t2,skinning_pars_vertex:n2,skinning_vertex:i2,skinnormal_vertex:r2,specularmap_fragment:s2,specularmap_pars_fragment:o2,tonemapping_fragment:a2,tonemapping_pars_fragment:l2,transmission_fragment:c2,transmission_pars_fragment:u2,uv_pars_fragment:h2,uv_pars_vertex:f2,uv_vertex:d2,worldpos_vertex:p2,background_vert:m2,background_frag:g2,backgroundCube_vert:v2,backgroundCube_frag:_2,cube_vert:x2,cube_frag:y2,depth_vert:b2,depth_frag:M2,distanceRGBA_vert:S2,distanceRGBA_frag:w2,equirect_vert:T2,equirect_frag:E2,linedashed_vert:A2,linedashed_frag:C2,meshbasic_vert:R2,meshbasic_frag:I2,meshlambert_vert:P2,meshlambert_frag:L2,meshmatcap_vert:D2,meshmatcap_frag:U2,meshnormal_vert:N2,meshnormal_frag:O2,meshphong_vert:F2,meshphong_frag:B2,meshphysical_vert:z2,meshphysical_frag:k2,meshtoon_vert:V2,meshtoon_frag:H2,points_vert:G2,points_frag:W2,shadow_vert:X2,shadow_frag:Y2,sprite_vert:j2,sprite_frag:$2},Re={common:{diffuse:{value:new Ae(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new tt},alphaMap:{value:null},alphaMapTransform:{value:new tt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new tt}},envmap:{envMap:{value:null},envMapRotation:{value:new tt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new tt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new tt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new tt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new tt},normalScale:{value:new de(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new tt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new tt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new tt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new tt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new tt},alphaTest:{value:0},uvTransform:{value:new tt}},sprite:{diffuse:{value:new Ae(16777215)},opacity:{value:1},center:{value:new de(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new tt},alphaMap:{value:null},alphaMapTransform:{value:new tt},alphaTest:{value:0}}},gi={basic:{uniforms:En([Re.common,Re.specularmap,Re.envmap,Re.aomap,Re.lightmap,Re.fog]),vertexShader:ot.meshbasic_vert,fragmentShader:ot.meshbasic_frag},lambert:{uniforms:En([Re.common,Re.specularmap,Re.envmap,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.fog,Re.lights,{emissive:{value:new Ae(0)}}]),vertexShader:ot.meshlambert_vert,fragmentShader:ot.meshlambert_frag},phong:{uniforms:En([Re.common,Re.specularmap,Re.envmap,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.fog,Re.lights,{emissive:{value:new Ae(0)},specular:{value:new Ae(1118481)},shininess:{value:30}}]),vertexShader:ot.meshphong_vert,fragmentShader:ot.meshphong_frag},standard:{uniforms:En([Re.common,Re.envmap,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.roughnessmap,Re.metalnessmap,Re.fog,Re.lights,{emissive:{value:new Ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ot.meshphysical_vert,fragmentShader:ot.meshphysical_frag},toon:{uniforms:En([Re.common,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.gradientmap,Re.fog,Re.lights,{emissive:{value:new Ae(0)}}]),vertexShader:ot.meshtoon_vert,fragmentShader:ot.meshtoon_frag},matcap:{uniforms:En([Re.common,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.fog,{matcap:{value:null}}]),vertexShader:ot.meshmatcap_vert,fragmentShader:ot.meshmatcap_frag},points:{uniforms:En([Re.points,Re.fog]),vertexShader:ot.points_vert,fragmentShader:ot.points_frag},dashed:{uniforms:En([Re.common,Re.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ot.linedashed_vert,fragmentShader:ot.linedashed_frag},depth:{uniforms:En([Re.common,Re.displacementmap]),vertexShader:ot.depth_vert,fragmentShader:ot.depth_frag},normal:{uniforms:En([Re.common,Re.bumpmap,Re.normalmap,Re.displacementmap,{opacity:{value:1}}]),vertexShader:ot.meshnormal_vert,fragmentShader:ot.meshnormal_frag},sprite:{uniforms:En([Re.sprite,Re.fog]),vertexShader:ot.sprite_vert,fragmentShader:ot.sprite_frag},background:{uniforms:{uvTransform:{value:new tt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ot.background_vert,fragmentShader:ot.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new tt}},vertexShader:ot.backgroundCube_vert,fragmentShader:ot.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ot.cube_vert,fragmentShader:ot.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ot.equirect_vert,fragmentShader:ot.equirect_frag},distanceRGBA:{uniforms:En([Re.common,Re.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ot.distanceRGBA_vert,fragmentShader:ot.distanceRGBA_frag},shadow:{uniforms:En([Re.lights,Re.fog,{color:{value:new Ae(0)},opacity:{value:1}}]),vertexShader:ot.shadow_vert,fragmentShader:ot.shadow_frag}};gi.physical={uniforms:En([gi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new tt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new tt},clearcoatNormalScale:{value:new de(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new tt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new tt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new tt},sheen:{value:0},sheenColor:{value:new Ae(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new tt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new tt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new tt},transmissionSamplerSize:{value:new de},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new tt},attenuationDistance:{value:0},attenuationColor:{value:new Ae(0)},specularColor:{value:new Ae(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new tt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new tt},anisotropyVector:{value:new de},anisotropyMap:{value:null},anisotropyMapTransform:{value:new tt}}]),vertexShader:ot.meshphysical_vert,fragmentShader:ot.meshphysical_frag};const Ac={r:0,b:0,g:0},ls=new Dn,q2=new Xe;function Z2(n,e,t,i,r,s,o){const a=new Ae(0);let l=s===!0?0:1,c,u,h=null,f=0,d=null;function p(y){let b=y.isScene===!0?y.background:null;return b&&b.isTexture&&(b=(y.backgroundBlurriness>0?t:e).get(b)),b}function v(y){let b=!1;const C=p(y);C===null?g(a,l):C&&C.isColor&&(g(C,1),b=!0);const w=n.xr.getEnvironmentBlendMode();w==="additive"?i.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(n.autoClear||b)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function m(y,b){const C=p(b);C&&(C.isCubeTexture||C.mapping===Wo)?(u===void 0&&(u=new bt(new Hr(1,1,1),new pn({name:"BackgroundCubeMaterial",uniforms:zo(gi.backgroundCube.uniforms),vertexShader:gi.backgroundCube.vertexShader,fragmentShader:gi.backgroundCube.fragmentShader,side:on,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(w,E,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),ls.copy(b.backgroundRotation),ls.x*=-1,ls.y*=-1,ls.z*=-1,C.isCubeTexture&&C.isRenderTargetTexture===!1&&(ls.y*=-1,ls.z*=-1),u.material.uniforms.envMap.value=C,u.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(q2.makeRotationFromEuler(ls)),u.material.toneMapped=pt.getTransfer(C.colorSpace)!==wt,(h!==C||f!==C.version||d!==n.toneMapping)&&(u.material.needsUpdate=!0,h=C,f=C.version,d=n.toneMapping),u.layers.enableAll(),y.unshift(u,u.geometry,u.material,0,0,null)):C&&C.isTexture&&(c===void 0&&(c=new bt(new Wr(2,2),new pn({name:"BackgroundMaterial",uniforms:zo(gi.background.uniforms),vertexShader:gi.background.vertexShader,fragmentShader:gi.background.fragmentShader,side:Gi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=C,c.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,c.material.toneMapped=pt.getTransfer(C.colorSpace)!==wt,C.matrixAutoUpdate===!0&&C.updateMatrix(),c.material.uniforms.uvTransform.value.copy(C.matrix),(h!==C||f!==C.version||d!==n.toneMapping)&&(c.material.needsUpdate=!0,h=C,f=C.version,d=n.toneMapping),c.layers.enableAll(),y.unshift(c,c.geometry,c.material,0,0,null))}function g(y,b){y.getRGB(Ac,jx(n)),i.buffers.color.setClear(Ac.r,Ac.g,Ac.b,b,o)}function M(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(y,b=1){a.set(y),l=b,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,g(a,l)},render:v,addToRenderList:m,dispose:M}}function K2(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),i={},r=f(null);let s=r,o=!1;function a(x,A,D,k,W){let Y=!1;const z=h(k,D,A);s!==z&&(s=z,c(s.object)),Y=d(x,k,D,W),Y&&p(x,k,D,W),W!==null&&e.update(W,n.ELEMENT_ARRAY_BUFFER),(Y||o)&&(o=!1,b(x,A,D,k),W!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(W).buffer))}function l(){return n.createVertexArray()}function c(x){return n.bindVertexArray(x)}function u(x){return n.deleteVertexArray(x)}function h(x,A,D){const k=D.wireframe===!0;let W=i[x.id];W===void 0&&(W={},i[x.id]=W);let Y=W[A.id];Y===void 0&&(Y={},W[A.id]=Y);let z=Y[k];return z===void 0&&(z=f(l()),Y[k]=z),z}function f(x){const A=[],D=[],k=[];for(let W=0;W<t;W++)A[W]=0,D[W]=0,k[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:A,enabledAttributes:D,attributeDivisors:k,object:x,attributes:{},index:null}}function d(x,A,D,k){const W=s.attributes,Y=A.attributes;let z=0;const Q=D.getAttributes();for(const Z in Q)if(Q[Z].location>=0){const me=W[Z];let oe=Y[Z];if(oe===void 0&&(Z==="instanceMatrix"&&x.instanceMatrix&&(oe=x.instanceMatrix),Z==="instanceColor"&&x.instanceColor&&(oe=x.instanceColor)),me===void 0||me.attribute!==oe||oe&&me.data!==oe.data)return!0;z++}return s.attributesNum!==z||s.index!==k}function p(x,A,D,k){const W={},Y=A.attributes;let z=0;const Q=D.getAttributes();for(const Z in Q)if(Q[Z].location>=0){let me=Y[Z];me===void 0&&(Z==="instanceMatrix"&&x.instanceMatrix&&(me=x.instanceMatrix),Z==="instanceColor"&&x.instanceColor&&(me=x.instanceColor));const oe={};oe.attribute=me,me&&me.data&&(oe.data=me.data),W[Z]=oe,z++}s.attributes=W,s.attributesNum=z,s.index=k}function v(){const x=s.newAttributes;for(let A=0,D=x.length;A<D;A++)x[A]=0}function m(x){g(x,0)}function g(x,A){const D=s.newAttributes,k=s.enabledAttributes,W=s.attributeDivisors;D[x]=1,k[x]===0&&(n.enableVertexAttribArray(x),k[x]=1),W[x]!==A&&(n.vertexAttribDivisor(x,A),W[x]=A)}function M(){const x=s.newAttributes,A=s.enabledAttributes;for(let D=0,k=A.length;D<k;D++)A[D]!==x[D]&&(n.disableVertexAttribArray(D),A[D]=0)}function y(x,A,D,k,W,Y,z){z===!0?n.vertexAttribIPointer(x,A,D,W,Y):n.vertexAttribPointer(x,A,D,k,W,Y)}function b(x,A,D,k){v();const W=k.attributes,Y=D.getAttributes(),z=A.defaultAttributeValues;for(const Q in Y){const Z=Y[Q];if(Z.location>=0){let he=W[Q];if(he===void 0&&(Q==="instanceMatrix"&&x.instanceMatrix&&(he=x.instanceMatrix),Q==="instanceColor"&&x.instanceColor&&(he=x.instanceColor)),he!==void 0){const me=he.normalized,oe=he.itemSize,Ee=e.get(he);if(Ee===void 0)continue;const Ve=Ee.buffer,ze=Ee.type,ae=Ee.bytesPerElement,ye=ze===n.INT||ze===n.UNSIGNED_INT||he.gpuType===dh;if(he.isInterleavedBufferAttribute){const _e=he.data,ue=_e.stride,I=he.offset;if(_e.isInstancedInterleavedBuffer){for(let F=0;F<Z.locationSize;F++)g(Z.location+F,_e.meshPerAttribute);x.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let F=0;F<Z.locationSize;F++)m(Z.location+F);n.bindBuffer(n.ARRAY_BUFFER,Ve);for(let F=0;F<Z.locationSize;F++)y(Z.location+F,oe/Z.locationSize,ze,me,ue*ae,(I+oe/Z.locationSize*F)*ae,ye)}else{if(he.isInstancedBufferAttribute){for(let _e=0;_e<Z.locationSize;_e++)g(Z.location+_e,he.meshPerAttribute);x.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=he.meshPerAttribute*he.count)}else for(let _e=0;_e<Z.locationSize;_e++)m(Z.location+_e);n.bindBuffer(n.ARRAY_BUFFER,Ve);for(let _e=0;_e<Z.locationSize;_e++)y(Z.location+_e,oe/Z.locationSize,ze,me,oe*ae,oe/Z.locationSize*_e*ae,ye)}}else if(z!==void 0){const me=z[Q];if(me!==void 0)switch(me.length){case 2:n.vertexAttrib2fv(Z.location,me);break;case 3:n.vertexAttrib3fv(Z.location,me);break;case 4:n.vertexAttrib4fv(Z.location,me);break;default:n.vertexAttrib1fv(Z.location,me)}}}}M()}function C(){S();for(const x in i){const A=i[x];for(const D in A){const k=A[D];for(const W in k)u(k[W].object),delete k[W];delete A[D]}delete i[x]}}function w(x){if(i[x.id]===void 0)return;const A=i[x.id];for(const D in A){const k=A[D];for(const W in k)u(k[W].object),delete k[W];delete A[D]}delete i[x.id]}function E(x){for(const A in i){const D=i[A];if(D[x.id]===void 0)continue;const k=D[x.id];for(const W in k)u(k[W].object),delete k[W];delete D[x.id]}}function S(){_(),o=!0,s!==r&&(s=r,c(s.object))}function _(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:a,reset:S,resetDefaultState:_,dispose:C,releaseStatesOfGeometry:w,releaseStatesOfProgram:E,initAttributes:v,enableAttribute:m,disableUnusedAttributes:M}}function J2(n,e,t){let i;function r(c){i=c}function s(c,u){n.drawArrays(i,c,u),t.update(u,i,1)}function o(c,u,h){h!==0&&(n.drawArraysInstanced(i,c,u,h),t.update(u,i,h))}function a(c,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,u,0,h);let d=0;for(let p=0;p<h;p++)d+=u[p];t.update(d,i,1)}function l(c,u,h,f){if(h===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let p=0;p<c.length;p++)o(c[p],u[p],f[p]);else{d.multiDrawArraysInstancedWEBGL(i,c,0,u,0,f,0,h);let p=0;for(let v=0;v<h;v++)p+=u[v]*f[v];t.update(p,i,1)}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function Q2(n,e,t,i){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(E){return!(E!==sn&&i.convert(E)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(E){const S=E===Bs&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(E!==wi&&i.convert(E)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&E!==Gn&&!S)}function l(E){if(E==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=t.logarithmicDepthBuffer===!0,f=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),d=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),p=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=n.getParameter(n.MAX_TEXTURE_SIZE),m=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),g=n.getParameter(n.MAX_VERTEX_ATTRIBS),M=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),y=n.getParameter(n.MAX_VARYING_VECTORS),b=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),C=p>0,w=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:h,reversedDepthBuffer:f,maxTextures:d,maxVertexTextures:p,maxTextureSize:v,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:M,maxVaryings:y,maxFragmentUniforms:b,vertexTextures:C,maxSamples:w}}function eI(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new mi,a=new tt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const d=h.length!==0||f||i!==0||r;return r=f,i=h.length,d},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,f){t=u(h,f,0)},this.setState=function(h,f,d){const p=h.clippingPlanes,v=h.clipIntersection,m=h.clipShadows,g=n.get(h);if(!r||p===null||p.length===0||s&&!m)s?u(null):c();else{const M=s?0:i,y=M*4;let b=g.clippingState||null;l.value=b,b=u(p,f,y,d);for(let C=0;C!==y;++C)b[C]=t[C];g.clippingState=b,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=M}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,f,d,p){const v=h!==null?h.length:0;let m=null;if(v!==0){if(m=l.value,p!==!0||m===null){const g=d+v*4,M=f.matrixWorldInverse;a.getNormalMatrix(M),(m===null||m.length<g)&&(m=new Float32Array(g));for(let y=0,b=d;y!==v;++y,b+=4)o.copy(h[y]).applyMatrix4(M,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,m}}function tI(n){let e=new WeakMap;function t(o,a){return a===Ka?o.mapping=mr:a===Ja&&(o.mapping=Or),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Ka||a===Ja)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new qx(l.height);return c.fromEquirectangularTexture(n,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}const yo=4,x0=[.125,.215,.35,.446,.526,.582],ps=20,Yf=new cr,y0=new Ae;let jf=null,$f=0,qf=0,Zf=!1;const fs=(1+Math.sqrt(5))/2,ho=1/fs,b0=[new U(-fs,ho,0),new U(fs,ho,0),new U(-ho,0,fs),new U(ho,0,fs),new U(0,fs,-ho),new U(0,fs,ho),new U(-1,1,-1),new U(1,1,-1),new U(-1,1,1),new U(1,1,1)],nI=new U;class Wd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100,s={}){const{size:o=256,position:a=nI}=s;jf=this._renderer.getRenderTarget(),$f=this._renderer.getActiveCubeFace(),qf=this._renderer.getActiveMipmapLevel(),Zf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,r,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=w0(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=S0(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(jf,$f,qf),this._renderer.xr.enabled=Zf,e.scissorTest=!1,Cc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===mr||e.mapping===Or?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),jf=this._renderer.getRenderTarget(),$f=this._renderer.getActiveCubeFace(),qf=this._renderer.getActiveMipmapLevel(),Zf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:qt,minFilter:qt,generateMipmaps:!1,type:Bs,format:sn,colorSpace:Ls,depthBuffer:!1},r=M0(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=M0(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=iI(s)),this._blurMaterial=rI(s,e,t)}return r}_compileMaterial(e){const t=new bt(this._lodPlanes[0],e);this._renderer.compile(t,Yf)}_sceneToCubeUV(e,t,i,r,s){const l=new Rt(90,1,t,i),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,f=h.autoClear,d=h.toneMapping;h.getClearColor(y0),h.toneMapping=Mi,h.autoClear=!1,h.state.buffers.depth.getReversed()&&(h.setRenderTarget(r),h.clearDepth(),h.setRenderTarget(null));const v=new ci({name:"PMREM.Background",side:on,depthWrite:!1,depthTest:!1}),m=new bt(new Hr,v);let g=!1;const M=e.background;M?M.isColor&&(v.color.copy(M),e.background=null,g=!0):(v.color.copy(y0),g=!0);for(let y=0;y<6;y++){const b=y%3;b===0?(l.up.set(0,c[y],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[y],s.y,s.z)):b===1?(l.up.set(0,0,c[y]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[y],s.z)):(l.up.set(0,c[y],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[y]));const C=this._cubeSize;Cc(r,b*C,y>2?C:0,C,C),h.setRenderTarget(r),g&&h.render(m,l),h.render(e,l)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=d,h.autoClear=f,e.background=M}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===mr||e.mapping===Or;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=w0()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=S0());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new bt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Cc(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,Yf)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=b0[(r-s-1)%b0.length];this._blur(e,s-1,s,o,a)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new bt(this._lodPlanes[r],c),f=c.uniforms,d=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*ps-1),v=s/p,m=isFinite(s)?1+Math.floor(u*v):ps;m>ps&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${ps}`);const g=[];let M=0;for(let E=0;E<ps;++E){const S=E/v,_=Math.exp(-S*S/2);g.push(_),E===0?M+=_:E<m&&(M+=2*_)}for(let E=0;E<g.length;E++)g[E]=g[E]/M;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=g,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:y}=this;f.dTheta.value=p,f.mipInt.value=y-i;const b=this._sizeLods[r],C=3*b*(r>y-yo?r-y+yo:0),w=4*(this._cubeSize-b);Cc(t,C,w,3*b,2*b),l.setRenderTarget(t),l.render(h,Yf)}}function iI(n){const e=[],t=[],i=[];let r=n;const s=n-yo+1+x0.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-yo?l=x0[o-n+yo-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,v=3,m=2,g=1,M=new Float32Array(v*p*d),y=new Float32Array(m*p*d),b=new Float32Array(g*p*d);for(let w=0;w<d;w++){const E=w%3*2/3-1,S=w>2?0:-1,_=[E,S,0,E+2/3,S,0,E+2/3,S+1,0,E,S,0,E+2/3,S+1,0,E,S+1,0];M.set(_,v*p*w),y.set(f,m*p*w);const x=[w,w,w,w,w,w];b.set(x,g*p*w)}const C=new et;C.setAttribute("position",new mt(M,v)),C.setAttribute("uv",new mt(y,m)),C.setAttribute("faceIndex",new mt(b,g)),e.push(C),r>yo&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function M0(n,e,t){const i=new Ti(n,e,t);return i.texture.mapping=Wo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Cc(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function rI(n,e,t){const i=new Float32Array(ps),r=new U(0,1,0);return new pn({name:"SphericalGaussianBlur",defines:{n:ps,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:hm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function S0(){return new pn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:hm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function w0(){return new pn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:hm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function hm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function sI(n){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ka||l===Ja,u=l===mr||l===Or;if(c||u){let h=e.get(a);const f=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==f)return t===null&&(t=new Wd(n)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const d=a.image;return c&&d&&d.height>0||u&&d&&r(d)?(t===null&&(t=new Wd(n)),h=c?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",s),h.texture):null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function oI(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const r=t(i);return r===null&&Eo("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function aI(n,e,t,i){const r={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete r[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const d in f)e.update(f[d],n.ARRAY_BUFFER)}function c(h){const f=[],d=h.index,p=h.attributes.position;let v=0;if(d!==null){const M=d.array;v=d.version;for(let y=0,b=M.length;y<b;y+=3){const C=M[y+0],w=M[y+1],E=M[y+2];f.push(C,w,w,E,E,C)}}else if(p!==void 0){const M=p.array;v=p.version;for(let y=0,b=M.length/3-1;y<b;y+=3){const C=y+0,w=y+1,E=y+2;f.push(C,w,w,E,E,C)}}else return;const m=new(Gx(f)?kp:zp)(f,1);m.version=v;const g=s.get(h);g&&e.remove(g),s.set(h,m)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function lI(n,e,t){let i;function r(f){i=f}let s,o;function a(f){s=f.type,o=f.bytesPerElement}function l(f,d){n.drawElements(i,d,s,f*o),t.update(d,i,1)}function c(f,d,p){p!==0&&(n.drawElementsInstanced(i,d,s,f*o,p),t.update(d,i,p))}function u(f,d,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,d,0,s,f,0,p);let m=0;for(let g=0;g<p;g++)m+=d[g];t.update(m,i,1)}function h(f,d,p,v){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<f.length;g++)c(f[g]/o,d[g],v[g]);else{m.multiDrawElementsInstancedWEBGL(i,d,0,s,f,0,v,0,p);let g=0;for(let M=0;M<p;M++)g+=d[M]*v[M];t.update(g,i,1)}}this.setMode=r,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function cI(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case n.TRIANGLES:t.triangles+=a*(s/3);break;case n.LINES:t.lines+=a*(s/2);break;case n.LINE_STRIP:t.lines+=a*(s-1);break;case n.LINE_LOOP:t.lines+=a*s;break;case n.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function uI(n,e,t){const i=new WeakMap,r=new at;function s(o,a,l){const c=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let f=i.get(a);if(f===void 0||f.count!==h){let x=function(){S.dispose(),i.delete(a),a.removeEventListener("dispose",x)};var d=x;f!==void 0&&f.texture.dispose();const p=a.morphAttributes.position!==void 0,v=a.morphAttributes.normal!==void 0,m=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],M=a.morphAttributes.normal||[],y=a.morphAttributes.color||[];let b=0;p===!0&&(b=1),v===!0&&(b=2),m===!0&&(b=3);let C=a.attributes.position.count*b,w=1;C>e.maxTextureSize&&(w=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const E=new Float32Array(C*w*4*h),S=new yh(E,C,w,h);S.type=Gn,S.needsUpdate=!0;const _=b*4;for(let A=0;A<h;A++){const D=g[A],k=M[A],W=y[A],Y=C*w*4*A;for(let z=0;z<D.count;z++){const Q=z*_;p===!0&&(r.fromBufferAttribute(D,z),E[Y+Q+0]=r.x,E[Y+Q+1]=r.y,E[Y+Q+2]=r.z,E[Y+Q+3]=0),v===!0&&(r.fromBufferAttribute(k,z),E[Y+Q+4]=r.x,E[Y+Q+5]=r.y,E[Y+Q+6]=r.z,E[Y+Q+7]=0),m===!0&&(r.fromBufferAttribute(W,z),E[Y+Q+8]=r.x,E[Y+Q+9]=r.y,E[Y+Q+10]=r.z,E[Y+Q+11]=W.itemSize===4?r.w:1)}}f={count:h,texture:S,size:new de(C,w)},i.set(a,f),a.addEventListener("dispose",x)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(n,"morphTexture",o.morphTexture,t);else{let p=0;for(let m=0;m<c.length;m++)p+=c[m];const v=a.morphTargetsRelative?1:1-p;l.getUniforms().setValue(n,"morphTargetBaseInfluence",v),l.getUniforms().setValue(n,"morphTargetInfluences",c)}l.getUniforms().setValue(n,"morphTargetsTexture",f.texture,t),l.getUniforms().setValue(n,"morphTargetsTextureSize",f.size)}return{update:s}}function hI(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==c&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const $y=new Ot,T0=new Wp(1,1),qy=new yh,Zy=new bh,Ky=new Ml,E0=[],A0=[],C0=new Float32Array(16),R0=new Float32Array(9),I0=new Float32Array(4);function Yo(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=E0[r];if(s===void 0&&(s=new Float32Array(r),E0[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function tn(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function nn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Hh(n,e){let t=A0[e];t===void 0&&(t=new Int32Array(e),A0[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function fI(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function dI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;n.uniform2fv(this.addr,e),nn(t,e)}}function pI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(tn(t,e))return;n.uniform3fv(this.addr,e),nn(t,e)}}function mI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;n.uniform4fv(this.addr,e),nn(t,e)}}function gI(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(tn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,i))return;I0.set(i),n.uniformMatrix2fv(this.addr,!1,I0),nn(t,i)}}function vI(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(tn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,i))return;R0.set(i),n.uniformMatrix3fv(this.addr,!1,R0),nn(t,i)}}function _I(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(tn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,i))return;C0.set(i),n.uniformMatrix4fv(this.addr,!1,C0),nn(t,i)}}function xI(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function yI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;n.uniform2iv(this.addr,e),nn(t,e)}}function bI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tn(t,e))return;n.uniform3iv(this.addr,e),nn(t,e)}}function MI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;n.uniform4iv(this.addr,e),nn(t,e)}}function SI(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function wI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;n.uniform2uiv(this.addr,e),nn(t,e)}}function TI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tn(t,e))return;n.uniform3uiv(this.addr,e),nn(t,e)}}function EI(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;n.uniform4uiv(this.addr,e),nn(t,e)}}function AI(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r);let s;this.type===n.SAMPLER_2D_SHADOW?(T0.compareFunction=Op,s=T0):s=$y,t.setTexture2D(e||s,r)}function CI(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||Zy,r)}function RI(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||Ky,r)}function II(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||qy,r)}function PI(n){switch(n){case 5126:return fI;case 35664:return dI;case 35665:return pI;case 35666:return mI;case 35674:return gI;case 35675:return vI;case 35676:return _I;case 5124:case 35670:return xI;case 35667:case 35671:return yI;case 35668:case 35672:return bI;case 35669:case 35673:return MI;case 5125:return SI;case 36294:return wI;case 36295:return TI;case 36296:return EI;case 35678:case 36198:case 36298:case 36306:case 35682:return AI;case 35679:case 36299:case 36307:return CI;case 35680:case 36300:case 36308:case 36293:return RI;case 36289:case 36303:case 36311:case 36292:return II}}function LI(n,e){n.uniform1fv(this.addr,e)}function DI(n,e){const t=Yo(e,this.size,2);n.uniform2fv(this.addr,t)}function UI(n,e){const t=Yo(e,this.size,3);n.uniform3fv(this.addr,t)}function NI(n,e){const t=Yo(e,this.size,4);n.uniform4fv(this.addr,t)}function OI(n,e){const t=Yo(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function FI(n,e){const t=Yo(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function BI(n,e){const t=Yo(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function zI(n,e){n.uniform1iv(this.addr,e)}function kI(n,e){n.uniform2iv(this.addr,e)}function VI(n,e){n.uniform3iv(this.addr,e)}function HI(n,e){n.uniform4iv(this.addr,e)}function GI(n,e){n.uniform1uiv(this.addr,e)}function WI(n,e){n.uniform2uiv(this.addr,e)}function XI(n,e){n.uniform3uiv(this.addr,e)}function YI(n,e){n.uniform4uiv(this.addr,e)}function jI(n,e,t){const i=this.cache,r=e.length,s=Hh(t,r);tn(i,s)||(n.uniform1iv(this.addr,s),nn(i,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||$y,s[o])}function $I(n,e,t){const i=this.cache,r=e.length,s=Hh(t,r);tn(i,s)||(n.uniform1iv(this.addr,s),nn(i,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||Zy,s[o])}function qI(n,e,t){const i=this.cache,r=e.length,s=Hh(t,r);tn(i,s)||(n.uniform1iv(this.addr,s),nn(i,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||Ky,s[o])}function ZI(n,e,t){const i=this.cache,r=e.length,s=Hh(t,r);tn(i,s)||(n.uniform1iv(this.addr,s),nn(i,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||qy,s[o])}function KI(n){switch(n){case 5126:return LI;case 35664:return DI;case 35665:return UI;case 35666:return NI;case 35674:return OI;case 35675:return FI;case 35676:return BI;case 5124:case 35670:return zI;case 35667:case 35671:return kI;case 35668:case 35672:return VI;case 35669:case 35673:return HI;case 5125:return GI;case 36294:return WI;case 36295:return XI;case 36296:return YI;case 35678:case 36198:case 36298:case 36306:case 35682:return jI;case 35679:case 36299:case 36307:return $I;case 35680:case 36300:case 36308:case 36293:return qI;case 36289:case 36303:case 36311:case 36292:return ZI}}class JI{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=PI(t.type)}}class QI{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=KI(t.type)}}class eP{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],i)}}}const Kf=/(\w+)(\])?(\[|\.)?/g;function P0(n,e){n.seq.push(e),n.map[e.id]=e}function tP(n,e,t){const i=n.name,r=i.length;for(Kf.lastIndex=0;;){const s=Kf.exec(i),o=Kf.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){P0(t,c===void 0?new JI(a,n,e):new QI(a,n,e));break}else{let h=t.map[a];h===void 0&&(h=new eP(a),P0(t,h)),t=h}}}class Xc{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);tP(s,o,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&i.push(o)}return i}}function L0(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}const nP=37297;let iP=0;function rP(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const D0=new tt;function sP(n){pt._getMatrix(D0,pt.workingColorSpace,n);const e=`mat3( ${D0.elements.map(t=>t.toFixed(4))} )`;switch(pt.getTransfer(n)){case tl:return[e,"LinearTransferOETF"];case wt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",n),[e,"LinearTransferOETF"]}}function U0(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),s=(n.getShaderInfoLog(e)||"").trim();if(i&&s==="")return"";const o=/ERROR: 0:(\d+)/.exec(s);if(o){const a=parseInt(o[1]);return t.toUpperCase()+`

`+s+`

`+rP(n.getShaderSource(e),a)}else return s}function oP(n,e){const t=sP(e);return[`vec4 ${n}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function aP(n,e){let t;switch(e){case Sx:t="Linear";break;case wx:t="Reinhard";break;case Tx:t="Cineon";break;case uh:t="ACESFilmic";break;case Ax:t="AgX";break;case Cx:t="Neutral";break;case Ex:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Rc=new U;function lP(){pt.getLuminanceCoefficients(Rc);const n=Rc.x.toFixed(4),e=Rc.y.toFixed(4),t=Rc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${n}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function cP(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(_a).join(`
`)}function uP(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function hP(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),o=s.name;let a=1;s.type===n.FLOAT_MAT2&&(a=2),s.type===n.FLOAT_MAT3&&(a=3),s.type===n.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function _a(n){return n!==""}function N0(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function O0(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const fP=/^[ \t]*#include +<([\w\d./]+)>/gm;function Xd(n){return n.replace(fP,pP)}const dP=new Map;function pP(n,e){let t=ot[e];if(t===void 0){const i=dP.get(e);if(i!==void 0)t=ot[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Xd(t)}const mP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function F0(n){return n.replace(mP,gP)}function gP(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function B0(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function vP(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===Ep?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===Ap?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Ni&&(e="SHADOWMAP_TYPE_VSM"),e}function _P(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case mr:case Or:e="ENVMAP_TYPE_CUBE";break;case Wo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function xP(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Or:e="ENVMAP_MODE_REFRACTION";break}return e}function yP(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case _l:e="ENVMAP_BLENDING_MULTIPLY";break;case bx:e="ENVMAP_BLENDING_MIX";break;case Mx:e="ENVMAP_BLENDING_ADD";break}return e}function bP(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function MP(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=vP(t),c=_P(t),u=xP(t),h=yP(t),f=bP(t),d=cP(t),p=uP(s),v=r.createProgram();let m,g,M=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(_a).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(_a).join(`
`),g.length>0&&(g+=`
`)):(m=[B0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(_a).join(`
`),g=[B0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Mi?"#define TONE_MAPPING":"",t.toneMapping!==Mi?ot.tonemapping_pars_fragment:"",t.toneMapping!==Mi?aP("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ot.colorspace_pars_fragment,oP("linearToOutputTexel",t.outputColorSpace),lP(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(_a).join(`
`)),o=Xd(o),o=N0(o,t),o=O0(o,t),a=Xd(a),a=N0(a,t),a=O0(a,t),o=F0(o),a=F0(a),t.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,m=[d,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===Nd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Nd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const y=M+m+o,b=M+g+a,C=L0(r,r.VERTEX_SHADER,y),w=L0(r,r.FRAGMENT_SHADER,b);r.attachShader(v,C),r.attachShader(v,w),t.index0AttributeName!==void 0?r.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v);function E(A){if(n.debug.checkShaderErrors){const D=r.getProgramInfoLog(v)||"",k=r.getShaderInfoLog(C)||"",W=r.getShaderInfoLog(w)||"",Y=D.trim(),z=k.trim(),Q=W.trim();let Z=!0,he=!0;if(r.getProgramParameter(v,r.LINK_STATUS)===!1)if(Z=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,v,C,w);else{const me=U0(r,C,"vertex"),oe=U0(r,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(v,r.VALIDATE_STATUS)+`

Material Name: `+A.name+`
Material Type: `+A.type+`

Program Info Log: `+Y+`
`+me+`
`+oe)}else Y!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Y):(z===""||Q==="")&&(he=!1);he&&(A.diagnostics={runnable:Z,programLog:Y,vertexShader:{log:z,prefix:m},fragmentShader:{log:Q,prefix:g}})}r.deleteShader(C),r.deleteShader(w),S=new Xc(r,v),_=hP(r,v)}let S;this.getUniforms=function(){return S===void 0&&E(this),S};let _;this.getAttributes=function(){return _===void 0&&E(this),_};let x=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return x===!1&&(x=r.getProgramParameter(v,nP)),x},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=iP++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=C,this.fragmentShader=w,this}let SP=0;class wP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new TP(e),t.set(e,i)),i}}class TP{constructor(e){this.id=SP++,this.code=e,this.usedTimes=0}}function EP(n,e,t,i,r,s,o){const a=new yl,l=new wP,c=new Set,u=[],h=r.logarithmicDepthBuffer,f=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(_){return c.add(_),_===0?"uv":`uv${_}`}function m(_,x,A,D,k){const W=D.fog,Y=k.geometry,z=_.isMeshStandardMaterial?D.environment:null,Q=(_.isMeshStandardMaterial?t:e).get(_.envMap||z),Z=Q&&Q.mapping===Wo?Q.image.height:null,he=p[_.type];_.precision!==null&&(d=r.getMaxPrecision(_.precision),d!==_.precision&&console.warn("THREE.WebGLProgram.getParameters:",_.precision,"not supported, using",d,"instead."));const me=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,oe=me!==void 0?me.length:0;let Ee=0;Y.morphAttributes.position!==void 0&&(Ee=1),Y.morphAttributes.normal!==void 0&&(Ee=2),Y.morphAttributes.color!==void 0&&(Ee=3);let Ve,ze,ae,ye;if(he){const ut=gi[he];Ve=ut.vertexShader,ze=ut.fragmentShader}else Ve=_.vertexShader,ze=_.fragmentShader,l.update(_),ae=l.getVertexShaderID(_),ye=l.getFragmentShaderID(_);const _e=n.getRenderTarget(),ue=n.state.buffers.depth.getReversed(),I=k.isInstancedMesh===!0,F=k.isBatchedMesh===!0,$=!!_.map,P=!!_.matcap,T=!!Q,O=!!_.aoMap,B=!!_.lightMap,G=!!_.bumpMap,H=!!_.normalMap,K=!!_.displacementMap,q=!!_.emissiveMap,J=!!_.metalnessMap,ie=!!_.roughnessMap,pe=_.anisotropy>0,L=_.clearcoat>0,R=_.dispersion>0,j=_.iridescence>0,te=_.sheen>0,fe=_.transmission>0,re=pe&&!!_.anisotropyMap,Ce=L&&!!_.clearcoatMap,ve=L&&!!_.clearcoatNormalMap,Pe=L&&!!_.clearcoatRoughnessMap,Le=j&&!!_.iridescenceMap,be=j&&!!_.iridescenceThicknessMap,Ie=te&&!!_.sheenColorMap,Oe=te&&!!_.sheenRoughnessMap,V=!!_.specularMap,se=!!_.specularColorMap,Se=!!_.specularIntensityMap,X=fe&&!!_.transmissionMap,xe=fe&&!!_.thicknessMap,we=!!_.gradientMap,Ne=!!_.alphaMap,Me=_.alphaTest>0,ge=!!_.alphaHash,Ue=!!_.extensions;let qe=Mi;_.toneMapped&&(_e===null||_e.isXRRenderTarget===!0)&&(qe=n.toneMapping);const vt={shaderID:he,shaderType:_.type,shaderName:_.name,vertexShader:Ve,fragmentShader:ze,defines:_.defines,customVertexShaderID:ae,customFragmentShaderID:ye,isRawShaderMaterial:_.isRawShaderMaterial===!0,glslVersion:_.glslVersion,precision:d,batching:F,batchingColor:F&&k._colorsTexture!==null,instancing:I,instancingColor:I&&k.instanceColor!==null,instancingMorph:I&&k.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:_e===null?n.outputColorSpace:_e.isXRRenderTarget===!0?_e.texture.colorSpace:Ls,alphaToCoverage:!!_.alphaToCoverage,map:$,matcap:P,envMap:T,envMapMode:T&&Q.mapping,envMapCubeUVHeight:Z,aoMap:O,lightMap:B,bumpMap:G,normalMap:H,displacementMap:f&&K,emissiveMap:q,normalMapObjectSpace:H&&_.normalMapType===Nx,normalMapTangentSpace:H&&_.normalMapType===Vr,metalnessMap:J,roughnessMap:ie,anisotropy:pe,anisotropyMap:re,clearcoat:L,clearcoatMap:Ce,clearcoatNormalMap:ve,clearcoatRoughnessMap:Pe,dispersion:R,iridescence:j,iridescenceMap:Le,iridescenceThicknessMap:be,sheen:te,sheenColorMap:Ie,sheenRoughnessMap:Oe,specularMap:V,specularColorMap:se,specularIntensityMap:Se,transmission:fe,transmissionMap:X,thicknessMap:xe,gradientMap:we,opaque:_.transparent===!1&&_.blending===Ss&&_.alphaToCoverage===!1,alphaMap:Ne,alphaTest:Me,alphaHash:ge,combine:_.combine,mapUv:$&&v(_.map.channel),aoMapUv:O&&v(_.aoMap.channel),lightMapUv:B&&v(_.lightMap.channel),bumpMapUv:G&&v(_.bumpMap.channel),normalMapUv:H&&v(_.normalMap.channel),displacementMapUv:K&&v(_.displacementMap.channel),emissiveMapUv:q&&v(_.emissiveMap.channel),metalnessMapUv:J&&v(_.metalnessMap.channel),roughnessMapUv:ie&&v(_.roughnessMap.channel),anisotropyMapUv:re&&v(_.anisotropyMap.channel),clearcoatMapUv:Ce&&v(_.clearcoatMap.channel),clearcoatNormalMapUv:ve&&v(_.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Pe&&v(_.clearcoatRoughnessMap.channel),iridescenceMapUv:Le&&v(_.iridescenceMap.channel),iridescenceThicknessMapUv:be&&v(_.iridescenceThicknessMap.channel),sheenColorMapUv:Ie&&v(_.sheenColorMap.channel),sheenRoughnessMapUv:Oe&&v(_.sheenRoughnessMap.channel),specularMapUv:V&&v(_.specularMap.channel),specularColorMapUv:se&&v(_.specularColorMap.channel),specularIntensityMapUv:Se&&v(_.specularIntensityMap.channel),transmissionMapUv:X&&v(_.transmissionMap.channel),thicknessMapUv:xe&&v(_.thicknessMap.channel),alphaMapUv:Ne&&v(_.alphaMap.channel),vertexTangents:!!Y.attributes.tangent&&(H||pe),vertexColors:_.vertexColors,vertexAlphas:_.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!Y.attributes.uv&&($||Ne),fog:!!W,useFog:_.fog===!0,fogExp2:!!W&&W.isFogExp2,flatShading:_.flatShading===!0&&_.wireframe===!1,sizeAttenuation:_.sizeAttenuation===!0,logarithmicDepthBuffer:h,reversedDepthBuffer:ue,skinning:k.isSkinnedMesh===!0,morphTargets:Y.morphAttributes.position!==void 0,morphNormals:Y.morphAttributes.normal!==void 0,morphColors:Y.morphAttributes.color!==void 0,morphTargetsCount:oe,morphTextureStride:Ee,numDirLights:x.directional.length,numPointLights:x.point.length,numSpotLights:x.spot.length,numSpotLightMaps:x.spotLightMap.length,numRectAreaLights:x.rectArea.length,numHemiLights:x.hemi.length,numDirLightShadows:x.directionalShadowMap.length,numPointLightShadows:x.pointShadowMap.length,numSpotLightShadows:x.spotShadowMap.length,numSpotLightShadowsWithMaps:x.numSpotLightShadowsWithMaps,numLightProbes:x.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:_.dithering,shadowMapEnabled:n.shadowMap.enabled&&A.length>0,shadowMapType:n.shadowMap.type,toneMapping:qe,decodeVideoTexture:$&&_.map.isVideoTexture===!0&&pt.getTransfer(_.map.colorSpace)===wt,decodeVideoTextureEmissive:q&&_.emissiveMap.isVideoTexture===!0&&pt.getTransfer(_.emissiveMap.colorSpace)===wt,premultipliedAlpha:_.premultipliedAlpha,doubleSided:_.side===Hn,flipSided:_.side===on,useDepthPacking:_.depthPacking>=0,depthPacking:_.depthPacking||0,index0AttributeName:_.index0AttributeName,extensionClipCullDistance:Ue&&_.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ue&&_.extensions.multiDraw===!0||F)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:_.customProgramCacheKey()};return vt.vertexUv1s=c.has(1),vt.vertexUv2s=c.has(2),vt.vertexUv3s=c.has(3),c.clear(),vt}function g(_){const x=[];if(_.shaderID?x.push(_.shaderID):(x.push(_.customVertexShaderID),x.push(_.customFragmentShaderID)),_.defines!==void 0)for(const A in _.defines)x.push(A),x.push(_.defines[A]);return _.isRawShaderMaterial===!1&&(M(x,_),y(x,_),x.push(n.outputColorSpace)),x.push(_.customProgramCacheKey),x.join()}function M(_,x){_.push(x.precision),_.push(x.outputColorSpace),_.push(x.envMapMode),_.push(x.envMapCubeUVHeight),_.push(x.mapUv),_.push(x.alphaMapUv),_.push(x.lightMapUv),_.push(x.aoMapUv),_.push(x.bumpMapUv),_.push(x.normalMapUv),_.push(x.displacementMapUv),_.push(x.emissiveMapUv),_.push(x.metalnessMapUv),_.push(x.roughnessMapUv),_.push(x.anisotropyMapUv),_.push(x.clearcoatMapUv),_.push(x.clearcoatNormalMapUv),_.push(x.clearcoatRoughnessMapUv),_.push(x.iridescenceMapUv),_.push(x.iridescenceThicknessMapUv),_.push(x.sheenColorMapUv),_.push(x.sheenRoughnessMapUv),_.push(x.specularMapUv),_.push(x.specularColorMapUv),_.push(x.specularIntensityMapUv),_.push(x.transmissionMapUv),_.push(x.thicknessMapUv),_.push(x.combine),_.push(x.fogExp2),_.push(x.sizeAttenuation),_.push(x.morphTargetsCount),_.push(x.morphAttributeCount),_.push(x.numDirLights),_.push(x.numPointLights),_.push(x.numSpotLights),_.push(x.numSpotLightMaps),_.push(x.numHemiLights),_.push(x.numRectAreaLights),_.push(x.numDirLightShadows),_.push(x.numPointLightShadows),_.push(x.numSpotLightShadows),_.push(x.numSpotLightShadowsWithMaps),_.push(x.numLightProbes),_.push(x.shadowMapType),_.push(x.toneMapping),_.push(x.numClippingPlanes),_.push(x.numClipIntersection),_.push(x.depthPacking)}function y(_,x){a.disableAll(),x.supportsVertexTextures&&a.enable(0),x.instancing&&a.enable(1),x.instancingColor&&a.enable(2),x.instancingMorph&&a.enable(3),x.matcap&&a.enable(4),x.envMap&&a.enable(5),x.normalMapObjectSpace&&a.enable(6),x.normalMapTangentSpace&&a.enable(7),x.clearcoat&&a.enable(8),x.iridescence&&a.enable(9),x.alphaTest&&a.enable(10),x.vertexColors&&a.enable(11),x.vertexAlphas&&a.enable(12),x.vertexUv1s&&a.enable(13),x.vertexUv2s&&a.enable(14),x.vertexUv3s&&a.enable(15),x.vertexTangents&&a.enable(16),x.anisotropy&&a.enable(17),x.alphaHash&&a.enable(18),x.batching&&a.enable(19),x.dispersion&&a.enable(20),x.batchingColor&&a.enable(21),x.gradientMap&&a.enable(22),_.push(a.mask),a.disableAll(),x.fog&&a.enable(0),x.useFog&&a.enable(1),x.flatShading&&a.enable(2),x.logarithmicDepthBuffer&&a.enable(3),x.reversedDepthBuffer&&a.enable(4),x.skinning&&a.enable(5),x.morphTargets&&a.enable(6),x.morphNormals&&a.enable(7),x.morphColors&&a.enable(8),x.premultipliedAlpha&&a.enable(9),x.shadowMapEnabled&&a.enable(10),x.doubleSided&&a.enable(11),x.flipSided&&a.enable(12),x.useDepthPacking&&a.enable(13),x.dithering&&a.enable(14),x.transmission&&a.enable(15),x.sheen&&a.enable(16),x.opaque&&a.enable(17),x.pointsUvs&&a.enable(18),x.decodeVideoTexture&&a.enable(19),x.decodeVideoTextureEmissive&&a.enable(20),x.alphaToCoverage&&a.enable(21),_.push(a.mask)}function b(_){const x=p[_.type];let A;if(x){const D=gi[x];A=Ds.clone(D.uniforms)}else A=_.uniforms;return A}function C(_,x){let A;for(let D=0,k=u.length;D<k;D++){const W=u[D];if(W.cacheKey===x){A=W,++A.usedTimes;break}}return A===void 0&&(A=new MP(n,x,_,s),u.push(A)),A}function w(_){if(--_.usedTimes===0){const x=u.indexOf(_);u[x]=u[u.length-1],u.pop(),_.destroy()}}function E(_){l.remove(_)}function S(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:b,acquireProgram:C,releaseProgram:w,releaseShaderCache:E,programs:u,dispose:S}}function AP(){let n=new WeakMap;function e(o){return n.has(o)}function t(o){let a=n.get(o);return a===void 0&&(a={},n.set(o,a)),a}function i(o){n.delete(o)}function r(o,a,l){n.get(o)[a]=l}function s(){n=new WeakMap}return{has:e,get:t,remove:i,update:r,dispose:s}}function CP(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function z0(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function k0(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function o(h,f,d,p,v,m){let g=n[e];return g===void 0?(g={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:v,group:m},n[e]=g):(g.id=h.id,g.object=h,g.geometry=f,g.material=d,g.groupOrder=p,g.renderOrder=h.renderOrder,g.z=v,g.group=m),e++,g}function a(h,f,d,p,v,m){const g=o(h,f,d,p,v,m);d.transmission>0?i.push(g):d.transparent===!0?r.push(g):t.push(g)}function l(h,f,d,p,v,m){const g=o(h,f,d,p,v,m);d.transmission>0?i.unshift(g):d.transparent===!0?r.unshift(g):t.unshift(g)}function c(h,f){t.length>1&&t.sort(h||CP),i.length>1&&i.sort(f||z0),r.length>1&&r.sort(f||z0)}function u(){for(let h=e,f=n.length;h<f;h++){const d=n[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function RP(){let n=new WeakMap;function e(i,r){const s=n.get(i);let o;return s===void 0?(o=new k0,n.set(i,[o])):r>=s.length?(o=new k0,s.push(o)):o=s[r],o}function t(){n=new WeakMap}return{get:e,dispose:t}}function IP(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Ae};break;case"SpotLight":t={position:new U,direction:new U,color:new Ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Ae,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Ae,groundColor:new Ae};break;case"RectAreaLight":t={color:new Ae,position:new U,halfWidth:new U,halfHeight:new U};break}return n[e.id]=t,t}}}function PP(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let LP=0;function DP(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function UP(n){const e=new IP,t=PP(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new U);const r=new U,s=new Xe,o=new Xe;function a(c){let u=0,h=0,f=0;for(let _=0;_<9;_++)i.probe[_].set(0,0,0);let d=0,p=0,v=0,m=0,g=0,M=0,y=0,b=0,C=0,w=0,E=0;c.sort(DP);for(let _=0,x=c.length;_<x;_++){const A=c[_],D=A.color,k=A.intensity,W=A.distance,Y=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)u+=D.r*k,h+=D.g*k,f+=D.b*k;else if(A.isLightProbe){for(let z=0;z<9;z++)i.probe[z].addScaledVector(A.sh.coefficients[z],k);E++}else if(A.isDirectionalLight){const z=e.get(A);if(z.color.copy(A.color).multiplyScalar(A.intensity),A.castShadow){const Q=A.shadow,Z=t.get(A);Z.shadowIntensity=Q.intensity,Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,i.directionalShadow[d]=Z,i.directionalShadowMap[d]=Y,i.directionalShadowMatrix[d]=A.shadow.matrix,M++}i.directional[d]=z,d++}else if(A.isSpotLight){const z=e.get(A);z.position.setFromMatrixPosition(A.matrixWorld),z.color.copy(D).multiplyScalar(k),z.distance=W,z.coneCos=Math.cos(A.angle),z.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),z.decay=A.decay,i.spot[v]=z;const Q=A.shadow;if(A.map&&(i.spotLightMap[C]=A.map,C++,Q.updateMatrices(A),A.castShadow&&w++),i.spotLightMatrix[v]=Q.matrix,A.castShadow){const Z=t.get(A);Z.shadowIntensity=Q.intensity,Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,i.spotShadow[v]=Z,i.spotShadowMap[v]=Y,b++}v++}else if(A.isRectAreaLight){const z=e.get(A);z.color.copy(D).multiplyScalar(k),z.halfWidth.set(A.width*.5,0,0),z.halfHeight.set(0,A.height*.5,0),i.rectArea[m]=z,m++}else if(A.isPointLight){const z=e.get(A);if(z.color.copy(A.color).multiplyScalar(A.intensity),z.distance=A.distance,z.decay=A.decay,A.castShadow){const Q=A.shadow,Z=t.get(A);Z.shadowIntensity=Q.intensity,Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,Z.shadowCameraNear=Q.camera.near,Z.shadowCameraFar=Q.camera.far,i.pointShadow[p]=Z,i.pointShadowMap[p]=Y,i.pointShadowMatrix[p]=A.shadow.matrix,y++}i.point[p]=z,p++}else if(A.isHemisphereLight){const z=e.get(A);z.skyColor.copy(A.color).multiplyScalar(k),z.groundColor.copy(A.groundColor).multiplyScalar(k),i.hemi[g]=z,g++}}m>0&&(n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Re.LTC_FLOAT_1,i.rectAreaLTC2=Re.LTC_FLOAT_2):(i.rectAreaLTC1=Re.LTC_HALF_1,i.rectAreaLTC2=Re.LTC_HALF_2)),i.ambient[0]=u,i.ambient[1]=h,i.ambient[2]=f;const S=i.hash;(S.directionalLength!==d||S.pointLength!==p||S.spotLength!==v||S.rectAreaLength!==m||S.hemiLength!==g||S.numDirectionalShadows!==M||S.numPointShadows!==y||S.numSpotShadows!==b||S.numSpotMaps!==C||S.numLightProbes!==E)&&(i.directional.length=d,i.spot.length=v,i.rectArea.length=m,i.point.length=p,i.hemi.length=g,i.directionalShadow.length=M,i.directionalShadowMap.length=M,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=b,i.spotShadowMap.length=b,i.directionalShadowMatrix.length=M,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=b+C-w,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=w,i.numLightProbes=E,S.directionalLength=d,S.pointLength=p,S.spotLength=v,S.rectAreaLength=m,S.hemiLength=g,S.numDirectionalShadows=M,S.numPointShadows=y,S.numSpotShadows=b,S.numSpotMaps=C,S.numLightProbes=E,i.version=LP++)}function l(c,u){let h=0,f=0,d=0,p=0,v=0;const m=u.matrixWorldInverse;for(let g=0,M=c.length;g<M;g++){const y=c[g];if(y.isDirectionalLight){const b=i.directional[h];b.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(m),h++}else if(y.isSpotLight){const b=i.spot[d];b.position.setFromMatrixPosition(y.matrixWorld),b.position.applyMatrix4(m),b.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(m),d++}else if(y.isRectAreaLight){const b=i.rectArea[p];b.position.setFromMatrixPosition(y.matrixWorld),b.position.applyMatrix4(m),o.identity(),s.copy(y.matrixWorld),s.premultiply(m),o.extractRotation(s),b.halfWidth.set(y.width*.5,0,0),b.halfHeight.set(0,y.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),p++}else if(y.isPointLight){const b=i.point[f];b.position.setFromMatrixPosition(y.matrixWorld),b.position.applyMatrix4(m),f++}else if(y.isHemisphereLight){const b=i.hemi[v];b.direction.setFromMatrixPosition(y.matrixWorld),b.direction.transformDirection(m),v++}}}return{setup:a,setupView:l,state:i}}function V0(n){const e=new UP(n),t=[],i=[];function r(u){c.camera=u,t.length=0,i.length=0}function s(u){t.push(u)}function o(u){i.push(u)}function a(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function NP(n){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let a;return o===void 0?(a=new V0(n),e.set(r,[a])):s>=o.length?(a=new V0(n),o.push(a)):a=o[s],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const OP=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,FP=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function BP(n,e,t){let i=new Xo;const r=new de,s=new de,o=new at,a=new Qp({depthPacking:Ux}),l=new em,c={},u=t.maxTextureSize,h={[Gi]:on,[on]:Gi,[Hn]:Hn},f=new pn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new de},radius:{value:4}},vertexShader:OP,fragmentShader:FP}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new et;p.setAttribute("position",new mt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new bt(p,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ep;let g=this.type;this.render=function(w,E,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const _=n.getRenderTarget(),x=n.getActiveCubeFace(),A=n.getActiveMipmapLevel(),D=n.state;D.setBlending(ar),D.buffers.depth.getReversed()?D.buffers.color.setClear(0,0,0,0):D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const k=g!==Ni&&this.type===Ni,W=g===Ni&&this.type!==Ni;for(let Y=0,z=w.length;Y<z;Y++){const Q=w[Y],Z=Q.shadow;if(Z===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(Z.autoUpdate===!1&&Z.needsUpdate===!1)continue;r.copy(Z.mapSize);const he=Z.getFrameExtents();if(r.multiply(he),s.copy(Z.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/he.x),r.x=s.x*he.x,Z.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/he.y),r.y=s.y*he.y,Z.mapSize.y=s.y)),Z.map===null||k===!0||W===!0){const oe=this.type!==Ni?{minFilter:Yt,magFilter:Yt}:{};Z.map!==null&&Z.map.dispose(),Z.map=new Ti(r.x,r.y,oe),Z.map.texture.name=Q.name+".shadowMap",Z.camera.updateProjectionMatrix()}n.setRenderTarget(Z.map),n.clear();const me=Z.getViewportCount();for(let oe=0;oe<me;oe++){const Ee=Z.getViewport(oe);o.set(s.x*Ee.x,s.y*Ee.y,s.x*Ee.z,s.y*Ee.w),D.viewport(o),Z.updateMatrices(Q,oe),i=Z.getFrustum(),b(E,S,Z.camera,Q,this.type)}Z.isPointLightShadow!==!0&&this.type===Ni&&M(Z,S),Z.needsUpdate=!1}g=this.type,m.needsUpdate=!1,n.setRenderTarget(_,x,A)};function M(w,E){const S=e.update(v);f.defines.VSM_SAMPLES!==w.blurSamples&&(f.defines.VSM_SAMPLES=w.blurSamples,d.defines.VSM_SAMPLES=w.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new Ti(r.x,r.y)),f.uniforms.shadow_pass.value=w.map.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,n.setRenderTarget(w.mapPass),n.clear(),n.renderBufferDirect(E,null,S,f,v,null),d.uniforms.shadow_pass.value=w.mapPass.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,n.setRenderTarget(w.map),n.clear(),n.renderBufferDirect(E,null,S,d,v,null)}function y(w,E,S,_){let x=null;const A=S.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(A!==void 0)x=A;else if(x=S.isPointLight===!0?l:a,n.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0||E.map&&E.alphaTest>0||E.alphaToCoverage===!0){const D=x.uuid,k=E.uuid;let W=c[D];W===void 0&&(W={},c[D]=W);let Y=W[k];Y===void 0&&(Y=x.clone(),W[k]=Y,E.addEventListener("dispose",C)),x=Y}if(x.visible=E.visible,x.wireframe=E.wireframe,_===Ni?x.side=E.shadowSide!==null?E.shadowSide:E.side:x.side=E.shadowSide!==null?E.shadowSide:h[E.side],x.alphaMap=E.alphaMap,x.alphaTest=E.alphaToCoverage===!0?.5:E.alphaTest,x.map=E.map,x.clipShadows=E.clipShadows,x.clippingPlanes=E.clippingPlanes,x.clipIntersection=E.clipIntersection,x.displacementMap=E.displacementMap,x.displacementScale=E.displacementScale,x.displacementBias=E.displacementBias,x.wireframeLinewidth=E.wireframeLinewidth,x.linewidth=E.linewidth,S.isPointLight===!0&&x.isMeshDistanceMaterial===!0){const D=n.properties.get(x);D.light=S}return x}function b(w,E,S,_,x){if(w.visible===!1)return;if(w.layers.test(E.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&x===Ni)&&(!w.frustumCulled||i.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,w.matrixWorld);const k=e.update(w),W=w.material;if(Array.isArray(W)){const Y=k.groups;for(let z=0,Q=Y.length;z<Q;z++){const Z=Y[z],he=W[Z.materialIndex];if(he&&he.visible){const me=y(w,he,_,x);w.onBeforeShadow(n,w,E,S,k,me,Z),n.renderBufferDirect(S,null,k,me,w,Z),w.onAfterShadow(n,w,E,S,k,me,Z)}}}else if(W.visible){const Y=y(w,W,_,x);w.onBeforeShadow(n,w,E,S,k,Y,null),n.renderBufferDirect(S,null,k,Y,w,null),w.onAfterShadow(n,w,E,S,k,Y,null)}}const D=w.children;for(let k=0,W=D.length;k<W;k++)b(D[k],E,S,_,x)}function C(w){w.target.removeEventListener("dispose",C);for(const S in c){const _=c[S],x=w.target.uuid;x in _&&(_[x].dispose(),delete _[x])}}}const zP={[lu]:cu,[uu]:du,[hu]:pu,[Ps]:fu,[cu]:lu,[du]:uu,[pu]:hu,[fu]:Ps};function kP(n,e){function t(){let X=!1;const xe=new at;let we=null;const Ne=new at(0,0,0,0);return{setMask:function(Me){we!==Me&&!X&&(n.colorMask(Me,Me,Me,Me),we=Me)},setLocked:function(Me){X=Me},setClear:function(Me,ge,Ue,qe,vt){vt===!0&&(Me*=qe,ge*=qe,Ue*=qe),xe.set(Me,ge,Ue,qe),Ne.equals(xe)===!1&&(n.clearColor(Me,ge,Ue,qe),Ne.copy(xe))},reset:function(){X=!1,we=null,Ne.set(-1,0,0,0)}}}function i(){let X=!1,xe=!1,we=null,Ne=null,Me=null;return{setReversed:function(ge){if(xe!==ge){const Ue=e.get("EXT_clip_control");ge?Ue.clipControlEXT(Ue.LOWER_LEFT_EXT,Ue.ZERO_TO_ONE_EXT):Ue.clipControlEXT(Ue.LOWER_LEFT_EXT,Ue.NEGATIVE_ONE_TO_ONE_EXT),xe=ge;const qe=Me;Me=null,this.setClear(qe)}},getReversed:function(){return xe},setTest:function(ge){ge?_e(n.DEPTH_TEST):ue(n.DEPTH_TEST)},setMask:function(ge){we!==ge&&!X&&(n.depthMask(ge),we=ge)},setFunc:function(ge){if(xe&&(ge=zP[ge]),Ne!==ge){switch(ge){case lu:n.depthFunc(n.NEVER);break;case cu:n.depthFunc(n.ALWAYS);break;case uu:n.depthFunc(n.LESS);break;case Ps:n.depthFunc(n.LEQUAL);break;case hu:n.depthFunc(n.EQUAL);break;case fu:n.depthFunc(n.GEQUAL);break;case du:n.depthFunc(n.GREATER);break;case pu:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}Ne=ge}},setLocked:function(ge){X=ge},setClear:function(ge){Me!==ge&&(xe&&(ge=1-ge),n.clearDepth(ge),Me=ge)},reset:function(){X=!1,we=null,Ne=null,Me=null,xe=!1}}}function r(){let X=!1,xe=null,we=null,Ne=null,Me=null,ge=null,Ue=null,qe=null,vt=null;return{setTest:function(ut){X||(ut?_e(n.STENCIL_TEST):ue(n.STENCIL_TEST))},setMask:function(ut){xe!==ut&&!X&&(n.stencilMask(ut),xe=ut)},setFunc:function(ut,Nn,Ci){(we!==ut||Ne!==Nn||Me!==Ci)&&(n.stencilFunc(ut,Nn,Ci),we=ut,Ne=Nn,Me=Ci)},setOp:function(ut,Nn,Ci){(ge!==ut||Ue!==Nn||qe!==Ci)&&(n.stencilOp(ut,Nn,Ci),ge=ut,Ue=Nn,qe=Ci)},setLocked:function(ut){X=ut},setClear:function(ut){vt!==ut&&(n.clearStencil(ut),vt=ut)},reset:function(){X=!1,xe=null,we=null,Ne=null,Me=null,ge=null,Ue=null,qe=null,vt=null}}}const s=new t,o=new i,a=new r,l=new WeakMap,c=new WeakMap;let u={},h={},f=new WeakMap,d=[],p=null,v=!1,m=null,g=null,M=null,y=null,b=null,C=null,w=null,E=new Ae(0,0,0),S=0,_=!1,x=null,A=null,D=null,k=null,W=null;const Y=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,Q=0;const Z=n.getParameter(n.VERSION);Z.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(Z)[1]),z=Q>=1):Z.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),z=Q>=2);let he=null,me={};const oe=n.getParameter(n.SCISSOR_BOX),Ee=n.getParameter(n.VIEWPORT),Ve=new at().fromArray(oe),ze=new at().fromArray(Ee);function ae(X,xe,we,Ne){const Me=new Uint8Array(4),ge=n.createTexture();n.bindTexture(X,ge),n.texParameteri(X,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(X,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let Ue=0;Ue<we;Ue++)X===n.TEXTURE_3D||X===n.TEXTURE_2D_ARRAY?n.texImage3D(xe,0,n.RGBA,1,1,Ne,0,n.RGBA,n.UNSIGNED_BYTE,Me):n.texImage2D(xe+Ue,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,Me);return ge}const ye={};ye[n.TEXTURE_2D]=ae(n.TEXTURE_2D,n.TEXTURE_2D,1),ye[n.TEXTURE_CUBE_MAP]=ae(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),ye[n.TEXTURE_2D_ARRAY]=ae(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),ye[n.TEXTURE_3D]=ae(n.TEXTURE_3D,n.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),_e(n.DEPTH_TEST),o.setFunc(Ps),G(!1),H(Id),_e(n.CULL_FACE),O(ar);function _e(X){u[X]!==!0&&(n.enable(X),u[X]=!0)}function ue(X){u[X]!==!1&&(n.disable(X),u[X]=!1)}function I(X,xe){return h[X]!==xe?(n.bindFramebuffer(X,xe),h[X]=xe,X===n.DRAW_FRAMEBUFFER&&(h[n.FRAMEBUFFER]=xe),X===n.FRAMEBUFFER&&(h[n.DRAW_FRAMEBUFFER]=xe),!0):!1}function F(X,xe){let we=d,Ne=!1;if(X){we=f.get(xe),we===void 0&&(we=[],f.set(xe,we));const Me=X.textures;if(we.length!==Me.length||we[0]!==n.COLOR_ATTACHMENT0){for(let ge=0,Ue=Me.length;ge<Ue;ge++)we[ge]=n.COLOR_ATTACHMENT0+ge;we.length=Me.length,Ne=!0}}else we[0]!==n.BACK&&(we[0]=n.BACK,Ne=!0);Ne&&n.drawBuffers(we)}function $(X){return p!==X?(n.useProgram(X),p=X,!0):!1}const P={[Pr]:n.FUNC_ADD,[rx]:n.FUNC_SUBTRACT,[sx]:n.FUNC_REVERSE_SUBTRACT};P[ox]=n.MIN,P[ax]=n.MAX;const T={[lx]:n.ZERO,[cx]:n.ONE,[ux]:n.SRC_COLOR,[ou]:n.SRC_ALPHA,[gx]:n.SRC_ALPHA_SATURATE,[px]:n.DST_COLOR,[fx]:n.DST_ALPHA,[hx]:n.ONE_MINUS_SRC_COLOR,[au]:n.ONE_MINUS_SRC_ALPHA,[mx]:n.ONE_MINUS_DST_COLOR,[dx]:n.ONE_MINUS_DST_ALPHA,[vx]:n.CONSTANT_COLOR,[_x]:n.ONE_MINUS_CONSTANT_COLOR,[xx]:n.CONSTANT_ALPHA,[yx]:n.ONE_MINUS_CONSTANT_ALPHA};function O(X,xe,we,Ne,Me,ge,Ue,qe,vt,ut){if(X===ar){v===!0&&(ue(n.BLEND),v=!1);return}if(v===!1&&(_e(n.BLEND),v=!0),X!==ix){if(X!==m||ut!==_){if((g!==Pr||b!==Pr)&&(n.blendEquation(n.FUNC_ADD),g=Pr,b=Pr),ut)switch(X){case Ss:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case su:n.blendFunc(n.ONE,n.ONE);break;case Pd:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Ld:n.blendFuncSeparate(n.DST_COLOR,n.ONE_MINUS_SRC_ALPHA,n.ZERO,n.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}else switch(X){case Ss:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case su:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE,n.ONE,n.ONE);break;case Pd:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ld:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}M=null,y=null,C=null,w=null,E.set(0,0,0),S=0,m=X,_=ut}return}Me=Me||xe,ge=ge||we,Ue=Ue||Ne,(xe!==g||Me!==b)&&(n.blendEquationSeparate(P[xe],P[Me]),g=xe,b=Me),(we!==M||Ne!==y||ge!==C||Ue!==w)&&(n.blendFuncSeparate(T[we],T[Ne],T[ge],T[Ue]),M=we,y=Ne,C=ge,w=Ue),(qe.equals(E)===!1||vt!==S)&&(n.blendColor(qe.r,qe.g,qe.b,vt),E.copy(qe),S=vt),m=X,_=!1}function B(X,xe){X.side===Hn?ue(n.CULL_FACE):_e(n.CULL_FACE);let we=X.side===on;xe&&(we=!we),G(we),X.blending===Ss&&X.transparent===!1?O(ar):O(X.blending,X.blendEquation,X.blendSrc,X.blendDst,X.blendEquationAlpha,X.blendSrcAlpha,X.blendDstAlpha,X.blendColor,X.blendAlpha,X.premultipliedAlpha),o.setFunc(X.depthFunc),o.setTest(X.depthTest),o.setMask(X.depthWrite),s.setMask(X.colorWrite);const Ne=X.stencilWrite;a.setTest(Ne),Ne&&(a.setMask(X.stencilWriteMask),a.setFunc(X.stencilFunc,X.stencilRef,X.stencilFuncMask),a.setOp(X.stencilFail,X.stencilZFail,X.stencilZPass)),q(X.polygonOffset,X.polygonOffsetFactor,X.polygonOffsetUnits),X.alphaToCoverage===!0?_e(n.SAMPLE_ALPHA_TO_COVERAGE):ue(n.SAMPLE_ALPHA_TO_COVERAGE)}function G(X){x!==X&&(X?n.frontFace(n.CW):n.frontFace(n.CCW),x=X)}function H(X){X!==tx?(_e(n.CULL_FACE),X!==A&&(X===Id?n.cullFace(n.BACK):X===nx?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):ue(n.CULL_FACE),A=X}function K(X){X!==D&&(z&&n.lineWidth(X),D=X)}function q(X,xe,we){X?(_e(n.POLYGON_OFFSET_FILL),(k!==xe||W!==we)&&(n.polygonOffset(xe,we),k=xe,W=we)):ue(n.POLYGON_OFFSET_FILL)}function J(X){X?_e(n.SCISSOR_TEST):ue(n.SCISSOR_TEST)}function ie(X){X===void 0&&(X=n.TEXTURE0+Y-1),he!==X&&(n.activeTexture(X),he=X)}function pe(X,xe,we){we===void 0&&(he===null?we=n.TEXTURE0+Y-1:we=he);let Ne=me[we];Ne===void 0&&(Ne={type:void 0,texture:void 0},me[we]=Ne),(Ne.type!==X||Ne.texture!==xe)&&(he!==we&&(n.activeTexture(we),he=we),n.bindTexture(X,xe||ye[X]),Ne.type=X,Ne.texture=xe)}function L(){const X=me[he];X!==void 0&&X.type!==void 0&&(n.bindTexture(X.type,null),X.type=void 0,X.texture=void 0)}function R(){try{n.compressedTexImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function j(){try{n.compressedTexImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function te(){try{n.texSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function fe(){try{n.texSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function re(){try{n.compressedTexSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Ce(){try{n.compressedTexSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ve(){try{n.texStorage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Pe(){try{n.texStorage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Le(){try{n.texImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function be(){try{n.texImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Ie(X){Ve.equals(X)===!1&&(n.scissor(X.x,X.y,X.z,X.w),Ve.copy(X))}function Oe(X){ze.equals(X)===!1&&(n.viewport(X.x,X.y,X.z,X.w),ze.copy(X))}function V(X,xe){let we=c.get(xe);we===void 0&&(we=new WeakMap,c.set(xe,we));let Ne=we.get(X);Ne===void 0&&(Ne=n.getUniformBlockIndex(xe,X.name),we.set(X,Ne))}function se(X,xe){const Ne=c.get(xe).get(X);l.get(xe)!==Ne&&(n.uniformBlockBinding(xe,Ne,X.__bindingPointIndex),l.set(xe,Ne))}function Se(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),o.setReversed(!1),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),u={},he=null,me={},h={},f=new WeakMap,d=[],p=null,v=!1,m=null,g=null,M=null,y=null,b=null,C=null,w=null,E=new Ae(0,0,0),S=0,_=!1,x=null,A=null,D=null,k=null,W=null,Ve.set(0,0,n.canvas.width,n.canvas.height),ze.set(0,0,n.canvas.width,n.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:_e,disable:ue,bindFramebuffer:I,drawBuffers:F,useProgram:$,setBlending:O,setMaterial:B,setFlipSided:G,setCullFace:H,setLineWidth:K,setPolygonOffset:q,setScissorTest:J,activeTexture:ie,bindTexture:pe,unbindTexture:L,compressedTexImage2D:R,compressedTexImage3D:j,texImage2D:Le,texImage3D:be,updateUBOMapping:V,uniformBlockBinding:se,texStorage2D:ve,texStorage3D:Pe,texSubImage2D:te,texSubImage3D:fe,compressedTexSubImage2D:re,compressedTexSubImage3D:Ce,scissor:Ie,viewport:Oe,reset:Se}}function VP(n,e,t,i,r,s,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new de,u=new WeakMap;let h;const f=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(L,R){return d?new OffscreenCanvas(L,R):il("canvas")}function v(L,R,j){let te=1;const fe=pe(L);if((fe.width>j||fe.height>j)&&(te=j/Math.max(fe.width,fe.height)),te<1)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap||typeof VideoFrame<"u"&&L instanceof VideoFrame){const re=Math.floor(te*fe.width),Ce=Math.floor(te*fe.height);h===void 0&&(h=p(re,Ce));const ve=R?p(re,Ce):h;return ve.width=re,ve.height=Ce,ve.getContext("2d").drawImage(L,0,0,re,Ce),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+fe.width+"x"+fe.height+") to ("+re+"x"+Ce+")."),ve}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+fe.width+"x"+fe.height+")."),L;return L}function m(L){return L.generateMipmaps}function g(L){n.generateMipmap(L)}function M(L){return L.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:L.isWebGL3DRenderTarget?n.TEXTURE_3D:L.isWebGLArrayRenderTarget||L.isCompressedArrayTexture?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D}function y(L,R,j,te,fe=!1){if(L!==null){if(n[L]!==void 0)return n[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let re=R;if(R===n.RED&&(j===n.FLOAT&&(re=n.R32F),j===n.HALF_FLOAT&&(re=n.R16F),j===n.UNSIGNED_BYTE&&(re=n.R8)),R===n.RED_INTEGER&&(j===n.UNSIGNED_BYTE&&(re=n.R8UI),j===n.UNSIGNED_SHORT&&(re=n.R16UI),j===n.UNSIGNED_INT&&(re=n.R32UI),j===n.BYTE&&(re=n.R8I),j===n.SHORT&&(re=n.R16I),j===n.INT&&(re=n.R32I)),R===n.RG&&(j===n.FLOAT&&(re=n.RG32F),j===n.HALF_FLOAT&&(re=n.RG16F),j===n.UNSIGNED_BYTE&&(re=n.RG8)),R===n.RG_INTEGER&&(j===n.UNSIGNED_BYTE&&(re=n.RG8UI),j===n.UNSIGNED_SHORT&&(re=n.RG16UI),j===n.UNSIGNED_INT&&(re=n.RG32UI),j===n.BYTE&&(re=n.RG8I),j===n.SHORT&&(re=n.RG16I),j===n.INT&&(re=n.RG32I)),R===n.RGB_INTEGER&&(j===n.UNSIGNED_BYTE&&(re=n.RGB8UI),j===n.UNSIGNED_SHORT&&(re=n.RGB16UI),j===n.UNSIGNED_INT&&(re=n.RGB32UI),j===n.BYTE&&(re=n.RGB8I),j===n.SHORT&&(re=n.RGB16I),j===n.INT&&(re=n.RGB32I)),R===n.RGBA_INTEGER&&(j===n.UNSIGNED_BYTE&&(re=n.RGBA8UI),j===n.UNSIGNED_SHORT&&(re=n.RGBA16UI),j===n.UNSIGNED_INT&&(re=n.RGBA32UI),j===n.BYTE&&(re=n.RGBA8I),j===n.SHORT&&(re=n.RGBA16I),j===n.INT&&(re=n.RGBA32I)),R===n.RGB&&j===n.UNSIGNED_INT_5_9_9_9_REV&&(re=n.RGB9_E5),R===n.RGBA){const Ce=fe?tl:pt.getTransfer(te);j===n.FLOAT&&(re=n.RGBA32F),j===n.HALF_FLOAT&&(re=n.RGBA16F),j===n.UNSIGNED_BYTE&&(re=Ce===wt?n.SRGB8_ALPHA8:n.RGBA8),j===n.UNSIGNED_SHORT_4_4_4_4&&(re=n.RGBA4),j===n.UNSIGNED_SHORT_5_5_5_1&&(re=n.RGB5_A1)}return(re===n.R16F||re===n.R32F||re===n.RG16F||re===n.RG32F||re===n.RGBA16F||re===n.RGBA32F)&&e.get("EXT_color_buffer_float"),re}function b(L,R){let j;return L?R===null||R===gr||R===Do?j=n.DEPTH24_STENCIL8:R===Gn?j=n.DEPTH32F_STENCIL8:R===Lo&&(j=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===gr||R===Do?j=n.DEPTH_COMPONENT24:R===Gn?j=n.DEPTH_COMPONENT32F:R===Lo&&(j=n.DEPTH_COMPONENT16),j}function C(L,R){return m(L)===!0||L.isFramebufferTexture&&L.minFilter!==Yt&&L.minFilter!==qt?Math.log2(Math.max(R.width,R.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?R.mipmaps.length:1}function w(L){const R=L.target;R.removeEventListener("dispose",w),S(R),R.isVideoTexture&&u.delete(R)}function E(L){const R=L.target;R.removeEventListener("dispose",E),x(R)}function S(L){const R=i.get(L);if(R.__webglInit===void 0)return;const j=L.source,te=f.get(j);if(te){const fe=te[R.__cacheKey];fe.usedTimes--,fe.usedTimes===0&&_(L),Object.keys(te).length===0&&f.delete(j)}i.remove(L)}function _(L){const R=i.get(L);n.deleteTexture(R.__webglTexture);const j=L.source,te=f.get(j);delete te[R.__cacheKey],o.memory.textures--}function x(L){const R=i.get(L);if(L.depthTexture&&(L.depthTexture.dispose(),i.remove(L.depthTexture)),L.isWebGLCubeRenderTarget)for(let te=0;te<6;te++){if(Array.isArray(R.__webglFramebuffer[te]))for(let fe=0;fe<R.__webglFramebuffer[te].length;fe++)n.deleteFramebuffer(R.__webglFramebuffer[te][fe]);else n.deleteFramebuffer(R.__webglFramebuffer[te]);R.__webglDepthbuffer&&n.deleteRenderbuffer(R.__webglDepthbuffer[te])}else{if(Array.isArray(R.__webglFramebuffer))for(let te=0;te<R.__webglFramebuffer.length;te++)n.deleteFramebuffer(R.__webglFramebuffer[te]);else n.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&n.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&n.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let te=0;te<R.__webglColorRenderbuffer.length;te++)R.__webglColorRenderbuffer[te]&&n.deleteRenderbuffer(R.__webglColorRenderbuffer[te]);R.__webglDepthRenderbuffer&&n.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const j=L.textures;for(let te=0,fe=j.length;te<fe;te++){const re=i.get(j[te]);re.__webglTexture&&(n.deleteTexture(re.__webglTexture),o.memory.textures--),i.remove(j[te])}i.remove(L)}let A=0;function D(){A=0}function k(){const L=A;return L>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+r.maxTextures),A+=1,L}function W(L){const R=[];return R.push(L.wrapS),R.push(L.wrapT),R.push(L.wrapR||0),R.push(L.magFilter),R.push(L.minFilter),R.push(L.anisotropy),R.push(L.internalFormat),R.push(L.format),R.push(L.type),R.push(L.generateMipmaps),R.push(L.premultiplyAlpha),R.push(L.flipY),R.push(L.unpackAlignment),R.push(L.colorSpace),R.join()}function Y(L,R){const j=i.get(L);if(L.isVideoTexture&&J(L),L.isRenderTargetTexture===!1&&L.isExternalTexture!==!0&&L.version>0&&j.__version!==L.version){const te=L.image;if(te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ye(j,L,R);return}}else L.isExternalTexture&&(j.__webglTexture=L.sourceTexture?L.sourceTexture:null);t.bindTexture(n.TEXTURE_2D,j.__webglTexture,n.TEXTURE0+R)}function z(L,R){const j=i.get(L);if(L.isRenderTargetTexture===!1&&L.version>0&&j.__version!==L.version){ye(j,L,R);return}t.bindTexture(n.TEXTURE_2D_ARRAY,j.__webglTexture,n.TEXTURE0+R)}function Q(L,R){const j=i.get(L);if(L.isRenderTargetTexture===!1&&L.version>0&&j.__version!==L.version){ye(j,L,R);return}t.bindTexture(n.TEXTURE_3D,j.__webglTexture,n.TEXTURE0+R)}function Z(L,R){const j=i.get(L);if(L.version>0&&j.__version!==L.version){_e(j,L,R);return}t.bindTexture(n.TEXTURE_CUBE_MAP,j.__webglTexture,n.TEXTURE0+R)}const he={[Io]:n.REPEAT,[fn]:n.CLAMP_TO_EDGE,[Po]:n.MIRRORED_REPEAT},me={[Yt]:n.NEAREST,[fh]:n.NEAREST_MIPMAP_NEAREST,[ms]:n.NEAREST_MIPMAP_LINEAR,[qt]:n.LINEAR,[To]:n.LINEAR_MIPMAP_NEAREST,[_i]:n.LINEAR_MIPMAP_LINEAR},oe={[Ox]:n.NEVER,[Hx]:n.ALWAYS,[Fx]:n.LESS,[Op]:n.LEQUAL,[Bx]:n.EQUAL,[Vx]:n.GEQUAL,[zx]:n.GREATER,[kx]:n.NOTEQUAL};function Ee(L,R){if(R.type===Gn&&e.has("OES_texture_float_linear")===!1&&(R.magFilter===qt||R.magFilter===To||R.magFilter===ms||R.magFilter===_i||R.minFilter===qt||R.minFilter===To||R.minFilter===ms||R.minFilter===_i)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(L,n.TEXTURE_WRAP_S,he[R.wrapS]),n.texParameteri(L,n.TEXTURE_WRAP_T,he[R.wrapT]),(L===n.TEXTURE_3D||L===n.TEXTURE_2D_ARRAY)&&n.texParameteri(L,n.TEXTURE_WRAP_R,he[R.wrapR]),n.texParameteri(L,n.TEXTURE_MAG_FILTER,me[R.magFilter]),n.texParameteri(L,n.TEXTURE_MIN_FILTER,me[R.minFilter]),R.compareFunction&&(n.texParameteri(L,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(L,n.TEXTURE_COMPARE_FUNC,oe[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Yt||R.minFilter!==ms&&R.minFilter!==_i||R.type===Gn&&e.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||i.get(R).__currentAnisotropy){const j=e.get("EXT_texture_filter_anisotropic");n.texParameterf(L,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,r.getMaxAnisotropy())),i.get(R).__currentAnisotropy=R.anisotropy}}}function Ve(L,R){let j=!1;L.__webglInit===void 0&&(L.__webglInit=!0,R.addEventListener("dispose",w));const te=R.source;let fe=f.get(te);fe===void 0&&(fe={},f.set(te,fe));const re=W(R);if(re!==L.__cacheKey){fe[re]===void 0&&(fe[re]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,j=!0),fe[re].usedTimes++;const Ce=fe[L.__cacheKey];Ce!==void 0&&(fe[L.__cacheKey].usedTimes--,Ce.usedTimes===0&&_(R)),L.__cacheKey=re,L.__webglTexture=fe[re].texture}return j}function ze(L,R,j){return Math.floor(Math.floor(L/j)/R)}function ae(L,R,j,te){const re=L.updateRanges;if(re.length===0)t.texSubImage2D(n.TEXTURE_2D,0,0,0,R.width,R.height,j,te,R.data);else{re.sort((be,Ie)=>be.start-Ie.start);let Ce=0;for(let be=1;be<re.length;be++){const Ie=re[Ce],Oe=re[be],V=Ie.start+Ie.count,se=ze(Oe.start,R.width,4),Se=ze(Ie.start,R.width,4);Oe.start<=V+1&&se===Se&&ze(Oe.start+Oe.count-1,R.width,4)===se?Ie.count=Math.max(Ie.count,Oe.start+Oe.count-Ie.start):(++Ce,re[Ce]=Oe)}re.length=Ce+1;const ve=n.getParameter(n.UNPACK_ROW_LENGTH),Pe=n.getParameter(n.UNPACK_SKIP_PIXELS),Le=n.getParameter(n.UNPACK_SKIP_ROWS);n.pixelStorei(n.UNPACK_ROW_LENGTH,R.width);for(let be=0,Ie=re.length;be<Ie;be++){const Oe=re[be],V=Math.floor(Oe.start/4),se=Math.ceil(Oe.count/4),Se=V%R.width,X=Math.floor(V/R.width),xe=se,we=1;n.pixelStorei(n.UNPACK_SKIP_PIXELS,Se),n.pixelStorei(n.UNPACK_SKIP_ROWS,X),t.texSubImage2D(n.TEXTURE_2D,0,Se,X,xe,we,j,te,R.data)}L.clearUpdateRanges(),n.pixelStorei(n.UNPACK_ROW_LENGTH,ve),n.pixelStorei(n.UNPACK_SKIP_PIXELS,Pe),n.pixelStorei(n.UNPACK_SKIP_ROWS,Le)}}function ye(L,R,j){let te=n.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(te=n.TEXTURE_2D_ARRAY),R.isData3DTexture&&(te=n.TEXTURE_3D);const fe=Ve(L,R),re=R.source;t.bindTexture(te,L.__webglTexture,n.TEXTURE0+j);const Ce=i.get(re);if(re.version!==Ce.__version||fe===!0){t.activeTexture(n.TEXTURE0+j);const ve=pt.getPrimaries(pt.workingColorSpace),Pe=R.colorSpace===sr?null:pt.getPrimaries(R.colorSpace),Le=R.colorSpace===sr||ve===Pe?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,R.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,R.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Le);let be=v(R.image,!1,r.maxTextureSize);be=ie(R,be);const Ie=s.convert(R.format,R.colorSpace),Oe=s.convert(R.type);let V=y(R.internalFormat,Ie,Oe,R.colorSpace,R.isVideoTexture);Ee(te,R);let se;const Se=R.mipmaps,X=R.isVideoTexture!==!0,xe=Ce.__version===void 0||fe===!0,we=re.dataReady,Ne=C(R,be);if(R.isDepthTexture)V=b(R.format===No,R.type),xe&&(X?t.texStorage2D(n.TEXTURE_2D,1,V,be.width,be.height):t.texImage2D(n.TEXTURE_2D,0,V,be.width,be.height,0,Ie,Oe,null));else if(R.isDataTexture)if(Se.length>0){X&&xe&&t.texStorage2D(n.TEXTURE_2D,Ne,V,Se[0].width,Se[0].height);for(let Me=0,ge=Se.length;Me<ge;Me++)se=Se[Me],X?we&&t.texSubImage2D(n.TEXTURE_2D,Me,0,0,se.width,se.height,Ie,Oe,se.data):t.texImage2D(n.TEXTURE_2D,Me,V,se.width,se.height,0,Ie,Oe,se.data);R.generateMipmaps=!1}else X?(xe&&t.texStorage2D(n.TEXTURE_2D,Ne,V,be.width,be.height),we&&ae(R,be,Ie,Oe)):t.texImage2D(n.TEXTURE_2D,0,V,be.width,be.height,0,Ie,Oe,be.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){X&&xe&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ne,V,Se[0].width,Se[0].height,be.depth);for(let Me=0,ge=Se.length;Me<ge;Me++)if(se=Se[Me],R.format!==sn)if(Ie!==null)if(X){if(we)if(R.layerUpdates.size>0){const Ue=Gd(se.width,se.height,R.format,R.type);for(const qe of R.layerUpdates){const vt=se.data.subarray(qe*Ue/se.data.BYTES_PER_ELEMENT,(qe+1)*Ue/se.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Me,0,0,qe,se.width,se.height,1,Ie,vt)}R.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Me,0,0,0,se.width,se.height,be.depth,Ie,se.data)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,Me,V,se.width,se.height,be.depth,0,se.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else X?we&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,Me,0,0,0,se.width,se.height,be.depth,Ie,Oe,se.data):t.texImage3D(n.TEXTURE_2D_ARRAY,Me,V,se.width,se.height,be.depth,0,Ie,Oe,se.data)}else{X&&xe&&t.texStorage2D(n.TEXTURE_2D,Ne,V,Se[0].width,Se[0].height);for(let Me=0,ge=Se.length;Me<ge;Me++)se=Se[Me],R.format!==sn?Ie!==null?X?we&&t.compressedTexSubImage2D(n.TEXTURE_2D,Me,0,0,se.width,se.height,Ie,se.data):t.compressedTexImage2D(n.TEXTURE_2D,Me,V,se.width,se.height,0,se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):X?we&&t.texSubImage2D(n.TEXTURE_2D,Me,0,0,se.width,se.height,Ie,Oe,se.data):t.texImage2D(n.TEXTURE_2D,Me,V,se.width,se.height,0,Ie,Oe,se.data)}else if(R.isDataArrayTexture)if(X){if(xe&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ne,V,be.width,be.height,be.depth),we)if(R.layerUpdates.size>0){const Me=Gd(be.width,be.height,R.format,R.type);for(const ge of R.layerUpdates){const Ue=be.data.subarray(ge*Me/be.data.BYTES_PER_ELEMENT,(ge+1)*Me/be.data.BYTES_PER_ELEMENT);t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,ge,be.width,be.height,1,Ie,Oe,Ue)}R.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,be.width,be.height,be.depth,Ie,Oe,be.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,V,be.width,be.height,be.depth,0,Ie,Oe,be.data);else if(R.isData3DTexture)X?(xe&&t.texStorage3D(n.TEXTURE_3D,Ne,V,be.width,be.height,be.depth),we&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,be.width,be.height,be.depth,Ie,Oe,be.data)):t.texImage3D(n.TEXTURE_3D,0,V,be.width,be.height,be.depth,0,Ie,Oe,be.data);else if(R.isFramebufferTexture){if(xe)if(X)t.texStorage2D(n.TEXTURE_2D,Ne,V,be.width,be.height);else{let Me=be.width,ge=be.height;for(let Ue=0;Ue<Ne;Ue++)t.texImage2D(n.TEXTURE_2D,Ue,V,Me,ge,0,Ie,Oe,null),Me>>=1,ge>>=1}}else if(Se.length>0){if(X&&xe){const Me=pe(Se[0]);t.texStorage2D(n.TEXTURE_2D,Ne,V,Me.width,Me.height)}for(let Me=0,ge=Se.length;Me<ge;Me++)se=Se[Me],X?we&&t.texSubImage2D(n.TEXTURE_2D,Me,0,0,Ie,Oe,se):t.texImage2D(n.TEXTURE_2D,Me,V,Ie,Oe,se);R.generateMipmaps=!1}else if(X){if(xe){const Me=pe(be);t.texStorage2D(n.TEXTURE_2D,Ne,V,Me.width,Me.height)}we&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Ie,Oe,be)}else t.texImage2D(n.TEXTURE_2D,0,V,Ie,Oe,be);m(R)&&g(te),Ce.__version=re.version,R.onUpdate&&R.onUpdate(R)}L.__version=R.version}function _e(L,R,j){if(R.image.length!==6)return;const te=Ve(L,R),fe=R.source;t.bindTexture(n.TEXTURE_CUBE_MAP,L.__webglTexture,n.TEXTURE0+j);const re=i.get(fe);if(fe.version!==re.__version||te===!0){t.activeTexture(n.TEXTURE0+j);const Ce=pt.getPrimaries(pt.workingColorSpace),ve=R.colorSpace===sr?null:pt.getPrimaries(R.colorSpace),Pe=R.colorSpace===sr||Ce===ve?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,R.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,R.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Pe);const Le=R.isCompressedTexture||R.image[0].isCompressedTexture,be=R.image[0]&&R.image[0].isDataTexture,Ie=[];for(let ge=0;ge<6;ge++)!Le&&!be?Ie[ge]=v(R.image[ge],!0,r.maxCubemapSize):Ie[ge]=be?R.image[ge].image:R.image[ge],Ie[ge]=ie(R,Ie[ge]);const Oe=Ie[0],V=s.convert(R.format,R.colorSpace),se=s.convert(R.type),Se=y(R.internalFormat,V,se,R.colorSpace),X=R.isVideoTexture!==!0,xe=re.__version===void 0||te===!0,we=fe.dataReady;let Ne=C(R,Oe);Ee(n.TEXTURE_CUBE_MAP,R);let Me;if(Le){X&&xe&&t.texStorage2D(n.TEXTURE_CUBE_MAP,Ne,Se,Oe.width,Oe.height);for(let ge=0;ge<6;ge++){Me=Ie[ge].mipmaps;for(let Ue=0;Ue<Me.length;Ue++){const qe=Me[Ue];R.format!==sn?V!==null?X?we&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue,0,0,qe.width,qe.height,V,qe.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue,Se,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):X?we&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue,0,0,qe.width,qe.height,V,se,qe.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue,Se,qe.width,qe.height,0,V,se,qe.data)}}}else{if(Me=R.mipmaps,X&&xe){Me.length>0&&Ne++;const ge=pe(Ie[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,Ne,Se,ge.width,ge.height)}for(let ge=0;ge<6;ge++)if(be){X?we&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,0,0,Ie[ge].width,Ie[ge].height,V,se,Ie[ge].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,Se,Ie[ge].width,Ie[ge].height,0,V,se,Ie[ge].data);for(let Ue=0;Ue<Me.length;Ue++){const vt=Me[Ue].image[ge].image;X?we&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue+1,0,0,vt.width,vt.height,V,se,vt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue+1,Se,vt.width,vt.height,0,V,se,vt.data)}}else{X?we&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,0,0,V,se,Ie[ge]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0,Se,V,se,Ie[ge]);for(let Ue=0;Ue<Me.length;Ue++){const qe=Me[Ue];X?we&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue+1,0,0,V,se,qe.image[ge]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Ue+1,Se,V,se,qe.image[ge])}}}m(R)&&g(n.TEXTURE_CUBE_MAP),re.__version=fe.version,R.onUpdate&&R.onUpdate(R)}L.__version=R.version}function ue(L,R,j,te,fe,re){const Ce=s.convert(j.format,j.colorSpace),ve=s.convert(j.type),Pe=y(j.internalFormat,Ce,ve,j.colorSpace),Le=i.get(R),be=i.get(j);if(be.__renderTarget=R,!Le.__hasExternalTextures){const Ie=Math.max(1,R.width>>re),Oe=Math.max(1,R.height>>re);fe===n.TEXTURE_3D||fe===n.TEXTURE_2D_ARRAY?t.texImage3D(fe,re,Pe,Ie,Oe,R.depth,0,Ce,ve,null):t.texImage2D(fe,re,Pe,Ie,Oe,0,Ce,ve,null)}t.bindFramebuffer(n.FRAMEBUFFER,L),q(R)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,te,fe,be.__webglTexture,0,K(R)):(fe===n.TEXTURE_2D||fe>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&fe<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,te,fe,be.__webglTexture,re),t.bindFramebuffer(n.FRAMEBUFFER,null)}function I(L,R,j){if(n.bindRenderbuffer(n.RENDERBUFFER,L),R.depthBuffer){const te=R.depthTexture,fe=te&&te.isDepthTexture?te.type:null,re=b(R.stencilBuffer,fe),Ce=R.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,ve=K(R);q(R)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,ve,re,R.width,R.height):j?n.renderbufferStorageMultisample(n.RENDERBUFFER,ve,re,R.width,R.height):n.renderbufferStorage(n.RENDERBUFFER,re,R.width,R.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,Ce,n.RENDERBUFFER,L)}else{const te=R.textures;for(let fe=0;fe<te.length;fe++){const re=te[fe],Ce=s.convert(re.format,re.colorSpace),ve=s.convert(re.type),Pe=y(re.internalFormat,Ce,ve,re.colorSpace),Le=K(R);j&&q(R)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Le,Pe,R.width,R.height):q(R)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Le,Pe,R.width,R.height):n.renderbufferStorage(n.RENDERBUFFER,Pe,R.width,R.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function F(L,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,L),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const te=i.get(R.depthTexture);te.__renderTarget=R,(!te.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),Y(R.depthTexture,0);const fe=te.__webglTexture,re=K(R);if(R.depthTexture.format===Uo)q(R)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,fe,0,re):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,fe,0);else if(R.depthTexture.format===No)q(R)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,fe,0,re):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,fe,0);else throw new Error("Unknown depthTexture format")}function $(L){const R=i.get(L),j=L.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==L.depthTexture){const te=L.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),te){const fe=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,te.removeEventListener("dispose",fe)};te.addEventListener("dispose",fe),R.__depthDisposeCallback=fe}R.__boundDepthTexture=te}if(L.depthTexture&&!R.__autoAllocateDepthBuffer){if(j)throw new Error("target.depthTexture not supported in Cube render targets");const te=L.texture.mipmaps;te&&te.length>0?F(R.__webglFramebuffer[0],L):F(R.__webglFramebuffer,L)}else if(j){R.__webglDepthbuffer=[];for(let te=0;te<6;te++)if(t.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer[te]),R.__webglDepthbuffer[te]===void 0)R.__webglDepthbuffer[te]=n.createRenderbuffer(),I(R.__webglDepthbuffer[te],L,!1);else{const fe=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,re=R.__webglDepthbuffer[te];n.bindRenderbuffer(n.RENDERBUFFER,re),n.framebufferRenderbuffer(n.FRAMEBUFFER,fe,n.RENDERBUFFER,re)}}else{const te=L.texture.mipmaps;if(te&&te.length>0?t.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer[0]):t.bindFramebuffer(n.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=n.createRenderbuffer(),I(R.__webglDepthbuffer,L,!1);else{const fe=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,re=R.__webglDepthbuffer;n.bindRenderbuffer(n.RENDERBUFFER,re),n.framebufferRenderbuffer(n.FRAMEBUFFER,fe,n.RENDERBUFFER,re)}}t.bindFramebuffer(n.FRAMEBUFFER,null)}function P(L,R,j){const te=i.get(L);R!==void 0&&ue(te.__webglFramebuffer,L,L.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),j!==void 0&&$(L)}function T(L){const R=L.texture,j=i.get(L),te=i.get(R);L.addEventListener("dispose",E);const fe=L.textures,re=L.isWebGLCubeRenderTarget===!0,Ce=fe.length>1;if(Ce||(te.__webglTexture===void 0&&(te.__webglTexture=n.createTexture()),te.__version=R.version,o.memory.textures++),re){j.__webglFramebuffer=[];for(let ve=0;ve<6;ve++)if(R.mipmaps&&R.mipmaps.length>0){j.__webglFramebuffer[ve]=[];for(let Pe=0;Pe<R.mipmaps.length;Pe++)j.__webglFramebuffer[ve][Pe]=n.createFramebuffer()}else j.__webglFramebuffer[ve]=n.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){j.__webglFramebuffer=[];for(let ve=0;ve<R.mipmaps.length;ve++)j.__webglFramebuffer[ve]=n.createFramebuffer()}else j.__webglFramebuffer=n.createFramebuffer();if(Ce)for(let ve=0,Pe=fe.length;ve<Pe;ve++){const Le=i.get(fe[ve]);Le.__webglTexture===void 0&&(Le.__webglTexture=n.createTexture(),o.memory.textures++)}if(L.samples>0&&q(L)===!1){j.__webglMultisampledFramebuffer=n.createFramebuffer(),j.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,j.__webglMultisampledFramebuffer);for(let ve=0;ve<fe.length;ve++){const Pe=fe[ve];j.__webglColorRenderbuffer[ve]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,j.__webglColorRenderbuffer[ve]);const Le=s.convert(Pe.format,Pe.colorSpace),be=s.convert(Pe.type),Ie=y(Pe.internalFormat,Le,be,Pe.colorSpace,L.isXRRenderTarget===!0),Oe=K(L);n.renderbufferStorageMultisample(n.RENDERBUFFER,Oe,Ie,L.width,L.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+ve,n.RENDERBUFFER,j.__webglColorRenderbuffer[ve])}n.bindRenderbuffer(n.RENDERBUFFER,null),L.depthBuffer&&(j.__webglDepthRenderbuffer=n.createRenderbuffer(),I(j.__webglDepthRenderbuffer,L,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(re){t.bindTexture(n.TEXTURE_CUBE_MAP,te.__webglTexture),Ee(n.TEXTURE_CUBE_MAP,R);for(let ve=0;ve<6;ve++)if(R.mipmaps&&R.mipmaps.length>0)for(let Pe=0;Pe<R.mipmaps.length;Pe++)ue(j.__webglFramebuffer[ve][Pe],L,R,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Pe);else ue(j.__webglFramebuffer[ve],L,R,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0);m(R)&&g(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ce){for(let ve=0,Pe=fe.length;ve<Pe;ve++){const Le=fe[ve],be=i.get(Le);let Ie=n.TEXTURE_2D;(L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(Ie=L.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(Ie,be.__webglTexture),Ee(Ie,Le),ue(j.__webglFramebuffer,L,Le,n.COLOR_ATTACHMENT0+ve,Ie,0),m(Le)&&g(Ie)}t.unbindTexture()}else{let ve=n.TEXTURE_2D;if((L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(ve=L.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(ve,te.__webglTexture),Ee(ve,R),R.mipmaps&&R.mipmaps.length>0)for(let Pe=0;Pe<R.mipmaps.length;Pe++)ue(j.__webglFramebuffer[Pe],L,R,n.COLOR_ATTACHMENT0,ve,Pe);else ue(j.__webglFramebuffer,L,R,n.COLOR_ATTACHMENT0,ve,0);m(R)&&g(ve),t.unbindTexture()}L.depthBuffer&&$(L)}function O(L){const R=L.textures;for(let j=0,te=R.length;j<te;j++){const fe=R[j];if(m(fe)){const re=M(L),Ce=i.get(fe).__webglTexture;t.bindTexture(re,Ce),g(re),t.unbindTexture()}}}const B=[],G=[];function H(L){if(L.samples>0){if(q(L)===!1){const R=L.textures,j=L.width,te=L.height;let fe=n.COLOR_BUFFER_BIT;const re=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Ce=i.get(L),ve=R.length>1;if(ve)for(let Le=0;Le<R.length;Le++)t.bindFramebuffer(n.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Le,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,Ce.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Le,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer);const Pe=L.texture.mipmaps;Pe&&Pe.length>0?t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer[0]):t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer);for(let Le=0;Le<R.length;Le++){if(L.resolveDepthBuffer&&(L.depthBuffer&&(fe|=n.DEPTH_BUFFER_BIT),L.stencilBuffer&&L.resolveStencilBuffer&&(fe|=n.STENCIL_BUFFER_BIT)),ve){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,Ce.__webglColorRenderbuffer[Le]);const be=i.get(R[Le]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,be,0)}n.blitFramebuffer(0,0,j,te,0,0,j,te,fe,n.NEAREST),l===!0&&(B.length=0,G.length=0,B.push(n.COLOR_ATTACHMENT0+Le),L.depthBuffer&&L.resolveDepthBuffer===!1&&(B.push(re),G.push(re),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,G)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,B))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),ve)for(let Le=0;Le<R.length;Le++){t.bindFramebuffer(n.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Le,n.RENDERBUFFER,Ce.__webglColorRenderbuffer[Le]);const be=i.get(R[Le]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,Ce.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Le,n.TEXTURE_2D,be,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer)}else if(L.depthBuffer&&L.resolveDepthBuffer===!1&&l){const R=L.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[R])}}}function K(L){return Math.min(r.maxSamples,L.samples)}function q(L){const R=i.get(L);return L.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function J(L){const R=o.render.frame;u.get(L)!==R&&(u.set(L,R),L.update())}function ie(L,R){const j=L.colorSpace,te=L.format,fe=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||j!==Ls&&j!==sr&&(pt.getTransfer(j)===wt?(te!==sn||fe!==wi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",j)),R}function pe(L){return typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement?(c.width=L.naturalWidth||L.width,c.height=L.naturalHeight||L.height):typeof VideoFrame<"u"&&L instanceof VideoFrame?(c.width=L.displayWidth,c.height=L.displayHeight):(c.width=L.width,c.height=L.height),c}this.allocateTextureUnit=k,this.resetTextureUnits=D,this.setTexture2D=Y,this.setTexture2DArray=z,this.setTexture3D=Q,this.setTextureCube=Z,this.rebindTextures=P,this.setupRenderTarget=T,this.updateRenderTargetMipmap=O,this.updateMultisampleRenderTarget=H,this.setupDepthRenderbuffer=$,this.setupFrameBufferTexture=ue,this.useMultisampledRTT=q}function Jy(n,e){function t(i,r=sr){let s;const o=pt.getTransfer(r);if(i===wi)return n.UNSIGNED_BYTE;if(i===ph)return n.UNSIGNED_SHORT_4_4_4_4;if(i===mh)return n.UNSIGNED_SHORT_5_5_5_1;if(i===Ip)return n.UNSIGNED_INT_5_9_9_9_REV;if(i===Cp)return n.BYTE;if(i===Rp)return n.SHORT;if(i===Lo)return n.UNSIGNED_SHORT;if(i===dh)return n.INT;if(i===gr)return n.UNSIGNED_INT;if(i===Gn)return n.FLOAT;if(i===Bs)return n.HALF_FLOAT;if(i===Pp)return n.ALPHA;if(i===Lp)return n.RGB;if(i===sn)return n.RGBA;if(i===Uo)return n.DEPTH_COMPONENT;if(i===No)return n.DEPTH_STENCIL;if(i===gh)return n.RED;if(i===xl)return n.RED_INTEGER;if(i===Dp)return n.RG;if(i===vh)return n.RG_INTEGER;if(i===_h)return n.RGBA_INTEGER;if(i===Ca||i===Ra||i===Ia||i===Pa)if(o===wt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===Ca)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Ra)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Ia)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Pa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===Ca)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Ra)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Ia)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Pa)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===mu||i===gu||i===vu||i===_u)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===mu)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===gu)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===vu)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===_u)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===xu||i===yu||i===bu)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===xu||i===yu)return o===wt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===bu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Mu||i===Su||i===wu||i===Tu||i===Eu||i===Au||i===Cu||i===Ru||i===Iu||i===Pu||i===Lu||i===Du||i===Uu||i===Nu)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===Mu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Su)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===wu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Tu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Eu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Au)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Cu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Ru)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Iu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Pu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Lu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Du)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Uu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Nu)return o===wt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===La||i===Ou||i===Fu)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===La)return o===wt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Ou)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Fu)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Up||i===Bu||i===zu||i===ku)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===La)return s.COMPRESSED_RED_RGTC1_EXT;if(i===Bu)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===zu)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===ku)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Do?n.UNSIGNED_INT_24_8:n[i]!==void 0?n[i]:null}return{convert:t}}class Qy extends Ot{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}}const HP=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,GP=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class WP{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const i=new Qy(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new pn({vertexShader:HP,fragmentShader:GP,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new bt(new Wr(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class XP extends Ei{constructor(e,t){super();const i=this;let r=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,f=null,d=null,p=null;const v=new WP,m={},g=t.getContextAttributes();let M=null,y=null;const b=[],C=[],w=new de;let E=null;const S=new Rt;S.viewport=new at;const _=new Rt;_.viewport=new at;const x=[S,_],A=new By;let D=null,k=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ae){let ye=b[ae];return ye===void 0&&(ye=new Wc,b[ae]=ye),ye.getTargetRaySpace()},this.getControllerGrip=function(ae){let ye=b[ae];return ye===void 0&&(ye=new Wc,b[ae]=ye),ye.getGripSpace()},this.getHand=function(ae){let ye=b[ae];return ye===void 0&&(ye=new Wc,b[ae]=ye),ye.getHandSpace()};function W(ae){const ye=C.indexOf(ae.inputSource);if(ye===-1)return;const _e=b[ye];_e!==void 0&&(_e.update(ae.inputSource,ae.frame,c||o),_e.dispatchEvent({type:ae.type,data:ae.inputSource}))}function Y(){r.removeEventListener("select",W),r.removeEventListener("selectstart",W),r.removeEventListener("selectend",W),r.removeEventListener("squeeze",W),r.removeEventListener("squeezestart",W),r.removeEventListener("squeezeend",W),r.removeEventListener("end",Y),r.removeEventListener("inputsourceschange",z);for(let ae=0;ae<b.length;ae++){const ye=C[ae];ye!==null&&(C[ae]=null,b[ae].disconnect(ye))}D=null,k=null,v.reset();for(const ae in m)delete m[ae];e.setRenderTarget(M),d=null,f=null,h=null,r=null,y=null,ze.stop(),i.isPresenting=!1,e.setPixelRatio(E),e.setSize(w.width,w.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ae){s=ae,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ae){a=ae,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(ae){c=ae},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(ae){if(r=ae,r!==null){if(M=e.getRenderTarget(),r.addEventListener("select",W),r.addEventListener("selectstart",W),r.addEventListener("selectend",W),r.addEventListener("squeeze",W),r.addEventListener("squeezestart",W),r.addEventListener("squeezeend",W),r.addEventListener("end",Y),r.addEventListener("inputsourceschange",z),g.xrCompatible!==!0&&await t.makeXRCompatible(),E=e.getPixelRatio(),e.getSize(w),typeof XRWebGLBinding<"u"&&(h=new XRWebGLBinding(r,t)),h!==null&&"createProjectionLayer"in XRWebGLBinding.prototype){let _e=null,ue=null,I=null;g.depth&&(I=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,_e=g.stencil?No:Uo,ue=g.stencil?Do:gr);const F={colorFormat:t.RGBA8,depthFormat:I,scaleFactor:s};f=h.createProjectionLayer(F),r.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),y=new Ti(f.textureWidth,f.textureHeight,{format:sn,type:wi,depthTexture:new Wp(f.textureWidth,f.textureHeight,ue,void 0,void 0,void 0,void 0,void 0,void 0,_e),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}else{const _e={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,_e),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),y=new Ti(d.framebufferWidth,d.framebufferHeight,{format:sn,type:wi,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await r.requestReferenceSpace(a),ze.setContext(r),ze.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function z(ae){for(let ye=0;ye<ae.removed.length;ye++){const _e=ae.removed[ye],ue=C.indexOf(_e);ue>=0&&(C[ue]=null,b[ue].disconnect(_e))}for(let ye=0;ye<ae.added.length;ye++){const _e=ae.added[ye];let ue=C.indexOf(_e);if(ue===-1){for(let F=0;F<b.length;F++)if(F>=C.length){C.push(_e),ue=F;break}else if(C[F]===null){C[F]=_e,ue=F;break}if(ue===-1)break}const I=b[ue];I&&I.connect(_e)}}const Q=new U,Z=new U;function he(ae,ye,_e){Q.setFromMatrixPosition(ye.matrixWorld),Z.setFromMatrixPosition(_e.matrixWorld);const ue=Q.distanceTo(Z),I=ye.projectionMatrix.elements,F=_e.projectionMatrix.elements,$=I[14]/(I[10]-1),P=I[14]/(I[10]+1),T=(I[9]+1)/I[5],O=(I[9]-1)/I[5],B=(I[8]-1)/I[0],G=(F[8]+1)/F[0],H=$*B,K=$*G,q=ue/(-B+G),J=q*-B;if(ye.matrixWorld.decompose(ae.position,ae.quaternion,ae.scale),ae.translateX(J),ae.translateZ(q),ae.matrixWorld.compose(ae.position,ae.quaternion,ae.scale),ae.matrixWorldInverse.copy(ae.matrixWorld).invert(),I[10]===-1)ae.projectionMatrix.copy(ye.projectionMatrix),ae.projectionMatrixInverse.copy(ye.projectionMatrixInverse);else{const ie=$+q,pe=P+q,L=H-J,R=K+(ue-J),j=T*P/pe*ie,te=O*P/pe*ie;ae.projectionMatrix.makePerspective(L,R,j,te,ie,pe),ae.projectionMatrixInverse.copy(ae.projectionMatrix).invert()}}function me(ae,ye){ye===null?ae.matrixWorld.copy(ae.matrix):ae.matrixWorld.multiplyMatrices(ye.matrixWorld,ae.matrix),ae.matrixWorldInverse.copy(ae.matrixWorld).invert()}this.updateCamera=function(ae){if(r===null)return;let ye=ae.near,_e=ae.far;v.texture!==null&&(v.depthNear>0&&(ye=v.depthNear),v.depthFar>0&&(_e=v.depthFar)),A.near=_.near=S.near=ye,A.far=_.far=S.far=_e,(D!==A.near||k!==A.far)&&(r.updateRenderState({depthNear:A.near,depthFar:A.far}),D=A.near,k=A.far),A.layers.mask=ae.layers.mask|6,S.layers.mask=A.layers.mask&3,_.layers.mask=A.layers.mask&5;const ue=ae.parent,I=A.cameras;me(A,ue);for(let F=0;F<I.length;F++)me(I[F],ue);I.length===2?he(A,S,_):A.projectionMatrix.copy(S.projectionMatrix),oe(ae,A,ue)};function oe(ae,ye,_e){_e===null?ae.matrix.copy(ye.matrixWorld):(ae.matrix.copy(_e.matrixWorld),ae.matrix.invert(),ae.matrix.multiply(ye.matrixWorld)),ae.matrix.decompose(ae.position,ae.quaternion,ae.scale),ae.updateMatrixWorld(!0),ae.projectionMatrix.copy(ye.projectionMatrix),ae.projectionMatrixInverse.copy(ye.projectionMatrixInverse),ae.isPerspectiveCamera&&(ae.fov=Bo*2*Math.atan(1/ae.projectionMatrix.elements[5]),ae.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(ae){l=ae,f!==null&&(f.fixedFoveation=ae),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=ae)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(A)},this.getCameraTexture=function(ae){return m[ae]};let Ee=null;function Ve(ae,ye){if(u=ye.getViewerPose(c||o),p=ye,u!==null){const _e=u.views;d!==null&&(e.setRenderTargetFramebuffer(y,d.framebuffer),e.setRenderTarget(y));let ue=!1;_e.length!==A.cameras.length&&(A.cameras.length=0,ue=!0);for(let P=0;P<_e.length;P++){const T=_e[P];let O=null;if(d!==null)O=d.getViewport(T);else{const G=h.getViewSubImage(f,T);O=G.viewport,P===0&&(e.setRenderTargetTextures(y,G.colorTexture,G.depthStencilTexture),e.setRenderTarget(y))}let B=x[P];B===void 0&&(B=new Rt,B.layers.enable(P),B.viewport=new at,x[P]=B),B.matrix.fromArray(T.transform.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale),B.projectionMatrix.fromArray(T.projectionMatrix),B.projectionMatrixInverse.copy(B.projectionMatrix).invert(),B.viewport.set(O.x,O.y,O.width,O.height),P===0&&(A.matrix.copy(B.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),ue===!0&&A.cameras.push(B)}const I=r.enabledFeatures;if(I&&I.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&h){const P=h.getDepthInformation(_e[0]);P&&P.isValid&&P.texture&&v.init(P,r.renderState)}if(I&&I.includes("camera-access")&&(e.state.unbindTexture(),h))for(let P=0;P<_e.length;P++){const T=_e[P].camera;if(T){let O=m[T];O||(O=new Qy,m[T]=O);const B=h.getCameraImage(T);O.sourceTexture=B}}}for(let _e=0;_e<b.length;_e++){const ue=C[_e],I=b[_e];ue!==null&&I!==void 0&&I.update(ue,ye,c||o)}Ee&&Ee(ae,ye),ye.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:ye}),p=null}const ze=new jy;ze.setAnimationLoop(Ve),this.setAnimationLoop=function(ae){Ee=ae},this.dispose=function(){}}}const cs=new Dn,YP=new Xe;function jP(n,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function i(m,g){g.color.getRGB(m.fogColor.value,jx(n)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function r(m,g,M,y,b){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(m,g):g.isMeshToonMaterial?(s(m,g),h(m,g)):g.isMeshPhongMaterial?(s(m,g),u(m,g)):g.isMeshStandardMaterial?(s(m,g),f(m,g),g.isMeshPhysicalMaterial&&d(m,g,b)):g.isMeshMatcapMaterial?(s(m,g),p(m,g)):g.isMeshDepthMaterial?s(m,g):g.isMeshDistanceMaterial?(s(m,g),v(m,g)):g.isMeshNormalMaterial?s(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,M,y):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===on&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===on&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const M=e.get(g),y=M.envMap,b=M.envMapRotation;y&&(m.envMap.value=y,cs.copy(b),cs.x*=-1,cs.y*=-1,cs.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(cs.y*=-1,cs.z*=-1),m.envMapRotation.value.setFromMatrix4(YP.makeRotationFromEuler(cs)),m.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,M,y){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*M,m.scale.value=y*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function u(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function h(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function f(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function d(m,g,M){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===on&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=M.texture,m.transmissionSamplerSize.value.set(M.width,M.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){const M=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(M.matrixWorld),m.nearDistance.value=M.shadow.camera.near,m.farDistance.value=M.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function $P(n,e,t,i){let r={},s={},o=[];const a=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function l(M,y){const b=y.program;i.uniformBlockBinding(M,b)}function c(M,y){let b=r[M.id];b===void 0&&(p(M),b=u(M),r[M.id]=b,M.addEventListener("dispose",m));const C=y.program;i.updateUBOMapping(M,C);const w=e.render.frame;s[M.id]!==w&&(f(M),s[M.id]=w)}function u(M){const y=h();M.__bindingPointIndex=y;const b=n.createBuffer(),C=M.__size,w=M.usage;return n.bindBuffer(n.UNIFORM_BUFFER,b),n.bufferData(n.UNIFORM_BUFFER,C,w),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,y,b),b}function h(){for(let M=0;M<a;M++)if(o.indexOf(M)===-1)return o.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(M){const y=r[M.id],b=M.uniforms,C=M.__cache;n.bindBuffer(n.UNIFORM_BUFFER,y);for(let w=0,E=b.length;w<E;w++){const S=Array.isArray(b[w])?b[w]:[b[w]];for(let _=0,x=S.length;_<x;_++){const A=S[_];if(d(A,w,_,C)===!0){const D=A.__offset,k=Array.isArray(A.value)?A.value:[A.value];let W=0;for(let Y=0;Y<k.length;Y++){const z=k[Y],Q=v(z);typeof z=="number"||typeof z=="boolean"?(A.__data[0]=z,n.bufferSubData(n.UNIFORM_BUFFER,D+W,A.__data)):z.isMatrix3?(A.__data[0]=z.elements[0],A.__data[1]=z.elements[1],A.__data[2]=z.elements[2],A.__data[3]=0,A.__data[4]=z.elements[3],A.__data[5]=z.elements[4],A.__data[6]=z.elements[5],A.__data[7]=0,A.__data[8]=z.elements[6],A.__data[9]=z.elements[7],A.__data[10]=z.elements[8],A.__data[11]=0):(z.toArray(A.__data,W),W+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,D,A.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function d(M,y,b,C){const w=M.value,E=y+"_"+b;if(C[E]===void 0)return typeof w=="number"||typeof w=="boolean"?C[E]=w:C[E]=w.clone(),!0;{const S=C[E];if(typeof w=="number"||typeof w=="boolean"){if(S!==w)return C[E]=w,!0}else if(S.equals(w)===!1)return S.copy(w),!0}return!1}function p(M){const y=M.uniforms;let b=0;const C=16;for(let E=0,S=y.length;E<S;E++){const _=Array.isArray(y[E])?y[E]:[y[E]];for(let x=0,A=_.length;x<A;x++){const D=_[x],k=Array.isArray(D.value)?D.value:[D.value];for(let W=0,Y=k.length;W<Y;W++){const z=k[W],Q=v(z),Z=b%C,he=Z%Q.boundary,me=Z+he;b+=he,me!==0&&C-me<Q.storage&&(b+=C-me),D.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=b,b+=Q.storage}}}const w=b%C;return w>0&&(b+=C-w),M.__size=b,M.__cache={},this}function v(M){const y={boundary:0,storage:0};return typeof M=="number"||typeof M=="boolean"?(y.boundary=4,y.storage=4):M.isVector2?(y.boundary=8,y.storage=8):M.isVector3||M.isColor?(y.boundary=16,y.storage=12):M.isVector4?(y.boundary=16,y.storage=16):M.isMatrix3?(y.boundary=48,y.storage=48):M.isMatrix4?(y.boundary=64,y.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),y}function m(M){const y=M.target;y.removeEventListener("dispose",m);const b=o.indexOf(y.__bindingPointIndex);o.splice(b,1),n.deleteBuffer(r[y.id]),delete r[y.id],delete s[y.id]}function g(){for(const M in r)n.deleteBuffer(r[M]);o=[],r={},s={}}return{bind:l,update:c,dispose:g}}class Fa{constructor(e={}){const{canvas:t=Wx(),context:i=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reversedDepthBuffer:f=!1}=e;this.isWebGLRenderer=!0;let d;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=i.getContextAttributes().alpha}else d=o;const p=new Uint32Array(4),v=new Int32Array(4);let m=null,g=null;const M=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Mi,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let C=!1;this._outputColorSpace=An;let w=0,E=0,S=null,_=-1,x=null;const A=new at,D=new at;let k=null;const W=new Ae(0);let Y=0,z=t.width,Q=t.height,Z=1,he=null,me=null;const oe=new at(0,0,z,Q),Ee=new at(0,0,z,Q);let Ve=!1;const ze=new Xo;let ae=!1,ye=!1;const _e=new Xe,ue=new U,I=new at,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let $=!1;function P(){return S===null?Z:1}let T=i;function O(N,ee){return t.getContext(N,ee)}try{const N={alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Fs}`),t.addEventListener("webglcontextlost",we,!1),t.addEventListener("webglcontextrestored",Ne,!1),t.addEventListener("webglcontextcreationerror",Me,!1),T===null){const ee="webgl2";if(T=O(ee,N),T===null)throw O(ee)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let B,G,H,K,q,J,ie,pe,L,R,j,te,fe,re,Ce,ve,Pe,Le,be,Ie,Oe,V,se,Se;function X(){B=new oI(T),B.init(),V=new Jy(T,B),G=new Q2(T,B,e,V),H=new kP(T,B),G.reversedDepthBuffer&&f&&H.buffers.depth.setReversed(!0),K=new cI(T),q=new AP,J=new VP(T,B,H,q,G,V,K),ie=new tI(b),pe=new sI(b),L=new mC(T),se=new K2(T,L),R=new aI(T,L,K,se),j=new hI(T,R,L,K),be=new uI(T,G,J),ve=new eI(q),te=new EP(b,ie,pe,B,G,se,ve),fe=new jP(b,q),re=new RP,Ce=new NP(B),Le=new Z2(b,ie,pe,H,j,d,l),Pe=new BP(b,j,G),Se=new $P(T,K,G,H),Ie=new J2(T,B,K),Oe=new lI(T,B,K),K.programs=te.programs,b.capabilities=G,b.extensions=B,b.properties=q,b.renderLists=re,b.shadowMap=Pe,b.state=H,b.info=K}X();const xe=new XP(b,T);this.xr=xe,this.getContext=function(){return T},this.getContextAttributes=function(){return T.getContextAttributes()},this.forceContextLoss=function(){const N=B.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=B.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return Z},this.setPixelRatio=function(N){N!==void 0&&(Z=N,this.setSize(z,Q,!1))},this.getSize=function(N){return N.set(z,Q)},this.setSize=function(N,ee,le=!0){if(xe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=N,Q=ee,t.width=Math.floor(N*Z),t.height=Math.floor(ee*Z),le===!0&&(t.style.width=N+"px",t.style.height=ee+"px"),this.setViewport(0,0,N,ee)},this.getDrawingBufferSize=function(N){return N.set(z*Z,Q*Z).floor()},this.setDrawingBufferSize=function(N,ee,le){z=N,Q=ee,Z=le,t.width=Math.floor(N*le),t.height=Math.floor(ee*le),this.setViewport(0,0,N,ee)},this.getCurrentViewport=function(N){return N.copy(A)},this.getViewport=function(N){return N.copy(oe)},this.setViewport=function(N,ee,le,ce){N.isVector4?oe.set(N.x,N.y,N.z,N.w):oe.set(N,ee,le,ce),H.viewport(A.copy(oe).multiplyScalar(Z).round())},this.getScissor=function(N){return N.copy(Ee)},this.setScissor=function(N,ee,le,ce){N.isVector4?Ee.set(N.x,N.y,N.z,N.w):Ee.set(N,ee,le,ce),H.scissor(D.copy(Ee).multiplyScalar(Z).round())},this.getScissorTest=function(){return Ve},this.setScissorTest=function(N){H.setScissorTest(Ve=N)},this.setOpaqueSort=function(N){he=N},this.setTransparentSort=function(N){me=N},this.getClearColor=function(N){return N.copy(Le.getClearColor())},this.setClearColor=function(){Le.setClearColor(...arguments)},this.getClearAlpha=function(){return Le.getClearAlpha()},this.setClearAlpha=function(){Le.setClearAlpha(...arguments)},this.clear=function(N=!0,ee=!0,le=!0){let ce=0;if(N){let ne=!1;if(S!==null){const Te=S.texture.format;ne=Te===_h||Te===vh||Te===xl}if(ne){const Te=S.texture.type,De=Te===wi||Te===gr||Te===Lo||Te===Do||Te===ph||Te===mh,ke=Le.getClearColor(),Be=Le.getClearAlpha(),Ze=ke.r,Je=ke.g,We=ke.b;De?(p[0]=Ze,p[1]=Je,p[2]=We,p[3]=Be,T.clearBufferuiv(T.COLOR,0,p)):(v[0]=Ze,v[1]=Je,v[2]=We,v[3]=Be,T.clearBufferiv(T.COLOR,0,v))}else ce|=T.COLOR_BUFFER_BIT}ee&&(ce|=T.DEPTH_BUFFER_BIT),le&&(ce|=T.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),T.clear(ce)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",we,!1),t.removeEventListener("webglcontextrestored",Ne,!1),t.removeEventListener("webglcontextcreationerror",Me,!1),Le.dispose(),re.dispose(),Ce.dispose(),q.dispose(),ie.dispose(),pe.dispose(),j.dispose(),se.dispose(),Se.dispose(),te.dispose(),xe.dispose(),xe.removeEventListener("sessionstart",Ci),xe.removeEventListener("sessionend",bm),Yr.stop()};function we(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function Ne(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const N=K.autoReset,ee=Pe.enabled,le=Pe.autoUpdate,ce=Pe.needsUpdate,ne=Pe.type;X(),K.autoReset=N,Pe.enabled=ee,Pe.autoUpdate=le,Pe.needsUpdate=ce,Pe.type=ne}function Me(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function ge(N){const ee=N.target;ee.removeEventListener("dispose",ge),Ue(ee)}function Ue(N){qe(N),q.remove(N)}function qe(N){const ee=q.get(N).programs;ee!==void 0&&(ee.forEach(function(le){te.releaseProgram(le)}),N.isShaderMaterial&&te.releaseShaderCache(N))}this.renderBufferDirect=function(N,ee,le,ce,ne,Te){ee===null&&(ee=F);const De=ne.isMesh&&ne.matrixWorld.determinant()<0,ke=Hb(N,ee,le,ce,ne);H.setMaterial(ce,De);let Be=le.index,Ze=1;if(ce.wireframe===!0){if(Be=R.getWireframeAttribute(le),Be===void 0)return;Ze=2}const Je=le.drawRange,We=le.attributes.position;let ht=Je.start*Ze,Et=(Je.start+Je.count)*Ze;Te!==null&&(ht=Math.max(ht,Te.start*Ze),Et=Math.min(Et,(Te.start+Te.count)*Ze)),Be!==null?(ht=Math.max(ht,0),Et=Math.min(Et,Be.count)):We!=null&&(ht=Math.max(ht,0),Et=Math.min(Et,We.count));const Gt=Et-ht;if(Gt<0||Gt===1/0)return;se.setup(ne,ce,ke,le,Be);let Dt,Ct=Ie;if(Be!==null&&(Dt=L.get(Be),Ct=Oe,Ct.setIndex(Dt)),ne.isMesh)ce.wireframe===!0?(H.setLineWidth(ce.wireframeLinewidth*P()),Ct.setMode(T.LINES)):Ct.setMode(T.TRIANGLES);else if(ne.isLine){let je=ce.linewidth;je===void 0&&(je=1),H.setLineWidth(je*P()),ne.isLineSegments?Ct.setMode(T.LINES):ne.isLineLoop?Ct.setMode(T.LINE_LOOP):Ct.setMode(T.LINE_STRIP)}else ne.isPoints?Ct.setMode(T.POINTS):ne.isSprite&&Ct.setMode(T.TRIANGLES);if(ne.isBatchedMesh)if(ne._multiDrawInstances!==null)Eo("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Ct.renderMultiDrawInstances(ne._multiDrawStarts,ne._multiDrawCounts,ne._multiDrawCount,ne._multiDrawInstances);else if(B.get("WEBGL_multi_draw"))Ct.renderMultiDraw(ne._multiDrawStarts,ne._multiDrawCounts,ne._multiDrawCount);else{const je=ne._multiDrawStarts,Bt=ne._multiDrawCounts,_t=ne._multiDrawCount,Xn=Be?L.get(Be).bytesPerElement:1,Gs=q.get(ce).currentProgram.getUniforms();for(let Yn=0;Yn<_t;Yn++)Gs.setValue(T,"_gl_DrawID",Yn),Ct.render(je[Yn]/Xn,Bt[Yn])}else if(ne.isInstancedMesh)Ct.renderInstances(ht,Gt,ne.count);else if(le.isInstancedBufferGeometry){const je=le._maxInstanceCount!==void 0?le._maxInstanceCount:1/0,Bt=Math.min(le.instanceCount,je);Ct.renderInstances(ht,Gt,Bt)}else Ct.render(ht,Gt)};function vt(N,ee,le){N.transparent===!0&&N.side===Hn&&N.forceSinglePass===!1?(N.side=on,N.needsUpdate=!0,Dl(N,ee,le),N.side=Gi,N.needsUpdate=!0,Dl(N,ee,le),N.side=Hn):Dl(N,ee,le)}this.compile=function(N,ee,le=null){le===null&&(le=N),g=Ce.get(le),g.init(ee),y.push(g),le.traverseVisible(function(ne){ne.isLight&&ne.layers.test(ee.layers)&&(g.pushLight(ne),ne.castShadow&&g.pushShadow(ne))}),N!==le&&N.traverseVisible(function(ne){ne.isLight&&ne.layers.test(ee.layers)&&(g.pushLight(ne),ne.castShadow&&g.pushShadow(ne))}),g.setupLights();const ce=new Set;return N.traverse(function(ne){if(!(ne.isMesh||ne.isPoints||ne.isLine||ne.isSprite))return;const Te=ne.material;if(Te)if(Array.isArray(Te))for(let De=0;De<Te.length;De++){const ke=Te[De];vt(ke,le,ne),ce.add(ke)}else vt(Te,le,ne),ce.add(Te)}),g=y.pop(),ce},this.compileAsync=function(N,ee,le=null){const ce=this.compile(N,ee,le);return new Promise(ne=>{function Te(){if(ce.forEach(function(De){q.get(De).currentProgram.isReady()&&ce.delete(De)}),ce.size===0){ne(N);return}setTimeout(Te,10)}B.get("KHR_parallel_shader_compile")!==null?Te():setTimeout(Te,10)})};let ut=null;function Nn(N){ut&&ut(N)}function Ci(){Yr.stop()}function bm(){Yr.start()}const Yr=new jy;Yr.setAnimationLoop(Nn),typeof self<"u"&&Yr.setContext(self),this.setAnimationLoop=function(N){ut=N,xe.setAnimationLoop(N),N===null?Yr.stop():Yr.start()},xe.addEventListener("sessionstart",Ci),xe.addEventListener("sessionend",bm),this.render=function(N,ee){if(ee!==void 0&&ee.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;if(N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),ee.parent===null&&ee.matrixWorldAutoUpdate===!0&&ee.updateMatrixWorld(),xe.enabled===!0&&xe.isPresenting===!0&&(xe.cameraAutoUpdate===!0&&xe.updateCamera(ee),ee=xe.getCamera()),N.isScene===!0&&N.onBeforeRender(b,N,ee,S),g=Ce.get(N,y.length),g.init(ee),y.push(g),_e.multiplyMatrices(ee.projectionMatrix,ee.matrixWorldInverse),ze.setFromProjectionMatrix(_e,Jn,ee.reversedDepth),ye=this.localClippingEnabled,ae=ve.init(this.clippingPlanes,ye),m=re.get(N,M.length),m.init(),M.push(m),xe.enabled===!0&&xe.isPresenting===!0){const Te=b.xr.getDepthSensingMesh();Te!==null&&$h(Te,ee,-1/0,b.sortObjects)}$h(N,ee,0,b.sortObjects),m.finish(),b.sortObjects===!0&&m.sort(he,me),$=xe.enabled===!1||xe.isPresenting===!1||xe.hasDepthSensing()===!1,$&&Le.addToRenderList(m,N),this.info.render.frame++,ae===!0&&ve.beginShadows();const le=g.state.shadowsArray;Pe.render(le,N,ee),ae===!0&&ve.endShadows(),this.info.autoReset===!0&&this.info.reset();const ce=m.opaque,ne=m.transmissive;if(g.setupLights(),ee.isArrayCamera){const Te=ee.cameras;if(ne.length>0)for(let De=0,ke=Te.length;De<ke;De++){const Be=Te[De];Sm(ce,ne,N,Be)}$&&Le.render(N);for(let De=0,ke=Te.length;De<ke;De++){const Be=Te[De];Mm(m,N,Be,Be.viewport)}}else ne.length>0&&Sm(ce,ne,N,ee),$&&Le.render(N),Mm(m,N,ee);S!==null&&E===0&&(J.updateMultisampleRenderTarget(S),J.updateRenderTargetMipmap(S)),N.isScene===!0&&N.onAfterRender(b,N,ee),se.resetDefaultState(),_=-1,x=null,y.pop(),y.length>0?(g=y[y.length-1],ae===!0&&ve.setGlobalState(b.clippingPlanes,g.state.camera)):g=null,M.pop(),M.length>0?m=M[M.length-1]:m=null};function $h(N,ee,le,ce){if(N.visible===!1)return;if(N.layers.test(ee.layers)){if(N.isGroup)le=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(ee);else if(N.isLight)g.pushLight(N),N.castShadow&&g.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||ze.intersectsSprite(N)){ce&&I.setFromMatrixPosition(N.matrixWorld).applyMatrix4(_e);const De=j.update(N),ke=N.material;ke.visible&&m.push(N,De,ke,le,I.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||ze.intersectsObject(N))){const De=j.update(N),ke=N.material;if(ce&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),I.copy(N.boundingSphere.center)):(De.boundingSphere===null&&De.computeBoundingSphere(),I.copy(De.boundingSphere.center)),I.applyMatrix4(N.matrixWorld).applyMatrix4(_e)),Array.isArray(ke)){const Be=De.groups;for(let Ze=0,Je=Be.length;Ze<Je;Ze++){const We=Be[Ze],ht=ke[We.materialIndex];ht&&ht.visible&&m.push(N,De,ht,le,I.z,We)}}else ke.visible&&m.push(N,De,ke,le,I.z,null)}}const Te=N.children;for(let De=0,ke=Te.length;De<ke;De++)$h(Te[De],ee,le,ce)}function Mm(N,ee,le,ce){const ne=N.opaque,Te=N.transmissive,De=N.transparent;g.setupLightsView(le),ae===!0&&ve.setGlobalState(b.clippingPlanes,le),ce&&H.viewport(A.copy(ce)),ne.length>0&&Ll(ne,ee,le),Te.length>0&&Ll(Te,ee,le),De.length>0&&Ll(De,ee,le),H.buffers.depth.setTest(!0),H.buffers.depth.setMask(!0),H.buffers.color.setMask(!0),H.setPolygonOffset(!1)}function Sm(N,ee,le,ce){if((le.isScene===!0?le.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[ce.id]===void 0&&(g.state.transmissionRenderTarget[ce.id]=new Ti(1,1,{generateMipmaps:!0,type:B.has("EXT_color_buffer_half_float")||B.has("EXT_color_buffer_float")?Bs:wi,minFilter:_i,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:pt.workingColorSpace}));const Te=g.state.transmissionRenderTarget[ce.id],De=ce.viewport||A;Te.setSize(De.z*b.transmissionResolutionScale,De.w*b.transmissionResolutionScale);const ke=b.getRenderTarget(),Be=b.getActiveCubeFace(),Ze=b.getActiveMipmapLevel();b.setRenderTarget(Te),b.getClearColor(W),Y=b.getClearAlpha(),Y<1&&b.setClearColor(16777215,.5),b.clear(),$&&Le.render(le);const Je=b.toneMapping;b.toneMapping=Mi;const We=ce.viewport;if(ce.viewport!==void 0&&(ce.viewport=void 0),g.setupLightsView(ce),ae===!0&&ve.setGlobalState(b.clippingPlanes,ce),Ll(N,le,ce),J.updateMultisampleRenderTarget(Te),J.updateRenderTargetMipmap(Te),B.has("WEBGL_multisampled_render_to_texture")===!1){let ht=!1;for(let Et=0,Gt=ee.length;Et<Gt;Et++){const Dt=ee[Et],Ct=Dt.object,je=Dt.geometry,Bt=Dt.material,_t=Dt.group;if(Bt.side===Hn&&Ct.layers.test(ce.layers)){const Xn=Bt.side;Bt.side=on,Bt.needsUpdate=!0,wm(Ct,le,ce,je,Bt,_t),Bt.side=Xn,Bt.needsUpdate=!0,ht=!0}}ht===!0&&(J.updateMultisampleRenderTarget(Te),J.updateRenderTargetMipmap(Te))}b.setRenderTarget(ke,Be,Ze),b.setClearColor(W,Y),We!==void 0&&(ce.viewport=We),b.toneMapping=Je}function Ll(N,ee,le){const ce=ee.isScene===!0?ee.overrideMaterial:null;for(let ne=0,Te=N.length;ne<Te;ne++){const De=N[ne],ke=De.object,Be=De.geometry,Ze=De.group;let Je=De.material;Je.allowOverride===!0&&ce!==null&&(Je=ce),ke.layers.test(le.layers)&&wm(ke,ee,le,Be,Je,Ze)}}function wm(N,ee,le,ce,ne,Te){N.onBeforeRender(b,ee,le,ce,ne,Te),N.modelViewMatrix.multiplyMatrices(le.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),ne.onBeforeRender(b,ee,le,ce,N,Te),ne.transparent===!0&&ne.side===Hn&&ne.forceSinglePass===!1?(ne.side=on,ne.needsUpdate=!0,b.renderBufferDirect(le,ee,ce,ne,N,Te),ne.side=Gi,ne.needsUpdate=!0,b.renderBufferDirect(le,ee,ce,ne,N,Te),ne.side=Hn):b.renderBufferDirect(le,ee,ce,ne,N,Te),N.onAfterRender(b,ee,le,ce,ne,Te)}function Dl(N,ee,le){ee.isScene!==!0&&(ee=F);const ce=q.get(N),ne=g.state.lights,Te=g.state.shadowsArray,De=ne.state.version,ke=te.getParameters(N,ne.state,Te,ee,le),Be=te.getProgramCacheKey(ke);let Ze=ce.programs;ce.environment=N.isMeshStandardMaterial?ee.environment:null,ce.fog=ee.fog,ce.envMap=(N.isMeshStandardMaterial?pe:ie).get(N.envMap||ce.environment),ce.envMapRotation=ce.environment!==null&&N.envMap===null?ee.environmentRotation:N.envMapRotation,Ze===void 0&&(N.addEventListener("dispose",ge),Ze=new Map,ce.programs=Ze);let Je=Ze.get(Be);if(Je!==void 0){if(ce.currentProgram===Je&&ce.lightsStateVersion===De)return Em(N,ke),Je}else ke.uniforms=te.getUniforms(N),N.onBeforeCompile(ke,b),Je=te.acquireProgram(ke,Be),Ze.set(Be,Je),ce.uniforms=ke.uniforms;const We=ce.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(We.clippingPlanes=ve.uniform),Em(N,ke),ce.needsLights=Wb(N),ce.lightsStateVersion=De,ce.needsLights&&(We.ambientLightColor.value=ne.state.ambient,We.lightProbe.value=ne.state.probe,We.directionalLights.value=ne.state.directional,We.directionalLightShadows.value=ne.state.directionalShadow,We.spotLights.value=ne.state.spot,We.spotLightShadows.value=ne.state.spotShadow,We.rectAreaLights.value=ne.state.rectArea,We.ltc_1.value=ne.state.rectAreaLTC1,We.ltc_2.value=ne.state.rectAreaLTC2,We.pointLights.value=ne.state.point,We.pointLightShadows.value=ne.state.pointShadow,We.hemisphereLights.value=ne.state.hemi,We.directionalShadowMap.value=ne.state.directionalShadowMap,We.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,We.spotShadowMap.value=ne.state.spotShadowMap,We.spotLightMatrix.value=ne.state.spotLightMatrix,We.spotLightMap.value=ne.state.spotLightMap,We.pointShadowMap.value=ne.state.pointShadowMap,We.pointShadowMatrix.value=ne.state.pointShadowMatrix),ce.currentProgram=Je,ce.uniformsList=null,Je}function Tm(N){if(N.uniformsList===null){const ee=N.currentProgram.getUniforms();N.uniformsList=Xc.seqWithValue(ee.seq,N.uniforms)}return N.uniformsList}function Em(N,ee){const le=q.get(N);le.outputColorSpace=ee.outputColorSpace,le.batching=ee.batching,le.batchingColor=ee.batchingColor,le.instancing=ee.instancing,le.instancingColor=ee.instancingColor,le.instancingMorph=ee.instancingMorph,le.skinning=ee.skinning,le.morphTargets=ee.morphTargets,le.morphNormals=ee.morphNormals,le.morphColors=ee.morphColors,le.morphTargetsCount=ee.morphTargetsCount,le.numClippingPlanes=ee.numClippingPlanes,le.numIntersection=ee.numClipIntersection,le.vertexAlphas=ee.vertexAlphas,le.vertexTangents=ee.vertexTangents,le.toneMapping=ee.toneMapping}function Hb(N,ee,le,ce,ne){ee.isScene!==!0&&(ee=F),J.resetTextureUnits();const Te=ee.fog,De=ce.isMeshStandardMaterial?ee.environment:null,ke=S===null?b.outputColorSpace:S.isXRRenderTarget===!0?S.texture.colorSpace:Ls,Be=(ce.isMeshStandardMaterial?pe:ie).get(ce.envMap||De),Ze=ce.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,Je=!!le.attributes.tangent&&(!!ce.normalMap||ce.anisotropy>0),We=!!le.morphAttributes.position,ht=!!le.morphAttributes.normal,Et=!!le.morphAttributes.color;let Gt=Mi;ce.toneMapped&&(S===null||S.isXRRenderTarget===!0)&&(Gt=b.toneMapping);const Dt=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,Ct=Dt!==void 0?Dt.length:0,je=q.get(ce),Bt=g.state.lights;if(ae===!0&&(ye===!0||N!==x)){const Sn=N===x&&ce.id===_;ve.setState(ce,N,Sn)}let _t=!1;ce.version===je.__version?(je.needsLights&&je.lightsStateVersion!==Bt.state.version||je.outputColorSpace!==ke||ne.isBatchedMesh&&je.batching===!1||!ne.isBatchedMesh&&je.batching===!0||ne.isBatchedMesh&&je.batchingColor===!0&&ne.colorTexture===null||ne.isBatchedMesh&&je.batchingColor===!1&&ne.colorTexture!==null||ne.isInstancedMesh&&je.instancing===!1||!ne.isInstancedMesh&&je.instancing===!0||ne.isSkinnedMesh&&je.skinning===!1||!ne.isSkinnedMesh&&je.skinning===!0||ne.isInstancedMesh&&je.instancingColor===!0&&ne.instanceColor===null||ne.isInstancedMesh&&je.instancingColor===!1&&ne.instanceColor!==null||ne.isInstancedMesh&&je.instancingMorph===!0&&ne.morphTexture===null||ne.isInstancedMesh&&je.instancingMorph===!1&&ne.morphTexture!==null||je.envMap!==Be||ce.fog===!0&&je.fog!==Te||je.numClippingPlanes!==void 0&&(je.numClippingPlanes!==ve.numPlanes||je.numIntersection!==ve.numIntersection)||je.vertexAlphas!==Ze||je.vertexTangents!==Je||je.morphTargets!==We||je.morphNormals!==ht||je.morphColors!==Et||je.toneMapping!==Gt||je.morphTargetsCount!==Ct)&&(_t=!0):(_t=!0,je.__version=ce.version);let Xn=je.currentProgram;_t===!0&&(Xn=Dl(ce,ee,ne));let Gs=!1,Yn=!1,jo=!1;const zt=Xn.getUniforms(),ni=je.uniforms;if(H.useProgram(Xn.program)&&(Gs=!0,Yn=!0,jo=!0),ce.id!==_&&(_=ce.id,Yn=!0),Gs||x!==N){H.buffers.depth.getReversed()&&N.reversedDepth!==!0&&(N._reversedDepth=!0,N.updateProjectionMatrix()),zt.setValue(T,"projectionMatrix",N.projectionMatrix),zt.setValue(T,"viewMatrix",N.matrixWorldInverse);const On=zt.map.cameraPosition;On!==void 0&&On.setValue(T,ue.setFromMatrixPosition(N.matrixWorld)),G.logarithmicDepthBuffer&&zt.setValue(T,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(ce.isMeshPhongMaterial||ce.isMeshToonMaterial||ce.isMeshLambertMaterial||ce.isMeshBasicMaterial||ce.isMeshStandardMaterial||ce.isShaderMaterial)&&zt.setValue(T,"isOrthographic",N.isOrthographicCamera===!0),x!==N&&(x=N,Yn=!0,jo=!0)}if(ne.isSkinnedMesh){zt.setOptional(T,ne,"bindMatrix"),zt.setOptional(T,ne,"bindMatrixInverse");const Sn=ne.skeleton;Sn&&(Sn.boneTexture===null&&Sn.computeBoneTexture(),zt.setValue(T,"boneTexture",Sn.boneTexture,J))}ne.isBatchedMesh&&(zt.setOptional(T,ne,"batchingTexture"),zt.setValue(T,"batchingTexture",ne._matricesTexture,J),zt.setOptional(T,ne,"batchingIdTexture"),zt.setValue(T,"batchingIdTexture",ne._indirectTexture,J),zt.setOptional(T,ne,"batchingColorTexture"),ne._colorsTexture!==null&&zt.setValue(T,"batchingColorTexture",ne._colorsTexture,J));const ii=le.morphAttributes;if((ii.position!==void 0||ii.normal!==void 0||ii.color!==void 0)&&be.update(ne,le,Xn),(Yn||je.receiveShadow!==ne.receiveShadow)&&(je.receiveShadow=ne.receiveShadow,zt.setValue(T,"receiveShadow",ne.receiveShadow)),ce.isMeshGouraudMaterial&&ce.envMap!==null&&(ni.envMap.value=Be,ni.flipEnvMap.value=Be.isCubeTexture&&Be.isRenderTargetTexture===!1?-1:1),ce.isMeshStandardMaterial&&ce.envMap===null&&ee.environment!==null&&(ni.envMapIntensity.value=ee.environmentIntensity),Yn&&(zt.setValue(T,"toneMappingExposure",b.toneMappingExposure),je.needsLights&&Gb(ni,jo),Te&&ce.fog===!0&&fe.refreshFogUniforms(ni,Te),fe.refreshMaterialUniforms(ni,ce,Z,Q,g.state.transmissionRenderTarget[N.id]),Xc.upload(T,Tm(je),ni,J)),ce.isShaderMaterial&&ce.uniformsNeedUpdate===!0&&(Xc.upload(T,Tm(je),ni,J),ce.uniformsNeedUpdate=!1),ce.isSpriteMaterial&&zt.setValue(T,"center",ne.center),zt.setValue(T,"modelViewMatrix",ne.modelViewMatrix),zt.setValue(T,"normalMatrix",ne.normalMatrix),zt.setValue(T,"modelMatrix",ne.matrixWorld),ce.isShaderMaterial||ce.isRawShaderMaterial){const Sn=ce.uniformsGroups;for(let On=0,qh=Sn.length;On<qh;On++){const jr=Sn[On];Se.update(jr,Xn),Se.bind(jr,Xn)}}return Xn}function Gb(N,ee){N.ambientLightColor.needsUpdate=ee,N.lightProbe.needsUpdate=ee,N.directionalLights.needsUpdate=ee,N.directionalLightShadows.needsUpdate=ee,N.pointLights.needsUpdate=ee,N.pointLightShadows.needsUpdate=ee,N.spotLights.needsUpdate=ee,N.spotLightShadows.needsUpdate=ee,N.rectAreaLights.needsUpdate=ee,N.hemisphereLights.needsUpdate=ee}function Wb(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(N,ee,le){const ce=q.get(N);ce.__autoAllocateDepthBuffer=N.resolveDepthBuffer===!1,ce.__autoAllocateDepthBuffer===!1&&(ce.__useRenderToTexture=!1),q.get(N.texture).__webglTexture=ee,q.get(N.depthTexture).__webglTexture=ce.__autoAllocateDepthBuffer?void 0:le,ce.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(N,ee){const le=q.get(N);le.__webglFramebuffer=ee,le.__useDefaultFramebuffer=ee===void 0};const Xb=T.createFramebuffer();this.setRenderTarget=function(N,ee=0,le=0){S=N,w=ee,E=le;let ce=!0,ne=null,Te=!1,De=!1;if(N){const Be=q.get(N);if(Be.__useDefaultFramebuffer!==void 0)H.bindFramebuffer(T.FRAMEBUFFER,null),ce=!1;else if(Be.__webglFramebuffer===void 0)J.setupRenderTarget(N);else if(Be.__hasExternalTextures)J.rebindTextures(N,q.get(N.texture).__webglTexture,q.get(N.depthTexture).__webglTexture);else if(N.depthBuffer){const We=N.depthTexture;if(Be.__boundDepthTexture!==We){if(We!==null&&q.has(We)&&(N.width!==We.image.width||N.height!==We.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");J.setupDepthRenderbuffer(N)}}const Ze=N.texture;(Ze.isData3DTexture||Ze.isDataArrayTexture||Ze.isCompressedArrayTexture)&&(De=!0);const Je=q.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(Je[ee])?ne=Je[ee][le]:ne=Je[ee],Te=!0):N.samples>0&&J.useMultisampledRTT(N)===!1?ne=q.get(N).__webglMultisampledFramebuffer:Array.isArray(Je)?ne=Je[le]:ne=Je,A.copy(N.viewport),D.copy(N.scissor),k=N.scissorTest}else A.copy(oe).multiplyScalar(Z).floor(),D.copy(Ee).multiplyScalar(Z).floor(),k=Ve;if(le!==0&&(ne=Xb),H.bindFramebuffer(T.FRAMEBUFFER,ne)&&ce&&H.drawBuffers(N,ne),H.viewport(A),H.scissor(D),H.setScissorTest(k),Te){const Be=q.get(N.texture);T.framebufferTexture2D(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Be.__webglTexture,le)}else if(De){const Be=ee;for(let Ze=0;Ze<N.textures.length;Ze++){const Je=q.get(N.textures[Ze]);T.framebufferTextureLayer(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0+Ze,Je.__webglTexture,le,Be)}}else if(N!==null&&le!==0){const Be=q.get(N.texture);T.framebufferTexture2D(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,Be.__webglTexture,le)}_=-1},this.readRenderTargetPixels=function(N,ee,le,ce,ne,Te,De,ke=0){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=q.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&De!==void 0&&(Be=Be[De]),Be){H.bindFramebuffer(T.FRAMEBUFFER,Be);try{const Ze=N.textures[ke],Je=Ze.format,We=Ze.type;if(!G.textureFormatReadable(Je)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!G.textureTypeReadable(We)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ee>=0&&ee<=N.width-ce&&le>=0&&le<=N.height-ne&&(N.textures.length>1&&T.readBuffer(T.COLOR_ATTACHMENT0+ke),T.readPixels(ee,le,ce,ne,V.convert(Je),V.convert(We),Te))}finally{const Ze=S!==null?q.get(S).__webglFramebuffer:null;H.bindFramebuffer(T.FRAMEBUFFER,Ze)}}},this.readRenderTargetPixelsAsync=async function(N,ee,le,ce,ne,Te,De,ke=0){if(!(N&&N.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Be=q.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&De!==void 0&&(Be=Be[De]),Be)if(ee>=0&&ee<=N.width-ce&&le>=0&&le<=N.height-ne){H.bindFramebuffer(T.FRAMEBUFFER,Be);const Ze=N.textures[ke],Je=Ze.format,We=Ze.type;if(!G.textureFormatReadable(Je))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!G.textureTypeReadable(We))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const ht=T.createBuffer();T.bindBuffer(T.PIXEL_PACK_BUFFER,ht),T.bufferData(T.PIXEL_PACK_BUFFER,Te.byteLength,T.STREAM_READ),N.textures.length>1&&T.readBuffer(T.COLOR_ATTACHMENT0+ke),T.readPixels(ee,le,ce,ne,V.convert(Je),V.convert(We),0);const Et=S!==null?q.get(S).__webglFramebuffer:null;H.bindFramebuffer(T.FRAMEBUFFER,Et);const Gt=T.fenceSync(T.SYNC_GPU_COMMANDS_COMPLETE,0);return T.flush(),await FT(T,Gt,4),T.bindBuffer(T.PIXEL_PACK_BUFFER,ht),T.getBufferSubData(T.PIXEL_PACK_BUFFER,0,Te),T.deleteBuffer(ht),T.deleteSync(Gt),Te}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(N,ee=null,le=0){const ce=Math.pow(2,-le),ne=Math.floor(N.image.width*ce),Te=Math.floor(N.image.height*ce),De=ee!==null?ee.x:0,ke=ee!==null?ee.y:0;J.setTexture2D(N,0),T.copyTexSubImage2D(T.TEXTURE_2D,le,0,0,De,ke,ne,Te),H.unbindTexture()};const Yb=T.createFramebuffer(),jb=T.createFramebuffer();this.copyTextureToTexture=function(N,ee,le=null,ce=null,ne=0,Te=null){Te===null&&(ne!==0?(Eo("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Te=ne,ne=0):Te=0);let De,ke,Be,Ze,Je,We,ht,Et,Gt;const Dt=N.isCompressedTexture?N.mipmaps[Te]:N.image;if(le!==null)De=le.max.x-le.min.x,ke=le.max.y-le.min.y,Be=le.isBox3?le.max.z-le.min.z:1,Ze=le.min.x,Je=le.min.y,We=le.isBox3?le.min.z:0;else{const ii=Math.pow(2,-ne);De=Math.floor(Dt.width*ii),ke=Math.floor(Dt.height*ii),N.isDataArrayTexture?Be=Dt.depth:N.isData3DTexture?Be=Math.floor(Dt.depth*ii):Be=1,Ze=0,Je=0,We=0}ce!==null?(ht=ce.x,Et=ce.y,Gt=ce.z):(ht=0,Et=0,Gt=0);const Ct=V.convert(ee.format),je=V.convert(ee.type);let Bt;ee.isData3DTexture?(J.setTexture3D(ee,0),Bt=T.TEXTURE_3D):ee.isDataArrayTexture||ee.isCompressedArrayTexture?(J.setTexture2DArray(ee,0),Bt=T.TEXTURE_2D_ARRAY):(J.setTexture2D(ee,0),Bt=T.TEXTURE_2D),T.pixelStorei(T.UNPACK_FLIP_Y_WEBGL,ee.flipY),T.pixelStorei(T.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),T.pixelStorei(T.UNPACK_ALIGNMENT,ee.unpackAlignment);const _t=T.getParameter(T.UNPACK_ROW_LENGTH),Xn=T.getParameter(T.UNPACK_IMAGE_HEIGHT),Gs=T.getParameter(T.UNPACK_SKIP_PIXELS),Yn=T.getParameter(T.UNPACK_SKIP_ROWS),jo=T.getParameter(T.UNPACK_SKIP_IMAGES);T.pixelStorei(T.UNPACK_ROW_LENGTH,Dt.width),T.pixelStorei(T.UNPACK_IMAGE_HEIGHT,Dt.height),T.pixelStorei(T.UNPACK_SKIP_PIXELS,Ze),T.pixelStorei(T.UNPACK_SKIP_ROWS,Je),T.pixelStorei(T.UNPACK_SKIP_IMAGES,We);const zt=N.isDataArrayTexture||N.isData3DTexture,ni=ee.isDataArrayTexture||ee.isData3DTexture;if(N.isDepthTexture){const ii=q.get(N),Sn=q.get(ee),On=q.get(ii.__renderTarget),qh=q.get(Sn.__renderTarget);H.bindFramebuffer(T.READ_FRAMEBUFFER,On.__webglFramebuffer),H.bindFramebuffer(T.DRAW_FRAMEBUFFER,qh.__webglFramebuffer);for(let jr=0;jr<Be;jr++)zt&&(T.framebufferTextureLayer(T.READ_FRAMEBUFFER,T.COLOR_ATTACHMENT0,q.get(N).__webglTexture,ne,We+jr),T.framebufferTextureLayer(T.DRAW_FRAMEBUFFER,T.COLOR_ATTACHMENT0,q.get(ee).__webglTexture,Te,Gt+jr)),T.blitFramebuffer(Ze,Je,De,ke,ht,Et,De,ke,T.DEPTH_BUFFER_BIT,T.NEAREST);H.bindFramebuffer(T.READ_FRAMEBUFFER,null),H.bindFramebuffer(T.DRAW_FRAMEBUFFER,null)}else if(ne!==0||N.isRenderTargetTexture||q.has(N)){const ii=q.get(N),Sn=q.get(ee);H.bindFramebuffer(T.READ_FRAMEBUFFER,Yb),H.bindFramebuffer(T.DRAW_FRAMEBUFFER,jb);for(let On=0;On<Be;On++)zt?T.framebufferTextureLayer(T.READ_FRAMEBUFFER,T.COLOR_ATTACHMENT0,ii.__webglTexture,ne,We+On):T.framebufferTexture2D(T.READ_FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,ii.__webglTexture,ne),ni?T.framebufferTextureLayer(T.DRAW_FRAMEBUFFER,T.COLOR_ATTACHMENT0,Sn.__webglTexture,Te,Gt+On):T.framebufferTexture2D(T.DRAW_FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,Sn.__webglTexture,Te),ne!==0?T.blitFramebuffer(Ze,Je,De,ke,ht,Et,De,ke,T.COLOR_BUFFER_BIT,T.NEAREST):ni?T.copyTexSubImage3D(Bt,Te,ht,Et,Gt+On,Ze,Je,De,ke):T.copyTexSubImage2D(Bt,Te,ht,Et,Ze,Je,De,ke);H.bindFramebuffer(T.READ_FRAMEBUFFER,null),H.bindFramebuffer(T.DRAW_FRAMEBUFFER,null)}else ni?N.isDataTexture||N.isData3DTexture?T.texSubImage3D(Bt,Te,ht,Et,Gt,De,ke,Be,Ct,je,Dt.data):ee.isCompressedArrayTexture?T.compressedTexSubImage3D(Bt,Te,ht,Et,Gt,De,ke,Be,Ct,Dt.data):T.texSubImage3D(Bt,Te,ht,Et,Gt,De,ke,Be,Ct,je,Dt):N.isDataTexture?T.texSubImage2D(T.TEXTURE_2D,Te,ht,Et,De,ke,Ct,je,Dt.data):N.isCompressedTexture?T.compressedTexSubImage2D(T.TEXTURE_2D,Te,ht,Et,Dt.width,Dt.height,Ct,Dt.data):T.texSubImage2D(T.TEXTURE_2D,Te,ht,Et,De,ke,Ct,je,Dt);T.pixelStorei(T.UNPACK_ROW_LENGTH,_t),T.pixelStorei(T.UNPACK_IMAGE_HEIGHT,Xn),T.pixelStorei(T.UNPACK_SKIP_PIXELS,Gs),T.pixelStorei(T.UNPACK_SKIP_ROWS,Yn),T.pixelStorei(T.UNPACK_SKIP_IMAGES,jo),Te===0&&ee.generateMipmaps&&T.generateMipmap(Bt),H.unbindTexture()},this.copyTextureToTexture3D=function(N,ee,le=null,ce=null,ne=0){return Eo('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(N,ee,le,ce,ne)},this.initRenderTarget=function(N){q.get(N).__webglFramebuffer===void 0&&J.setupRenderTarget(N)},this.initTexture=function(N){N.isCubeTexture?J.setTextureCube(N,0):N.isData3DTexture?J.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?J.setTexture2DArray(N,0):J.setTexture2D(N,0),H.unbindTexture()},this.resetState=function(){w=0,E=0,S=null,H.reset(),se.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Jn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=pt._getDrawingBufferColorSpace(e),t.unpackColorSpace=pt._getUnpackColorSpace()}}const qP=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:uh,AddEquation:Pr,AddOperation:Mx,AdditiveAnimationBlendMode:Np,AdditiveBlending:su,AgXToneMapping:Ax,AlphaFormat:Pp,AlwaysCompare:Hx,AlwaysDepth:cu,AlwaysStencilFunc:Ud,AmbientLight:Dy,AnimationAction:Vy,AnimationClip:cl,AnimationLoader:uA,AnimationMixer:zA,AnimationObjectGroup:FA,AnimationUtils:oA,ArcCurve:oy,ArrayCamera:By,ArrowHelper:aC,AttachedBindMode:Dd,Audio:zy,AudioAnalyser:AA,AudioContext:am,AudioListener:wA,AudioLoader:bA,AxesHelper:lC,BackSide:on,BasicDepthPacking:Dx,BasicShadowMap:Fw,BatchedMesh:ty,Bone:Hp,BooleanKeyframeTrack:ks,Box2:Gy,Box3:Kt,Box3Helper:sC,BoxGeometry:Hr,BoxHelper:rC,BufferAttribute:mt,BufferGeometry:et,BufferGeometryLoader:Fy,ByteType:Cp,Cache:zi,Camera:bl,CameraHelper:iC,CanvasTexture:RE,CapsuleGeometry:Eh,CatmullRomCurve3:ay,CineonToneMapping:Tx,CircleGeometry:Ah,ClampToEdgeWrapping:fn,Clock:kh,Color:Ae,ColorKeyframeTrack:im,ColorManagement:pt,CompressedArrayTexture:AE,CompressedCubeTexture:CE,CompressedTexture:Ts,CompressedTextureLoader:hA,ConeGeometry:Tl,ConstantAlphaFactor:xx,ConstantColorFactor:vx,Controls:cC,CubeCamera:$x,CubeReflectionMapping:mr,CubeRefractionMapping:Or,CubeTexture:Ml,CubeTextureLoader:fA,CubeUVReflectionMapping:Wo,CubicBezierCurve:Yp,CubicBezierCurve3:ly,CubicInterpolant:Ty,CullFaceBack:Id,CullFaceFront:nx,CullFaceFrontBack:Ow,CullFaceNone:tx,Curve:Ai,CurvePath:uy,CustomBlending:ix,CustomToneMapping:Ex,CylinderGeometry:wl,Cylindrical:YA,Data3DTexture:bh,DataArrayTexture:yh,DataTexture:li,DataTextureLoader:dA,DataUtils:JT,DecrementStencilOp:Kw,DecrementWrapStencilOp:Qw,DefaultLoadingManager:Cy,DepthFormat:Uo,DepthStencilFormat:No,DepthTexture:Wp,DetachedBindMode:Rx,DirectionalLight:Ly,DirectionalLightHelper:nC,DiscreteInterpolant:Ey,DodecahedronGeometry:Ch,DoubleSide:Hn,DstAlphaFactor:fx,DstColorFactor:px,DynamicCopyUsage:pT,DynamicDrawUsage:lT,DynamicReadUsage:hT,EdgesGeometry:sy,EllipseCurve:Rh,EqualCompare:Bx,EqualDepth:hu,EqualStencilFunc:iT,EquirectangularReflectionMapping:Ka,EquirectangularRefractionMapping:Ja,Euler:Dn,EventDispatcher:Ei,ExtrudeGeometry:Ih,FileLoader:vr,Float16BufferAttribute:sE,Float32BufferAttribute:Fe,FloatType:Gn,Fog:Sh,FogExp2:Mh,FramebufferTexture:EE,FrontSide:Gi,Frustum:Xo,FrustumArray:Th,GLBufferAttribute:GA,GLSL1:gT,GLSL3:Nd,GreaterCompare:zx,GreaterDepth:du,GreaterEqualCompare:Vx,GreaterEqualDepth:fu,GreaterEqualStencilFunc:aT,GreaterStencilFunc:sT,GridHelper:eC,Group:_s,HalfFloatType:Bs,HemisphereLight:Ry,HemisphereLightHelper:QA,IcosahedronGeometry:Ph,ImageBitmapLoader:yA,ImageLoader:ul,ImageUtils:Xx,IncrementStencilOp:Zw,IncrementWrapStencilOp:Jw,InstancedBufferAttribute:ko,InstancedBufferGeometry:om,InstancedInterleavedBuffer:Xu,InstancedMesh:ey,Int16BufferAttribute:iE,Int32BufferAttribute:rE,Int8BufferAttribute:eE,IntType:dh,InterleavedBuffer:Sl,InterleavedBufferAttribute:Ln,Interpolant:Cl,InterpolateDiscrete:Oo,InterpolateLinear:Qa,InterpolateSmooth:Gc,InterpolationSamplingMode:xT,InterpolationSamplingType:_T,InvertStencilOp:eT,KeepStencilOp:hs,KeyframeTrack:ui,LOD:Jx,LatheGeometry:Lh,Layers:yl,LessCompare:Fx,LessDepth:uu,LessEqualCompare:Op,LessEqualDepth:Ps,LessEqualStencilFunc:rT,LessStencilFunc:nT,Light:Xr,LightProbe:Oy,Line:Fr,Line3:Wy,LineBasicMaterial:Un,LineCurve:jp,LineCurve3:cy,LineDashedMaterial:My,LineLoop:ny,LineSegments:Xi,LinearFilter:qt,LinearInterpolant:nm,LinearMipMapLinearFilter:Vw,LinearMipMapNearestFilter:kw,LinearMipmapLinearFilter:_i,LinearMipmapNearestFilter:To,LinearSRGBColorSpace:Ls,LinearToneMapping:Sx,LinearTransfer:tl,Loader:Wn,LoaderUtils:kd,LoadingManager:rm,LoopOnce:Ix,LoopPingPong:Lx,LoopRepeat:Px,MOUSE:Fi,Material:Mn,MaterialLoader:zh,MathUtils:Wi,Matrix2:um,Matrix3:tt,Matrix4:Xe,MaxEquation:ax,Mesh:bt,MeshBasicMaterial:ci,MeshDepthMaterial:Qp,MeshDistanceMaterial:em,MeshLambertMaterial:yy,MeshMatcapMaterial:by,MeshNormalMaterial:xy,MeshPhongMaterial:vy,MeshPhysicalMaterial:gy,MeshStandardMaterial:Jp,MeshToonMaterial:_y,MinEquation:ox,MirroredRepeatWrapping:Po,MixOperation:bx,MultiplyBlending:Ld,MultiplyOperation:_l,NearestFilter:Yt,NearestMipMapLinearFilter:zw,NearestMipMapNearestFilter:Bw,NearestMipmapLinearFilter:ms,NearestMipmapNearestFilter:fh,NeutralToneMapping:Cx,NeverCompare:Ox,NeverDepth:lu,NeverStencilFunc:tT,NoBlending:ar,NoColorSpace:sr,NoToneMapping:Mi,NormalAnimationBlendMode:xh,NormalBlending:Ss,NotEqualCompare:kx,NotEqualDepth:pu,NotEqualStencilFunc:oT,NumberKeyframeTrack:al,Object3D:gt,ObjectLoader:_A,ObjectSpaceNormalMap:Nx,OctahedronGeometry:El,OneFactor:cx,OneMinusConstantAlphaFactor:yx,OneMinusConstantColorFactor:_x,OneMinusDstAlphaFactor:dx,OneMinusDstColorFactor:mx,OneMinusSrcAlphaFactor:au,OneMinusSrcColorFactor:hx,OrthographicCamera:cr,PCFShadowMap:Ep,PCFSoftShadowMap:Ap,PMREMGenerator:Wd,Path:Wu,PerspectiveCamera:Rt,Plane:mi,PlaneGeometry:Wr,PlaneHelper:oC,PointLight:Py,PointLightHelper:KA,Points:iy,PointsMaterial:Gp,PolarGridHelper:tC,PolyhedronGeometry:Gr,PositionalAudio:EA,PropertyBinding:ct,PropertyMixer:ky,QuadraticBezierCurve:$p,QuadraticBezierCurve3:qp,Quaternion:bn,QuaternionKeyframeTrack:Rl,QuaternionLinearInterpolant:Ay,RED_GREEN_RGTC2_Format:zu,RED_RGTC1_Format:Up,REVISION:Fs,RGBADepthPacking:Ux,RGBAFormat:sn,RGBAIntegerFormat:_h,RGBA_ASTC_10x10_Format:Du,RGBA_ASTC_10x5_Format:Iu,RGBA_ASTC_10x6_Format:Pu,RGBA_ASTC_10x8_Format:Lu,RGBA_ASTC_12x10_Format:Uu,RGBA_ASTC_12x12_Format:Nu,RGBA_ASTC_4x4_Format:Mu,RGBA_ASTC_5x4_Format:Su,RGBA_ASTC_5x5_Format:wu,RGBA_ASTC_6x5_Format:Tu,RGBA_ASTC_6x6_Format:Eu,RGBA_ASTC_8x5_Format:Au,RGBA_ASTC_8x6_Format:Cu,RGBA_ASTC_8x8_Format:Ru,RGBA_BPTC_Format:La,RGBA_ETC2_EAC_Format:bu,RGBA_PVRTC_2BPPV1_Format:_u,RGBA_PVRTC_4BPPV1_Format:vu,RGBA_S3TC_DXT1_Format:Ra,RGBA_S3TC_DXT3_Format:Ia,RGBA_S3TC_DXT5_Format:Pa,RGBDepthPacking:Yw,RGBFormat:Lp,RGBIntegerFormat:Hw,RGB_BPTC_SIGNED_Format:Ou,RGB_BPTC_UNSIGNED_Format:Fu,RGB_ETC1_Format:xu,RGB_ETC2_Format:yu,RGB_PVRTC_2BPPV1_Format:gu,RGB_PVRTC_4BPPV1_Format:mu,RGB_S3TC_DXT1_Format:Ca,RGDepthPacking:jw,RGFormat:Dp,RGIntegerFormat:vh,RawShaderMaterial:Oa,Ray:zs,Raycaster:Hy,RectAreaLight:Uy,RedFormat:gh,RedIntegerFormat:xl,ReinhardToneMapping:wx,RenderTarget:Bp,RenderTarget3D:kA,RepeatWrapping:Io,ReplaceStencilOp:qw,ReverseSubtractEquation:sx,RingGeometry:Dh,SIGNED_RED_GREEN_RGTC2_Format:ku,SIGNED_RED_RGTC1_Format:Bu,SRGBColorSpace:An,SRGBTransfer:wt,Scene:Us,ShaderChunk:ot,ShaderLib:gi,ShaderMaterial:pn,ShadowMaterial:my,Shape:Es,ShapeGeometry:Uh,ShapePath:Yy,ShapeUtils:xi,ShortType:Rp,Skeleton:wh,SkeletonHelper:ZA,SkinnedMesh:Qx,Source:Lr,Sphere:Jt,SphereGeometry:Al,Spherical:Hd,SphericalHarmonics3:Ny,SplineCurve:Zp,SpotLight:Iy,SpotLightHelper:qA,Sprite:Kx,SpriteMaterial:Vp,SrcAlphaFactor:ou,SrcAlphaSaturateFactor:gx,SrcColorFactor:ux,StaticCopyUsage:dT,StaticDrawUsage:nl,StaticReadUsage:uT,StereoCamera:MA,StreamCopyUsage:mT,StreamDrawUsage:cT,StreamReadUsage:fT,StringKeyframeTrack:Vs,SubtractEquation:rx,SubtractiveBlending:Pd,TOUCH:nr,TangentSpaceNormalMap:Vr,TetrahedronGeometry:Nh,Texture:Ot,TextureLoader:pA,TextureUtils:pC,Timer:WA,TimestampQuery:vT,TorusGeometry:Oh,TorusKnotGeometry:Fh,Triangle:Pn,TriangleFanDrawMode:Xw,TriangleStripDrawMode:Ww,TrianglesDrawMode:Gw,TubeGeometry:Bh,UVMapping:hh,Uint16BufferAttribute:zp,Uint32BufferAttribute:kp,Uint8BufferAttribute:tE,Uint8ClampedBufferAttribute:nE,Uniform:Vh,UniformsGroup:HA,UniformsLib:Re,UniformsUtils:Ds,UnsignedByteType:wi,UnsignedInt248Type:Do,UnsignedInt5999Type:Ip,UnsignedIntType:gr,UnsignedShort4444Type:ph,UnsignedShort5551Type:mh,UnsignedShortType:Lo,VSMShadowMap:Ni,Vector2:de,Vector3:U,Vector4:at,VectorKeyframeTrack:ll,VideoFrameTexture:TE,VideoTexture:ry,WebGL3DRenderTarget:HT,WebGLArrayRenderTarget:VT,WebGLCoordinateSystem:Jn,WebGLCubeRenderTarget:qx,WebGLRenderTarget:Ti,WebGLRenderer:Fa,WebGLUtils:Jy,WebGPUCoordinateSystem:Fo,WebXRController:Wc,WireframeGeometry:Kp,WrapAroundEnding:el,ZeroCurvatureEnding:gs,ZeroFactor:lx,ZeroSlopeEnding:vs,ZeroStencilOp:$w,createCanvasElement:Wx},Symbol.toStringTag,{value:"Module"}));function Br(n){return dl()?(Qu(n),!0):!1}function oi(){const n=new Set,e=s=>{n.delete(s)};return{on:s=>{n.add(s);const o=()=>e(s);return Br(o),{off:o}},off:e,trigger:(...s)=>Promise.all(Array.from(n).map(o=>o(...s))),clear:()=>{n.clear()}}}const Jf=new WeakMap,ZP=(...n)=>{var e;const t=n[0],i=(e=Hi())==null?void 0:e.proxy;if(i==null&&!bp())throw new Error("injectLocal must be called in setup");return i&&Jf.has(i)&&t in Jf.get(i)?Jf.get(i)[t]:Ms(...n)},Yd=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const KP=n=>n!=null,JP=Object.prototype.toString,QP=n=>JP.call(n)==="[object Object]",jd=()=>{};function e3(n,e){function t(...i){return new Promise((r,s)=>{Promise.resolve(n(()=>e.apply(this,i),{fn:e,thisArg:this,args:i})).then(r).catch(s)})}return t}function t3(n,e={}){let t,i,r=jd;const s=l=>{clearTimeout(l),r(),r=jd};let o;return l=>{const c=dt(n),u=dt(e.maxWait);return t&&s(t),c<=0||u!==void 0&&u<=0?(i&&(s(i),i=null),Promise.resolve(l())):new Promise((h,f)=>{r=e.rejectOnCancel?f:h,o=l,u&&!i&&(i=setTimeout(()=>{t&&s(t),i=null,h(o())},u)),t=setTimeout(()=>{i&&s(i),i=null,h(l())},c)})}}function H0(n){return n.endsWith("rem")?Number.parseFloat(n)*16:Number.parseFloat(n)}function n3(n,e,t=!1){return e.reduce((i,r)=>(r in n&&(!t||n[r]!==void 0)&&(i[r]=n[r]),i),{})}function i3(n){return Hi()}function Ba(n){return Array.isArray(n)?n:[n]}function r3(n,e=200,t={}){return e3(t3(e,t),n)}function G0(n,e=200,t={}){const i=Tt(n.value),r=r3(()=>{i.value=n.value},e,t);return Lt(n,()=>r()),i}function s3(n,e={}){if(!It(n))return kr(n);const t=Array.isArray(n.value)?Array.from({length:n.value.length}):{};for(const i in n.value)t[i]=vp(()=>({get(){return n.value[i]},set(r){var s;if((s=dt(e.replaceRef))!=null?s:!0)if(Array.isArray(n.value)){const a=[...n.value];a[i]=r,n.value=a}else{const a={...n.value,[i]:r};Object.setPrototypeOf(a,Object.getPrototypeOf(n.value)),n.value=a}else n.value[i]=r}}));return t}const cn=dt;function fm(n,e=!0,t){i3()?rh(n,t):e?n():_p(n)}function o3(n,e=1e3,t={}){const{immediate:i=!0,immediateCallback:r=!1}=t;let s=null;const o=lt(!1);function a(){s&&(clearInterval(s),s=null)}function l(){o.value=!1,a()}function c(){const u=dt(e);u<=0||(o.value=!0,r&&n(),a(),o.value&&(s=setInterval(n,u)))}if(i&&Yd&&c(),It(e)||typeof e=="function"){const u=Lt(e,()=>{o.value&&Yd&&c()});Br(u)}return Br(l),{isActive:o,pause:l,resume:c}}function eb(n,e,t){return Lt(n,e,{...t,immediate:!0})}const xr=Yd?window:void 0;function yi(n){var e;const t=dt(n);return(e=t?.$el)!=null?e:t}function Os(...n){const e=[],t=()=>{e.forEach(a=>a()),e.length=0},i=(a,l,c,u)=>(a.addEventListener(l,c,u),()=>a.removeEventListener(l,c,u)),r=it(()=>{const a=Ba(dt(n[0])).filter(l=>l!=null);return a.every(l=>typeof l!="string")?a:void 0}),s=eb(()=>{var a,l;return[(l=(a=r.value)==null?void 0:a.map(c=>yi(c)))!=null?l:[xr].filter(c=>c!=null),Ba(dt(r.value?n[1]:n[0])),Ba(Ge(r.value?n[2]:n[1])),dt(r.value?n[3]:n[2])]},([a,l,c,u])=>{if(t(),!a?.length||!l?.length||!c?.length)return;const h=QP(u)?{...u}:u;e.push(...a.flatMap(f=>l.flatMap(d=>c.map(p=>i(f,d,p,h)))))},{flush:"post"}),o=()=>{s(),t()};return Br(t),o}function a3(){const n=lt(!1),e=Hi();return e&&rh(()=>{n.value=!0},e),n}function Gh(n){const e=a3();return it(()=>(e.value,!!n()))}function l3(n,e,t={}){const{window:i=xr,...r}=t;let s;const o=Gh(()=>i&&"MutationObserver"in i),a=()=>{s&&(s.disconnect(),s=void 0)},l=it(()=>{const f=dt(n),d=Ba(f).map(yi).filter(KP);return new Set(d)}),c=Lt(()=>l.value,f=>{a(),o.value&&f.size&&(s=new MutationObserver(e),f.forEach(d=>s.observe(d,r)))},{immediate:!0,flush:"post"}),u=()=>s?.takeRecords(),h=()=>{c(),a()};return Br(h),{isSupported:o,stop:h,takeRecords:u}}function dm(n,e={}){const{immediate:t=!0,fpsLimit:i=void 0,window:r=xr,once:s=!1}=e,o=lt(!1),a=it(()=>i?1e3/dt(i):null);let l=0,c=null;function u(d){if(!o.value||!r)return;l||(l=d);const p=d-l;if(a.value&&p<a.value){c=r.requestAnimationFrame(u);return}if(l=d,n({delta:p,timestamp:d}),s){o.value=!1,c=null;return}c=r.requestAnimationFrame(u)}function h(){!o.value&&r&&(o.value=!0,l=0,c=r.requestAnimationFrame(u))}function f(){o.value=!1,c!=null&&r&&(r.cancelAnimationFrame(c),c=null)}return t&&h(),Br(f),{isActive:Cs(o),pause:f,resume:h}}const c3=Symbol("vueuse-ssr-width");function u3(){const n=bp()?ZP(c3,null):null;return typeof n=="number"?n:void 0}function tb(n,e={}){const{window:t=xr,ssrWidth:i=u3()}=e,r=Gh(()=>t&&"matchMedia"in t&&typeof t.matchMedia=="function"),s=lt(typeof i=="number"),o=lt(),a=lt(!1),l=c=>{a.value=c.matches};return Go(()=>{if(s.value){s.value=!r.value;const c=dt(n).split(",");a.value=c.some(u=>{const h=u.includes("not all"),f=u.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/),d=u.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);let p=!!(f||d);return f&&p&&(p=i>=H0(f[1])),d&&p&&(p=i<=H0(d[1])),h?!p:p});return}r.value&&(o.value=t.matchMedia(dt(n)),a.value=o.value.matches)}),Os(o,"change",l,{passive:!0}),it(()=>a.value)}function h3(n={}){const{window:e=xr}=n,t=lt(1),i=tb(()=>`(resolution: ${t.value}dppx)`,n);let r=jd;return e&&(r=eb(i,()=>t.value=e.devicePixelRatio)),{pixelRatio:Cs(t),stop:r}}function nb(n,e,t={}){const{window:i=xr,...r}=t;let s;const o=Gh(()=>i&&"ResizeObserver"in i),a=()=>{s&&(s.disconnect(),s=void 0)},l=it(()=>{const h=dt(n);return Array.isArray(h)?h.map(f=>yi(f)):[yi(h)]}),c=Lt(l,h=>{if(a(),o.value&&i){s=new ResizeObserver(e);for(const f of h)f&&s.observe(f,r)}},{immediate:!0,flush:"post"}),u=()=>{a(),c()};return Br(u),{isSupported:o,stop:u}}function f3(n,e={}){const{reset:t=!0,windowResize:i=!0,windowScroll:r=!0,immediate:s=!0,updateTiming:o="sync"}=e,a=lt(0),l=lt(0),c=lt(0),u=lt(0),h=lt(0),f=lt(0),d=lt(0),p=lt(0);function v(){const g=yi(n);if(!g){t&&(a.value=0,l.value=0,c.value=0,u.value=0,h.value=0,f.value=0,d.value=0,p.value=0);return}const M=g.getBoundingClientRect();a.value=M.height,l.value=M.bottom,c.value=M.left,u.value=M.right,h.value=M.top,f.value=M.width,d.value=M.x,p.value=M.y}function m(){o==="sync"?v():o==="next-frame"&&requestAnimationFrame(()=>v())}return nb(n,m),Lt(()=>yi(n),g=>!g&&m()),l3(n,m,{attributeFilter:["style","class"]}),r&&Os("scroll",m,{capture:!0,passive:!0}),i&&Os("resize",m,{passive:!0}),fm(()=>{s&&m()}),{height:a,bottom:l,left:c,right:u,top:h,width:f,x:d,y:p,update:m}}function d3(n,e={width:0,height:0},t={}){const{window:i=xr,box:r="content-box"}=t,s=it(()=>{var h,f;return(f=(h=yi(n))==null?void 0:h.namespaceURI)==null?void 0:f.includes("svg")}),o=lt(e.width),a=lt(e.height),{stop:l}=nb(n,([h])=>{const f=r==="border-box"?h.borderBoxSize:r==="content-box"?h.contentBoxSize:h.devicePixelContentBoxSize;if(i&&s.value){const d=yi(n);if(d){const p=d.getBoundingClientRect();o.value=p.width,a.value=p.height}}else if(f){const d=Ba(f);o.value=d.reduce((p,{inlineSize:v})=>p+v,0),a.value=d.reduce((p,{blockSize:v})=>p+v,0)}else o.value=h.contentRect.width,a.value=h.contentRect.height},t);fm(()=>{const h=yi(n);h&&(o.value="offsetWidth"in h?h.offsetWidth:e.width,a.value="offsetHeight"in h?h.offsetHeight:e.height)});const c=Lt(()=>yi(n),h=>{o.value=h?e.width:0,a.value=h?e.height:0});function u(){l(),c()}return{width:o,height:a,stop:u}}function p3(n){var e;const t=lt(0);if(typeof performance>"u")return t;const i=(e=n?.every)!=null?e:10;let r=performance.now(),s=0;return dm(()=>{if(s+=1,s>=i){const o=performance.now(),a=o-r;t.value=Math.round(1e3/(a/s)),r=o,s=0}}),t}function m3(n={}){const e=Tt(),t=Gh(()=>typeof performance<"u"&&"memory"in performance);if(t.value){const{interval:i=1e3}=n;o3(()=>{e.value=performance.memory},i,{immediate:n.immediate,immediateCallback:n.immediateCallback})}return{isSupported:t,memory:e}}const ib={x:0,y:0,pointerId:0,pressure:0,tiltX:0,tiltY:0,width:0,height:0,twist:0,pointerType:null},g3=Object.keys(ib);function v3(n={}){const{target:e=xr}=n,t=lt(!1),i=Tt(n.initialValue||{});Object.assign(i.value,ib,i.value);const r=s=>{t.value=!0,!(n.pointerTypes&&!n.pointerTypes.includes(s.pointerType))&&(i.value=n3(s,g3,!1))};if(e){const s={passive:!0};Os(e,["pointerdown","pointermove","pointerup"],r,s),Os(e,"pointerleave",()=>t.value=!1,s)}return{...s3(i),isInside:t}}function _3(n={}){const{window:e=xr,initialWidth:t=Number.POSITIVE_INFINITY,initialHeight:i=Number.POSITIVE_INFINITY,listenOrientation:r=!0,includeScrollbar:s=!0,type:o="inner"}=n,a=lt(t),l=lt(i),c=()=>{if(e)if(o==="outer")a.value=e.outerWidth,l.value=e.outerHeight;else if(o==="visual"&&e.visualViewport){const{width:h,height:f,scale:d}=e.visualViewport;a.value=Math.round(h*d),l.value=Math.round(f*d)}else s?(a.value=e.innerWidth,l.value=e.innerHeight):(a.value=e.document.documentElement.clientWidth,l.value=e.document.documentElement.clientHeight)};c(),fm(c);const u={passive:!0};if(Os("resize",c,u),e&&o==="visual"&&e.visualViewport&&Os(e.visualViewport,"resize",c,u),r){const h=tb("(orientation: portrait)");Lt(h,()=>c())}return{width:a,height:l}}var x3=Object.defineProperty,y3=(n,e,t)=>e in n?x3(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,W0=(n,e,t)=>y3(n,typeof e!="symbol"?e+"":e,t);const b3="@tresjs/core",M3="module",S3="4.3.6",w3="pnpm@10.6.3",T3="Declarative ThreeJS using Vue Components",E3="Alvaro Saburido <hola@alvarosaburido.dev> (https://github.com/alvarosabu/)",A3="MIT",C3={type:"git",url:"git+https://github.com/Tresjs/tres.git"},R3=["vue","3d","threejs","three","threejs-vue"],I3=!1,P3={".":{types:"./dist/index.d.ts",import:"./dist/tres.js",require:"./dist/tres.umd.cjs"},"./components":{types:"./dist/src/components/index.d.ts"},"./composables":{types:"./dist/src/composables/index.d.ts"},"./types":{types:"./dist/src/types/index.d.ts"},"./utils":{types:"./dist/src/utils/index.d.ts"},"./*":"./*"},L3="./dist/tres.js",D3="./dist/tres.js",U3="./dist/index.d.ts",N3=["*.d.ts","dist"],O3={access:"public"},F3={dev:"pnpm --filter='./playground/vue' dev","dev:nuxt":"pnpm --filter='./playground/nuxt' dev",build:"vite build",test:"vitest","test:ci":"vitest run","test:ui":"vitest --ui --coverage.enabled=true",release:"release-it",coverage:"vitest run --coverage",lint:"eslint .","lint:fix":"eslint . --fix","docs:dev":"vitepress dev docs","docs:build":"vitepress build docs","docs:serve":"vitepress serve docs","docs:preview":"vitepress preview docs","docs:contributors":"esno scripts/update-contributors.ts"},B3={three:">=0.133",vue:">=3.4"},z3={"@alvarosabu/utils":"^3.2.0","@vue/devtools-api":"^6.6.3","@vueuse/core":"^12.5.0"},k3={"@release-it/conventional-changelog":"^10.0.0","@stackblitz/sdk":"^1.11.0","@tresjs/cientos":"4.1.0","@tresjs/eslint-config":"^1.4.0","@types/three":"^0.173.0","@typescript-eslint/eslint-plugin":"^8.23.0","@typescript-eslint/parser":"^8.23.0","@vitejs/plugin-vue":"^5.2.1","@vitest/coverage-c8":"^0.33.0","@vitest/coverage-v8":"^3.0.5","@vitest/ui":"^3.0.5","@vue/test-utils":"^2.4.6",eslint:"^9.19.0","eslint-plugin-vue":"^9.32.0",esno:"^4.8.0",gsap:"^3.12.7",jsdom:"^26.0.0",kolorist:"^1.8.0",ohmyfetch:"^0.4.21",pathe:"^2.0.2","release-it":"^18.1.2","rollup-plugin-analyzer":"^4.0.0","rollup-plugin-copy":"^3.5.0","rollup-plugin-visualizer":"^5.14.0",sponsorkit:"^16.3.0",three:"^0.173.0",unocss:"^65.4.3",unplugin:"^2.1.2","unplugin-vue-components":"^28.0.0",vite:"^6.1.0","vite-plugin-banner":"^0.8.0","vite-plugin-dts":"4.5.0","vite-plugin-inspect":"^10.1.0","vite-plugin-require-transform":"^1.0.21","vite-svg-loader":"^5.1.0",vitepress:"1.6.3",vitest:"3.0.5",vue:"3.5.13","vue-demi":"^0.14.10"},V3={name:b3,type:M3,version:S3,packageManager:w3,description:T3,author:E3,license:A3,repository:C3,keywords:R3,sideEffects:I3,exports:P3,main:L3,module:D3,types:U3,files:N3,publishConfig:O3,scripts:F3,peerDependencies:B3,dependencies:z3,devDependencies:k3};let H3=class extends bt{constructor(...e){super(...e),W0(this,"type","HightlightMesh"),W0(this,"createTime"),this.createTime=Date.now()}onBeforeRender(){const e=(Date.now()-this.createTime)/1e3,t=1+.07*Math.sin(2.5*e);this.scale.set(t,t,t)}};function $d(n){return typeof n>"u"}function pm(n){return Array.isArray(n)}function G3(n){return typeof n=="number"}function rb(n){return typeof n=="string"}function bo(n){return typeof n=="function"}function Yi(n){return n===Object(n)&&!pm(n)&&!bo(n)}function Dr(n){return Yi(n)&&!!n.isObject3D}function sb(n){return Yi(n)&&!!n.isColor}function W3(n){return n!=null&&(typeof n=="string"||typeof n=="number"||sb(n))}function qd(n){return n!==null&&typeof n=="object"&&"set"in n&&typeof n.set=="function"}function X3(n){return qd(n)&&"copy"in n&&typeof n.copy=="function"}function Y3(n){return!!(n!=null&&n.constructor)}function X0(n){return n instanceof yl}function Y0(n){return Yi(n)&&!!n.isCamera}function j3(n){return Yi(n)&&!!n.isBufferGeometry}function $3(n){return Yi(n)&&!!n.isMaterial}function q3(n){return Yi(n)&&!!n.isLight}function Z3(n){return Yi(n)&&!!n.isFog}function K3(n){return Yi(n)&&!!n.isScene}function Ic(n){return Dr(n)||j3(n)||$3(n)||Z3(n)}function J3(n){return Yi(n)&&!!n.isPrimitive}const ob=(n,e)=>{for(const t of Object.keys(e))e[t]instanceof Object&&Object.assign(e[t],ob(n[t],e[t]));return Object.assign(n||{},e),n},Q3="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",eL=iL(Q3);function j0(n){return n&&n.nodeType===1}function Qf(n){return n.replace(/-([a-z])/g,(e,t)=>t.toUpperCase())}const tL=/\B([A-Z])/g;function nL(n){return n.replace(tL,"-$1").toLowerCase()}function iL(n,e){const t=Object.create(null),i=n.split(",");for(let r=0;r<i.length;r++)t[i[r]]=!0;return e?r=>!!t[r.toLowerCase()]:r=>!!t[r]}const $0=(n,e)=>{if(!e)return;const t=Array.isArray(e)?e:e.match(/([^[.\]])+/g);return t?.reduce((i,r)=>i&&i[r],n)},rL=(n,e,t)=>{const i=Array.isArray(e)?e:e.match(/([^[.\]])+/g);i&&i.reduce((r,s,o)=>(r[s]===void 0&&(r[s]={}),o===i.length-1&&(r[s]=t),r[s]),n)};function ab(n,e){if(j0(n)&&j0(e)){const r=n.attributes,s=e.attributes;return r.length!==s.length?!1:Array.from(r).every(({name:o,value:a})=>e.getAttribute(o)===a)}if(n===e)return!0;if(n===null||typeof n!="object"||e===null||typeof e!="object")return!1;const t=Object.keys(n),i=Object.keys(e);if(t.length!==i.length)return!1;for(const r of t)if(!i.includes(r)||!ab(n[r],e[r]))return!1;return!0}function sL(n,e){if(!Array.isArray(n)||!Array.isArray(e)||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(!ab(n[t],e[t]))return!1;return!0}function oL(n,e,t,i){const r=l=>{if(l.uuid===e)return l;for(const c of l.children){const u=r(c);if(u)return u}},s=r(n);if(!s){console.warn("Object with UUID not found in the scene.");return}let o=s;for(let l=0;l<t.length-1;l++)if(o[t[l]]!==void 0)o=o[t[l]];else{console.warn(`Property path is not valid: ${t.join(".")}`);return}const a=t[t.length-1];o[a]!==void 0?o[a]=i:console.warn(`Property path is not valid: ${t.join(".")}`)}function aL(n){const e=new ci({color:11003607,transparent:!0,opacity:.2,depthTest:!1,side:Hn});return new H3(n.geometry.clone(),e)}function lL(n){return"map"in n}function q0(n){lL(n)&&n.map&&n.map.dispose(),n.dispose()}function lb(n){var e,t;if(n.parent&&((e=n.removeFromParent)==null||e.call(n)),delete n.__tres,[...n.children].forEach(i=>lb(i)),!(n instanceof Us)){const i=n;n&&((t=n.dispose)==null||t.call(n)),i.geometry&&i.geometry.dispose(),Array.isArray(i.material)?i.material.forEach(r=>q0(r)):i.material&&q0(i.material)}}function cL(n,e){let t=0;for(let i=0;i<n.length;i++)e(n[i],i)&&(n[t]=n[i],t++);return n.length=t,n}function Zd(n,e){let t=n;if(e.includes("-")){const i=e.split("-");let r=i.shift();for(;t&&i.length;)r in t?(t=t[r],r=i.shift()):r=Z0(r,i.shift());return{target:t,key:Z0(r,...i)}}else return{target:t,key:e}}function Z0(...n){return n.map((e,t)=>t===0?e:e.charAt(0).toUpperCase()+e.slice(1)).join("")}const K0=/-\d+$/;function uL(n,e,t){if(rb(t)){if(K0.test(t)){const s=t.replace(K0,""),{target:o,key:a}=Zd(n,s);if(!Array.isArray(o[a])){const l=o[a],c=[];c.__tresDetach=()=>{c.every(u=>$d(u))&&(o[a]=l)},o[a]=c}}const{target:i,key:r}=Zd(n,t);e.__tres.previousAttach=i[r],i[r]=Ho(e)}else e.__tres.previousAttach=t(n,e)}function hL(n,e,t){var i,r,s;if(rb(t)){const{target:o,key:a}=Zd(n,t),l=e.__tres.previousAttach;l===void 0?delete o[a]:o[a]=l,"__tresDetach"in o&&o.__tresDetach()}else(r=(i=e.__tres)==null?void 0:i.previousAttach)==null||r.call(i,n,e);(s=e.__tres)==null||delete s.previousAttach}function ds(n,e,t){const i=n;return i.__tres={type:"unknown",eventCount:0,root:t,handlers:{},memoizedProps:{},objects:[],parent:null,previousAttach:null,...e},i.__tres.attach||(i.isMaterial?i.__tres.attach="material":i.isBufferGeometry?i.__tres.attach="geometry":i.isFog&&(i.__tres.attach="fog")),i}function cb(n){var e;const t=(e=n?.__tres)==null?void 0:e.root;t&&t.render&&t.render.canBeInvalidated.value&&t.invalidate()}function fL(n,e,t){var i;if(!bo(n.setPixelRatio))return;let r=0;if(t&&pm(t)&&t.length>=2){const[s,o]=t;r=Wi.clamp(e,s,o)}else G3(t)?r=t:r=e;r!==((i=n.getPixelRatio)==null?void 0:i.call(n))&&n.setPixelRatio(r)}function dL(n,e,t,i,r){const s=[...e.__tres.objects],o=Ho(e);if(n=Ho(n),o===n)return!0;const a=ds(n,e.__tres??{},r),l=e.parent??e.__tres.parent??null,c={...e.__tres.memoizedProps};delete c.object;for(const u of s)ub(u,r),hb(u,r);o.__tres.objects=[],i.remove(e);for(const[u,h]of Object.entries(c))i.patchProp(a,u,a[u],h);t(n),i.insert(e,l);for(const u of s)i.insert(u,e);return!0}function Ho(n){return J3(n)?(n.object.__tres=n.__tres,n.object):n}function ub(n,e){var t,i,r,s;const o=((t=n.__tres)==null?void 0:t.parent)||e.scene.value;n.__tres&&(n.__tres.parent=null),o&&o.__tres&&"objects"in o.__tres&&cL(o.__tres.objects,a=>a!==n),(i=n.__tres)!=null&&i.attach?hL(o,n,n.__tres.attach):((s=(r=n.parent)==null?void 0:r.remove)==null||s.call(r,Ho(n)),n.parent=null)}function hb(n,e){var t;(t=n.traverse)==null||t.call(n,i=>{var r;e.deregisterCamera(i),(r=e.eventManager)==null||r.deregisterPointerMissedObject(i)}),e.deregisterCamera(n),cb(n)}const pL=({sizes:n})=>{const e=Tt([]),t=it(()=>e.value[0]),i=o=>{const a=o instanceof bl?o:e.value.find(c=>c.uuid===o);if(!a)return;const l=e.value.filter(({uuid:c})=>c!==a.uuid);e.value=[a,...l]},r=(o,a=!1)=>{if(Y0(o)){const l=o;if(e.value.some(({uuid:c})=>c===l.uuid))return;a?i(l):e.value.push(l)}},s=o=>{if(Y0(o)){const a=o;e.value=e.value.filter(({uuid:l})=>l!==a.uuid)}};return Go(()=>{n.aspectRatio.value&&e.value.forEach(o=>{!o.manual&&(o instanceof Rt||mL(o))&&(o instanceof Rt?o.aspect=n.aspectRatio.value:(o.left=n.width.value*-.5,o.right=n.width.value*.5,o.top=n.height.value*.5,o.bottom=n.height.value*-.5),o.updateProjectionMatrix())})}),Si(()=>{e.value=[]}),{camera:t,cameras:e,registerCamera:r,deregisterCamera:s,setCameraActive:i}};function mL(n){return n.hasOwnProperty("isOrthographicCamera")&&n.isOrthographicCamera}const Yu="[TresJS ▲ ■ ●] ";function gL(...n){typeof n[0]=="string"?n[0]=Yu+n[0]:n.unshift(Yu),console.error(...n)}function vL(...n){typeof n[0]=="string"?n[0]=Yu+n[0]:n.unshift(Yu),console.warn(...n)}function _L(n,e){}function fb(){return{logError:gL,logWarning:vL,logMessage:_L}}const Kd=Tt({}),ju=n=>Object.assign(Kd.value,n);function ed(){const n=new Map,e=new Set;let t=0,i=!1;const r=()=>{const o=Array.from(n.entries()).sort((a,l)=>{const c=a[1].priority-l[1].priority;return c===0?a[1].addI-l[1].addI:c});e.clear(),o.forEach(a=>e.add(a[0]))},s=o=>{n.delete(o),e.delete(o)};return{on:(o,a=0)=>{n.set(o,{priority:a,addI:t++});const l=()=>s(o);return Br(l),i=!0,{off:l}},off:s,trigger:(...o)=>{i&&(r(),i=!1),e.forEach(a=>a(...o))},dispose:()=>{n.clear(),e.clear()},get count(){return n.size}}}function xL(){let n=!0,e=!0,t=!1;const i=new kh(!1),r=Tt(i.running),s=Tt(!1);let o;const a=Wi.generateUUID();let l=null;const c=ed(),u=ed(),h=ed();w();let f={};function d(E){f=E}function p(E,S,_=0){switch(S){case"before":return c.on(E,_);case"render":return l||(l=E),u.dispose(),u.on(E);case"after":return h.on(E,_)}}function v(){e&&(e=!1,w(),C())}function m(){e=!0,w(),cancelAnimationFrame(o)}function g(){t=!1,w()}function M(){t=!0,w()}function y(){s.value=!0}function b(){s.value=!1}function C(){if(!n){o=requestAnimationFrame(C);return}const E=i.getDelta(),S=i.getElapsedTime(),_={camera:Ge(f.camera),scene:Ge(f.scene),renderer:Ge(f.renderer),raycaster:Ge(f.raycaster),controls:Ge(f.controls),invalidate:f.invalidate,advance:f.advance},x={delta:E,elapsed:S,clock:i,..._};r.value&&c.trigger(x),s.value||(u.count?u.trigger(x):l&&l(x)),r.value&&h.trigger(x),o=requestAnimationFrame(C)}function w(){const E=!e&&!t;i.running!==E&&(i.running?i.stop():i.start()),r.value=i.running}return{loopId:a,register:(E,S,_)=>p(E,S,_),start:v,stop:m,pause:M,resume:g,pauseRender:y,resumeRender:b,isRenderPaused:s,isActive:r,setContext:d,setReady:E=>n=E}}function mm(n){let e=0;return n.traverse(t=>{if(t.isMesh&&t.geometry&&t.type!=="HightlightMesh"){const i=t.geometry,r=i.attributes.position.count*3*Float32Array.BYTES_PER_ELEMENT,s=i.index?i.index.count*Uint32Array.BYTES_PER_ELEMENT:0,o=i.attributes.normal?i.attributes.normal.count*3*Float32Array.BYTES_PER_ELEMENT:0,a=i.attributes.uv?i.attributes.uv.count*2*Float32Array.BYTES_PER_ELEMENT:0,l=r+s+o+a;e+=l}}),e}function yL(n){return(n/1024).toFixed(2)}const bL=Number.parseInt(Fs.replace("dev",""));function vo(n){return n instanceof Ae?n:Array.isArray(n)?new Ae(...n):new Ae(n)}const Pc={realistic:{shadows:!0,physicallyCorrectLights:!0,outputColorSpace:An,toneMapping:uh,toneMappingExposure:3,shadowMap:{enabled:!0,type:Ap}},flat:{toneMapping:Mi,toneMappingExposure:1}};function ML({canvas:n,options:e,contextParts:{sizes:t,render:i,invalidate:r,advance:s}}){const o=it(()=>({alpha:cn(e.alpha)??!0,depth:cn(e.depth),canvas:yi(n),context:cn(e.context),stencil:cn(e.stencil),antialias:cn(e.antialias)??!0,precision:cn(e.precision),powerPreference:cn(e.powerPreference),premultipliedAlpha:cn(e.premultipliedAlpha),preserveDrawingBuffer:cn(e.preserveDrawingBuffer),logarithmicDepthBuffer:cn(e.logarithmicDepthBuffer),failIfMajorPerformanceCaveat:cn(e.failIfMajorPerformanceCaveat)})),a=lt(new Fa(o.value));function l(){e.renderMode==="on-demand"&&r()}Lt(o,()=>{a.value.dispose(),a.value=new Fa(o.value),l()}),Lt([t.width,t.height],()=>{a.value.setSize(t.width.value,t.height.value),l()},{immediate:!0}),Lt(()=>e.clearColor,l);const{pixelRatio:c}=h3(),{logError:u}=fb(),h=(()=>{const d=new Fa,p={shadowMap:{enabled:d.shadowMap.enabled,type:d.shadowMap.type},toneMapping:d.toneMapping,toneMappingExposure:d.toneMappingExposure,outputColorSpace:d.outputColorSpace};return d.dispose(),p})(),f=cn(e.renderMode);return f==="on-demand"&&r(),f==="manual"&&setTimeout(()=>{s()},100),Go(()=>{const d=cn(e.preset);d&&(d in Pc||u(`Renderer Preset must be one of these: ${Object.keys(Pc).join(", ")}`),ob(a.value,Pc[d])),fL(a.value,c.value,cn(e.dpr)),f==="always"&&(i.frames.value=Math.max(1,i.frames.value));const p=(g,M)=>{const y=cn(g),b=()=>{if(d)return $0(Pc[d],M)};if(y!==void 0)return y;const C=b();return C!==void 0?C:$0(h,M)},v=(g,M)=>rL(a.value,M,p(g,M));v(e.shadows,"shadowMap.enabled"),v(e.toneMapping??uh,"toneMapping"),v(e.shadowMapType,"shadowMap.type"),bL<150&&v(!e.useLegacyLights,"physicallyCorrectLights"),v(e.outputColorSpace,"outputColorSpace"),v(e.toneMappingExposure,"toneMappingExposure");const m=p(e.clearColor,"clearColor");m&&a.value.setClearColor(m?vo(m):new Ae(0))}),Si(()=>{a.value.dispose(),a.value.forceContextLoss()}),{renderer:a}}function SL(n,e,t=10){const i=cn(n)?_3():d3(it(()=>cn(e).parentElement)),r=Cs(G0(i.width,t)),s=Cs(G0(i.height,t)),o=it(()=>r.value/s.value);return{height:s,width:r,aspectRatio:o}}const wL=(n,e)=>{const t=it(()=>e.renderer.value.domElement),i=lt([]),{x:r,y:s}=v3({target:t});let o=0;const{width:a,height:l,top:c,left:u}=f3(t),h=({x:oe,y:Ee})=>{if(t.value)return{x:(oe-u.value)/a.value*2-1,y:-((Ee-c.value)/l.value)*2+1}},f=({x:oe,y:Ee})=>{if(e.camera.value)return e.raycaster.value.setFromCamera(new de(oe,Ee),e.camera.value),i.value=e.raycaster.value.intersectObjects(n.value,!0),i.value},d=oe=>{const Ee=h({x:oe?.clientX??r.value,y:oe?.clientY??s.value});return Ee?f(Ee)||[]:[]},p=oi(),v=oi(),m=oi(),g=oi(),M=oi(),y=oi(),b=oi(),C=oi();function w(oe){const Ee={};for(const Ve in oe)typeof Ve!="function"&&(Ee[Ve]=oe[Ve]);return Ee}const E=(oe,Ee)=>{var Ve,ze,ae;const ye=w(Ee),_e=new U(Ee?.clientX,Ee?.clientY,0).unproject((Ve=e.camera)==null?void 0:Ve.value);oe.trigger({...ye,intersections:i.value,unprojectedPoint:_e,ray:(ze=e.raycaster)==null?void 0:ze.value.ray,camera:(ae=e.camera)==null?void 0:ae.value,sourceEvent:Ee,delta:o,stopPropagating:!1})};let S;const _=oe=>{d(oe),E(m,oe),S=oe},x=()=>{S&&_(S)};let A,D,k;const W=oe=>{var Ee;A=(Ee=i.value[0])==null?void 0:Ee.object,o=0,D=new de(oe?.clientX??r.value,oe?.clientY??s.value),E(M,oe)};let Y,z=!1;const Q=oe=>{var Ee,Ve,ze;oe instanceof PointerEvent&&(i.value.length===0&&E(y,oe),A===((Ee=i.value[0])==null?void 0:Ee.object)&&(k=new de(oe?.clientX??r.value,oe?.clientY??s.value),o=D?.distanceTo(k),oe.button===0?(E(p,oe),Y===((Ve=i.value[0])==null?void 0:Ve.object)?z=!0:(Y=(ze=i.value[0])==null?void 0:ze.object,z=!1)):oe.button===2&&E(b,oe)),E(g,oe))},Z=oe=>{z&&(E(v,oe),Y=void 0,z=!1)},he=oe=>E(m,oe),me=oe=>E(C,oe);return t.value.addEventListener("pointerup",Q),t.value.addEventListener("pointerdown",W),t.value.addEventListener("pointermove",_),t.value.addEventListener("pointerleave",he),t.value.addEventListener("dblclick",Z),t.value.addEventListener("wheel",me),Si(()=>{t!=null&&t.value&&(t.value.removeEventListener("pointerup",Q),t.value.removeEventListener("pointerdown",W),t.value.removeEventListener("pointermove",_),t.value.removeEventListener("pointerleave",he),t.value.removeEventListener("dblclick",Z),t.value.removeEventListener("wheel",me))}),{intersects:i,onClick:oe=>p.on(oe).off,onDblClick:oe=>v.on(oe).off,onContextMenu:oe=>b.on(oe).off,onPointerMove:oe=>m.on(oe).off,onPointerUp:oe=>g.on(oe).off,onPointerDown:oe=>M.on(oe).off,onPointerMissed:oe=>y.on(oe).off,onWheel:oe=>C.on(oe).off,forceUpdate:x}};function td(n,e){if(Array.isArray(n))for(const t of n)t(e);typeof n=="function"&&n(e)}function TL(n,e,t){var i;const r=lt(),s=lt();n&&(r.value=n),e&&(s.value=e);const o=_=>{var x;return((x=_.__tres)==null?void 0:x.eventCount)>0},a=_=>{var x;return((x=_.children)==null?void 0:x.some(A=>a(A)))||o(_)},l=lt(((i=r.value)==null?void 0:i.children).filter(a)||[]);function c(_,x){const A=[],D=()=>x.stopPropagating=!0;x.stopPropagation=D;for(const k of x?.intersections){if(x.stopPropagating)return;x={...x,...k};const{object:W}=k;x.eventObject=W,td(W[_],x),A.push(W);let Y=W.parent;for(;Y!==null&&!x.stopPropagating&&!A.includes(Y);)x.eventObject=Y,td(Y[_],x),A.push(Y),Y=Y.parent;const z=nL(_.slice(2));t(z,{intersection:k,event:x})}}const{onClick:u,onDblClick:h,onContextMenu:f,onPointerMove:d,onPointerDown:p,onPointerUp:v,onPointerMissed:m,onWheel:g,forceUpdate:M}=wL(l,e);v(_=>c("onPointerUp",_)),p(_=>c("onPointerDown",_)),u(_=>c("onClick",_)),h(_=>c("onDoubleClick",_)),f(_=>c("onContextMenu",_)),g(_=>c("onWheel",_));let y=[];d(_=>{const x=_.intersections.map(({object:D})=>D),A=_.intersections;y.forEach(({object:D})=>{x.includes(D)||(_.intersections=y,c("onPointerLeave",_),c("onPointerOut",_))}),_.intersections=A,_.intersections.forEach(({object:D})=>{y.includes(D)||(c("onPointerEnter",_),c("onPointerOver",_))}),c("onPointerMove",_),y=_.intersections});const b=[];m(_=>{const x=()=>_.stopPropagating=!0;_.stopPropagation=x,b.forEach(A=>{_.stopPropagating||(_.eventObject=A,td(A.onPointerMissed,_))}),t("pointer-missed",{event:_})});function C(_){Ic(_)&&Dr(_)&&l.value.push(_)}function w(_){if(Ic(_)&&Dr(_)){const x=l.value.indexOf(_);x>-1&&l.value.splice(x,1)}}function E(_){Ic(_)&&Dr(_)&&_.onPointerMissed&&b.push(_)}function S(_){if(Ic(_)&&Dr(_)){const x=b.indexOf(_);x>-1&&b.splice(x,1)}}return e.eventManager={forceUpdate:M,registerObject:C,deregisterObject:w,registerPointerMissedObject:E,deregisterPointerMissedObject:S},{forceUpdate:M,registerObject:C,deregisterObject:w,registerPointerMissedObject:E,deregisterPointerMissedObject:S}}function EL(n,e,t=100){t=t<=0?100:t;const i=oi(),r=new Set;let s=!1,o=!1,a=null;function l(){a&&clearTimeout(a),!o&&!s&&n()?(i.trigger(e),r.forEach(h=>h()),r.clear(),s=!0):!o&&!s&&(a=setTimeout(l,t))}function c(){o=!0,a&&clearTimeout(a)}l();const u=(h,...f)=>{h(...f)};return{on:h=>{if(s)return u(h,e),{off:()=>{}};{const f=i.on(h);return r.add(f.off),i.on(h)}},off:i.off,trigger:i.trigger,clear:i.clear,cancel:c}}const nd=new WeakMap;function AL(n){if(n=n||Hs(),nd.has(n))return nd.get(n);const e=100,t=Date.now(),i=EL(()=>{if(Date.now()-t>=e)return!0;{const r=n.renderer.value,s=r?.domElement||{width:0,height:0};return!!(r&&s.width>0&&s.height>0)}},n);return nd.set(n,i),i}function CL({scene:n,canvas:e,windowSize:t,rendererOptions:i,emit:r}){const s=lt(n),o=SL(t,e),{camera:a,cameras:l,registerCamera:c,deregisterCamera:u,setCameraActive:h}=pL({sizes:o}),f={mode:Tt(i.renderMode||"always"),priority:Tt(0),frames:Tt(0),maxFrames:60,canBeInvalidated:it(()=>f.mode.value==="on-demand"&&f.frames.value===0)};function d(k=1){i.renderMode==="on-demand"&&(f.frames.value=Math.min(f.maxFrames,f.frames.value+k))}function p(){i.renderMode==="manual"&&(f.frames.value=1)}const{renderer:v}=ML({canvas:e,options:i,contextParts:{sizes:o,render:f,invalidate:d,advance:p}}),m={sizes:o,scene:s,camera:a,cameras:Cs(l),renderer:v,raycaster:lt(new Hy),controls:Tt(null),perf:{maxFrames:160,fps:{value:0,accumulator:[]},memory:{currentMem:0,allocatedMem:0,accumulator:[]}},render:f,advance:p,extend:ju,invalidate:d,registerCamera:c,setCameraActive:h,deregisterCamera:u,loop:xL()};Ea("useTres",m),m.scene.value.__tres={root:m},m.loop.register(()=>{a.value&&f.frames.value>0&&(v.value.render(n,a.value),r("render",m.renderer.value)),f.priority.value=0,f.mode.value==="always"?f.frames.value=1:f.frames.value=Math.max(0,f.frames.value-1)},"render");const{on:g,cancel:M}=AL(m);m.loop.setReady(!1),m.loop.start(),g(()=>{r("ready",m),m.loop.setReady(!0),TL(n,m,r)}),Si(()=>{M(),m.loop.stop()});const y=100,b=p3({every:y}),{isSupported:C,memory:w}=m3({interval:y}),E=160;let S=performance.now();const _=({timestamp:k})=>{m.scene.value&&(m.perf.memory.allocatedMem=mm(m.scene.value)),k-S>=y&&(S=k,m.perf.fps.accumulator.push(b.value),m.perf.fps.accumulator.length>E&&m.perf.fps.accumulator.shift(),m.perf.fps.value=b.value,C.value&&w.value&&(m.perf.memory.accumulator.push(w.value.usedJSHeapSize/1024/1024),m.perf.memory.accumulator.length>E&&m.perf.memory.accumulator.shift(),m.perf.memory.currentMem=m.perf.memory.accumulator.reduce((W,Y)=>W+Y,0)/m.perf.memory.accumulator.length))};let x=0;const A=1,{pause:D}=dm(({delta:k})=>{window.__TRES__DEVTOOLS__&&(_({timestamp:performance.now()}),x+=k,x>=A&&(window.__TRES__DEVTOOLS__.cb(m),x=0))},{immediate:!0});return Si(()=>{D()}),m}function Hs(){const n=Ms("useTres");if(!n)throw new Error("useTresContext must be used together with useTresContextProvider");return n}function gm(){const{camera:n,scene:e,renderer:t,loop:i,raycaster:r,controls:s,invalidate:o,advance:a}=Hs();i.setContext({camera:n,scene:e,renderer:t,raycaster:r,controls:s,invalidate:o,advance:a});function l(h,f=0){return i.register(h,"before",f)}function c(h){return i.register(h,"render")}function u(h,f=0){return i.register(h,"after",f)}return{pause:i.pause,resume:i.resume,pauseRender:i.pauseRender,resumeRender:i.resumeRender,isActive:i.isActive,onBeforeRender:l,render:c,onAfterRender:u}}const RL=oi(),IL=oi(),db=oi(),za=new kh;let Yc=0,jc=0;dm(()=>{RL.trigger({delta:Yc,elapsed:jc,clock:za}),IL.trigger({delta:Yc,elapsed:jc,clock:za}),db.trigger({delta:Yc,elapsed:jc,clock:za})},{immediate:!1});db.on(()=>{Yc=za.getDelta(),jc=za.getElapsedTime()});function PL(n,e={},t={}){let i=n;const r=a=>{i=a};let s=new Proxy({},{});const o={has(a,l){return l in e||l in i},get(a,l,c){return l in e?e[l](i):i[l]},set(a,l,c){return t[l]?t[l](c,i,s,r):i[l]=c,!0}};return s=new Proxy({},o),s}const{logError:J0}=fb(),Q0=["onClick","onContextMenu","onPointerMove","onPointerEnter","onPointerLeave","onPointerOver","onPointerOut","onDoubleClick","onPointerDown","onPointerUp","onPointerCancel","onPointerMissed","onLostPointerCapture","onWheel"],LL=n=>{const e=n.scene.value;function t(c,u,h,f){if(f||(f={}),f.args||(f.args=[]),c==="template"||eL(c))return null;let d=c.replace("Tres",""),p;if(c==="primitive"){(!Yi(f.object)||It(f.object))&&J0("Tres primitives need an 'object' prop, whose value is an object or shallowRef<object>"),d=f.object.type;const v={};p=PL(f.object,{object:m=>m,isPrimitive:()=>!0,__tres:()=>v},{object:(m,g,M,y)=>{dL(m,M,y,{patchProp:s,remove:r,insert:i},n)},__tres:m=>{Object.assign(v,m)}})}else{const v=Kd.value[d];v||J0(`${d} is not defined on the THREE namespace. Use extend to add it to the catalog.`),p=new v(...f.args)}return p?(p.isCamera&&(f!=null&&f.position||p.position.set(3,3,3),f!=null&&f.lookAt||p.lookAt(0,0,0)),p=ds(p,{...p.__tres,type:d,memoizedProps:f,eventCount:0,primitive:c==="primitive",attach:f.attach},n),p):null}function i(c,u){var h,f,d;if(!c)return;u=u||e;const p=c.__tres?c:ds(c,{},n),v=u.__tres?u:ds(u,{},n);c=Ho(p),u=Ho(v),c.__tres&&((h=c.__tres)==null?void 0:h.eventCount)>0&&((f=n.eventManager)==null||f.registerObject(c)),n.registerCamera(c),(d=n.eventManager)==null||d.registerPointerMissedObject(c),p.__tres.attach?uL(v,p,p.__tres.attach):Dr(c)&&Dr(v)&&(v.add(c),c.dispatchEvent({type:"added"})),p.__tres.parent=v,v.__tres.objects&&!v.__tres.objects.includes(p)&&v.__tres.objects.push(p)}function r(c,u){var h,f,d,p;if(!c)return;c!=null&&c.__tres&&((h=c.__tres)==null?void 0:h.eventCount)>0&&((f=n.eventManager)==null||f.deregisterObject(c)),u=$d(u)?"default":u;const v=(d=c.__tres)==null?void 0:d.dispose;$d(v)||(v===null?u=!1:u=v);const m=(p=c.__tres)==null?void 0:p.primitive,g=u==="default"?!m:!!u;if(c.__tres&&"objects"in c.__tres&&[...c.__tres.objects].forEach(M=>r(M,u)),g&&c.children&&[...c.children].forEach(M=>r(M,u)),ub(c,n),hb(c,n),g&&!K3(c)){if(bo(u))u(c);else if(bo(c.dispose))try{c.dispose()}catch{}}"__tres"in c&&delete c.__tres}function s(c,u,h,f){var d,p;if(!c)return;let v=c,m=u;if(c.__tres&&(c.__tres.memoizedProps[u]=f),u==="attach"){const b=((d=c.__tres)==null?void 0:d.parent)||c.parent;r(c),ds(c,{attach:f},n),b&&i(c,b);return}if(u==="dispose"){c.__tres||(c=ds(c,{},n)),c.__tres.dispose=f;return}if(Dr(c)&&m==="blocks-pointer-events"){f||f===""?c[m]=f:delete c[m];return}Q0.includes(u)&&c.__tres&&(c.__tres.eventCount+=1);let g=Qf(m),M=v?.[g];if(m==="args"){const b=c,C=h??[],w=f??[],E=((p=c.__tres)==null?void 0:p.type)||c.type;E&&C.length&&!sL(C,w)&&(v=Object.assign(b,new Kd.value[E](...f)));return}if(v.type==="BufferGeometry"){if(m==="args")return;v.setAttribute(Qf(m),new mt(...f));return}if(m.includes("-")&&M===void 0){M=v;for(const b of m.split("-"))g=m=Qf(b),v=M,M=M?.[m]}let y=f;if(y===""&&(y=!0),bo(M)){Q0.includes(u)||(pm(y)?c[g](...y):c[g](y)),g.startsWith("on")&&bo(y)&&(v[g]=y);return}X0(M)&&X0(y)?M.mask=y.mask:sb(M)&&W3(y)?M.set(y):X3(M)&&Y3(y)&&M.constructor===y.constructor?M.copy(y):qd(M)&&Array.isArray(y)?"fromArray"in M&&typeof M.fromArray=="function"?M.fromArray(y):M.set(...y):qd(M)&&typeof y=="number"?"setScalar"in M&&typeof M.setScalar=="function"?M.setScalar(y):M.set(y):v[g]=y,cb(c)}function o(c){var u;return((u=c?.__tres)==null?void 0:u.parent)||null}function a(c){const u=ds(new gt,{type:"Comment"},n);return u.name=c,u}function l(c){var u;const h=o(c),f=((u=h?.__tres)==null?void 0:u.objects)||[],d=f.indexOf(c);return d<0||d>=f.length-1?null:f[d+1]}return{insert:i,remove:r,createElement:t,patchProp:s,parentNode:o,createText:()=>{},createComment:a,setText:()=>{},setElementText:()=>{},nextSibling:l,querySelector:()=>{},setScopeId:()=>{},cloneNode:()=>{},insertStaticContent:()=>{}}};function DL(){return pb().__VUE_DEVTOOLS_GLOBAL_HOOK__}function pb(){return typeof navigator<"u"&&typeof window<"u"?window:typeof globalThis<"u"?globalThis:{}}const UL=typeof Proxy=="function",NL="devtools-plugin:setup",OL="plugin:settings:set";let ca,Jd;function FL(){var n;return ca!==void 0||(typeof window<"u"&&window.performance?(ca=!0,Jd=window.performance):typeof globalThis<"u"&&!((n=globalThis.perf_hooks)===null||n===void 0)&&n.performance?(ca=!0,Jd=globalThis.perf_hooks.performance):ca=!1),ca}function BL(){return FL()?Jd.now():Date.now()}class zL{constructor(e,t){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=t;const i={};if(e.settings)for(const o in e.settings){const a=e.settings[o];i[o]=a.defaultValue}const r=`__vue-devtools-plugin-settings__${e.id}`;let s=Object.assign({},i);try{const o=localStorage.getItem(r),a=JSON.parse(o);Object.assign(s,a)}catch{}this.fallbacks={getSettings(){return s},setSettings(o){try{localStorage.setItem(r,JSON.stringify(o))}catch{}s=o},now(){return BL()}},t&&t.on(OL,(o,a)=>{o===this.plugin.id&&this.fallbacks.setSettings(a)}),this.proxiedOn=new Proxy({},{get:(o,a)=>this.target?this.target.on[a]:(...l)=>{this.onQueue.push({method:a,args:l})}}),this.proxiedTarget=new Proxy({},{get:(o,a)=>this.target?this.target[a]:a==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(a)?(...l)=>(this.targetQueue.push({method:a,args:l,resolve:()=>{}}),this.fallbacks[a](...l)):(...l)=>new Promise(c=>{this.targetQueue.push({method:a,args:l,resolve:c})})})}async setRealTarget(e){this.target=e;for(const t of this.onQueue)this.target.on[t.method](...t.args);for(const t of this.targetQueue)t.resolve(await this.target[t.method](...t.args))}}function kL(n,e){const t=n,i=pb(),r=DL(),s=UL&&t.enableEarlyProxy;if(r&&(i.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!s))r.emit(NL,n,e);else{const o=s?new zL(t,r):null;(i.__VUE_DEVTOOLS_PLUGINS__=i.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:t,setupFn:e,proxy:o}),o&&e(o.proxiedTarget)}}function VL(n,e){const t=`▲ ■ ●${n}`;typeof ev=="function"?ev(t,e):console.log(t)}function ev(n,e){throw new Error(n+e)}const mb=n=>{const e={id:n.uuid,label:n.type,children:[],tags:[]};n.name!==""&&e.tags.push({label:n.name,textColor:5750629,backgroundColor:15793395});const t=mm(n);return t>0&&e.tags.push({label:`${yL(t)} KB`,textColor:15707189,backgroundColor:16775644,tooltip:"Memory usage"}),n.type.includes("Light")&&(q3(n)&&e.tags.push({label:`${n.intensity}`,textColor:9738662,backgroundColor:16316922,tooltip:"Intensity"}),e.tags.push({label:`#${new Ae(n.color).getHexString()}`,textColor:9738662,backgroundColor:16316922,tooltip:"Color"})),n.type.includes("Camera")&&(e.tags.push({label:`${n.fov}°`,textColor:9738662,backgroundColor:16316922,tooltip:"Field of view"}),e.tags.push({label:`x: ${Math.round(n.position.x)} y: ${Math.round(n.position.y)} z: ${Math.round(n.position.z)}`,textColor:9738662,backgroundColor:16316922,tooltip:"Position"})),e};function gb(n,e,t=""){n.children.forEach(i=>{if(i.type==="HightlightMesh"||t&&!i.type.includes(t)&&!i.name.includes(t))return;const r=mb(i);e.children.push(r),gb(i,r,t)})}const HL=[],ua="tres:inspector",GL=pl({sceneGraph:null});function WL(n,e){kL({id:"dev.esm.tres",label:"TresJS 🪐",logo:"https://raw.githubusercontent.com/Tresjs/tres/main/public/favicon.svg",packageName:"tresjs",homepage:"https://tresjs.org",componentStateTypes:HL,app:n},t=>{typeof t.now!="function"&&VL("You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."),t.addInspector({id:ua,label:"TresJS 🪐",icon:"account_tree",treeFilterPlaceholder:"Search instances"}),setInterval(()=>{t.sendInspectorTree(ua)},1e3),setInterval(()=>{t.notifyComponentUpdate()},5e3),t.on.getInspectorTree(s=>{if(s.inspectorId===ua){const o=mb(e.scene.value);gb(e.scene.value,o,s.filter),GL.sceneGraph=o,s.rootNodes=[o]}});let i=null,r=null;t.on.getInspectorState(s=>{var o;if(s.inspectorId===ua){const[a]=e.scene.value.getObjectsByProperty("uuid",s.nodeId);if(!a)return;if(r&&i&&i.parent&&r.remove(i),a.isMesh){const l=aL(a);a.add(l),i=l,r=a}s.state={object:Object.entries(a).map(([l,c])=>l==="children"?{key:l,value:c.filter(u=>u.type!=="HightlightMesh")}:{key:l,value:c,editable:!0}).filter(({key:l})=>l!=="parent")},a.isScene&&(s.state={...s.state,state:[{key:"Scene Info",value:{objects:a.children.length,memory:mm(a),calls:e.renderer.value.info.render.calls,triangles:e.renderer.value.info.render.triangles,points:e.renderer.value.info.render.points,lines:e.renderer.value.info.render.lines}},{key:"Programs",value:((o=e.renderer.value.info.programs)==null?void 0:o.map(l=>({...l,programName:l.name})))||[]}]})}}),t.on.editInspectorState(s=>{s.inspectorId===ua&&oL(e.scene.value,s.nodeId,s.path,s.state.value)})})}const XL=["data-scene","data-tres"],YL=en({__name:"TresCanvas",props:{shadows:{type:Boolean,default:void 0},clearColor:{},toneMapping:{},shadowMapType:{},useLegacyLights:{type:Boolean,default:void 0},outputColorSpace:{},toneMappingExposure:{},renderMode:{default:"always"},dpr:{},camera:{},preset:{},windowSize:{type:Boolean,default:void 0},enableProvideBridge:{type:Boolean,default:!0},context:{},alpha:{type:Boolean,default:void 0},premultipliedAlpha:{type:Boolean},antialias:{type:Boolean,default:void 0},stencil:{type:Boolean,default:void 0},preserveDrawingBuffer:{type:Boolean,default:void 0},powerPreference:{},depth:{type:Boolean,default:void 0},failIfMajorPerformanceCaveat:{type:Boolean,default:void 0},precision:{},logarithmicDepthBuffer:{type:Boolean,default:void 0},reverseDepthBuffer:{type:Boolean}},emits:["render","click","double-click","context-menu","pointer-move","pointer-up","pointer-down","pointer-enter","pointer-leave","pointer-over","pointer-out","pointer-missed","wheel","ready"],setup(n,{expose:e,emit:t}){const i=n,r=t,s=f_(),o=Tt(),a=lt(new Us),l=Hi();ju(qP);const c=(p,v=!1)=>en({setup(){var m;const g=(m=Hi())==null?void 0:m.appContext;g&&(g.app=l?.appContext.app);const M={};function y(b){b&&(b.parent&&y(b.parent),b.provides&&Object.assign(M,b.provides))}return l!=null&&l.parent&&i.enableProvideBridge&&(y(l.parent),Reflect.ownKeys(M).forEach(b=>{Ea(b,M[b])})),Ea("useTres",p),Ea("extend",ju),typeof window<"u"&&WL(g?.app,p),()=>Hm(Xt,null,v?[]:s.default())}}),u=(p,v=!1)=>{const m=c(p,v),{render:g}=T_(LL(p));g(Hm(m),a.value)},h=(p,v=!1)=>{lb(p.scene.value),v&&(p.renderer.value.dispose(),p.renderer.value.renderLists.dispose(),p.renderer.value.forceContextLoss()),a.value.__tres={root:p}},f=lt(null);e({context:f,dispose:()=>h(f.value,!0)});const d=()=>{h(f.value),u(f.value,!0)};return rh(()=>{const p=o;f.value=CL({scene:a.value,canvas:p,windowSize:i.windowSize??!1,rendererOptions:i,emit:r});const{registerCamera:v,camera:m,cameras:g,deregisterCamera:M}=f.value;u(f.value);const y=()=>{const b=new Rt(45,window.innerWidth/window.innerHeight,.1,1e3);b.position.set(3,3,3),b.lookAt(0,0,0),v(b);const C=Go(()=>{g.value.length>=2&&(b.removeFromParent(),M(b),C?.())})};Lt(()=>i.camera,(b,C)=>{b&&v(b),C&&(C.removeFromParent(),M(C))},{immediate:!0}),m.value||y()}),Si(d),(p,v)=>(nt(),St("canvas",{ref_key:"canvas",ref:o,"data-scene":a.value.uuid,class:fl(p.$attrs.class),"data-tres":`tresjs ${Ge(V3).version}`,style:Ku({display:"block",width:"100%",height:"100%",position:p.windowSize?"fixed":"relative",top:0,left:0,pointerEvents:"auto",touchAction:"none",...p.$attrs.style})},null,14,XL))}});var jL=Object.defineProperty,$L=(n,e,t)=>e in n?jL(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,qL=(n,e,t)=>$L(n,e+"",t);function ZL(n){return dl()?(Qu(n),!0):!1}function vb(n){return typeof n=="function"?n():Ge(n)}const KL=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const JL=Object.prototype.toString,QL=n=>JL.call(n)==="[object Object]",eD=()=>{},tD=KL?window:void 0;function nD(n){var e;const t=vb(n);return(e=t?.$el)!=null?e:t}function id(...n){let e,t,i,r;if(typeof n[0]=="string"||Array.isArray(n[0])?([t,i,r]=n,e=tD):[e,t,i,r]=n,!e)return eD;Array.isArray(t)||(t=[t]),Array.isArray(i)||(i=[i]);const s=[],o=()=>{s.forEach(u=>u()),s.length=0},a=(u,h,f,d)=>(u.addEventListener(h,f,d),()=>u.removeEventListener(h,f,d)),l=Lt(()=>[nD(e),vb(r)],([u,h])=>{if(o(),!u)return;const f=QL(h)?{...h}:h;s.push(...t.flatMap(d=>i.map(p=>a(u,d,p,f))))},{immediate:!0,flush:"post"}),c=()=>{l(),o()};return ZL(c),c}function vm(n,e,t,i){const r=class extends pn{constructor(s={}){const o=Object.entries(n);super({uniforms:o.reduce((a,[l,c])=>{const u=Ds.clone({[l]:{value:c}});return{...a,...u}},{}),vertexShader:e,fragmentShader:t}),qL(this,"key",""),o.forEach(([a])=>Object.defineProperty(this,a,{get:()=>this.uniforms[a].value,set:l=>this.uniforms[a].value=l})),Object.assign(this,s)}};return r.key=Wi.generateUUID(),r}vm({color:new Ae("white"),scale:new de(1,1),imageBounds:new de(1,1),resolution:1024,map:null,zoom:1,radius:0,grayscale:0,opacity:1},`
    varying vec2 vUv;
    varying vec2 vPos;
    void main() {
      gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);
      vUv = uv;
      vPos = position.xy;
    }
  `,`
    // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44
    varying vec2 vUv;
    varying vec2 vPos;
    uniform vec2 scale;
    uniform vec2 imageBounds;
    uniform float resolution;
    uniform vec3 color;
    uniform sampler2D map;
    uniform float radius;
    uniform float zoom;
    uniform float grayscale;
    uniform float opacity;
    const vec3 luma = vec3(.299, 0.587, 0.114);
    vec4 toGrayscale(vec4 color, float intensity) {
      return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);
    }
    vec2 aspect(vec2 size) {
      return size / min(size.x, size.y);
    }
    
    const float PI = 3.14159265;
      
    // from https://iquilezles.org/articles/distfunctions
    float udRoundBox( vec2 p, vec2 b, float r ) {
      return length(max(abs(p)-b+r,0.0))-r;
    }
  
    void main() {
      vec2 s = aspect(scale);
      vec2 i = aspect(imageBounds);
      float rs = s.x / s.y;
      float ri = i.x / i.y;
      vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);
      vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;
      vec2 uv = vUv * s / new + offset;
      vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);
  
      vec2 res = vec2(scale * resolution);
      vec2 halfRes = 0.5 * res;
      float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    
        vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));
      gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);
      
      #include <tonemapping_fragment>
      #include <colorspace_fragment>
    }
  `);const Wh=parseInt(Fs.replace(/\D+/g,"")),_b=Wh>=125?"uv1":"uv2";var iD=Object.defineProperty,rD=(n,e,t)=>e in n?iD(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,sD=(n,e,t)=>(rD(n,e+"",t),t);async function tv(n){const e=await n.arrayBuffer(),t=btoa(String.fromCharCode(...new Uint8Array(e)));return`data:${n.type||""};base64,${t}`}let Lc,rd,fo,Dc;function sd(n,e=1/0,t=null){rd||(rd=new Wr(2,2,1,1)),fo||(fo=new pn({uniforms:{blitTexture:new Vh(n)},vertexShader:`
        varying vec2 vUv;
        void main(){
            vUv = uv;
            gl_Position = vec4(position.xy * 1.0,0.,.999999);
        }
      `,fragmentShader:`
          uniform sampler2D blitTexture; 
          varying vec2 vUv;

          void main(){ 
              gl_FragColor = vec4(vUv.xy, 0, 1);
              
              #ifdef IS_SRGB
              gl_FragColor = LinearTosRGB( texture2D( blitTexture, vUv) );
              #else
              gl_FragColor = texture2D( blitTexture, vUv);
              #endif
          }
      `})),fo.uniforms.blitTexture.value=n,fo.defines.IS_SRGB="colorSpace"in n?n.colorSpace==="srgb":n.encoding===3001,fo.needsUpdate=!0,Dc||(Dc=new bt(rd,fo),Dc.frustrumCulled=!1);const i=new Rt,r=new Us;r.add(Dc),t||(t=Lc=new Fa({antialias:!1})),t.setSize(Math.min(n.image.width,e),Math.min(n.image.height,e)),t.clear(),t.render(r,i);const s=new Ot(t.domElement);return s.minFilter=n.minFilter,s.magFilter=n.magFilter,s.wrapS=n.wrapS,s.wrapT=n.wrapT,s.name=n.name,Lc&&(Lc.dispose(),Lc=null),s}const nv={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class xb{constructor(){this.pluginCallbacks=[],this.register(function(e){return new mD(e)}),this.register(function(e){return new gD(e)}),this.register(function(e){return new xD(e)}),this.register(function(e){return new yD(e)}),this.register(function(e){return new bD(e)}),this.register(function(e){return new MD(e)}),this.register(function(e){return new vD(e)}),this.register(function(e){return new _D(e)}),this.register(function(e){return new SD(e)}),this.register(function(e){return new wD(e)}),this.register(function(e){return new TD(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,i,r){const s=new pD,o=[];for(let a=0,l=this.pluginCallbacks.length;a<l;a++)o.push(this.pluginCallbacks[a](s));s.setPlugins(o),s.write(e,t,r).catch(i)}parseAsync(e,t){const i=this;return new Promise(function(r,s){i.parse(e,r,s,t)})}}sD(xb,"Utils",{insertKeyframe:function(n,e){const t=n.getValueSize(),i=new n.TimeBufferType(n.times.length+1),r=new n.ValueBufferType(n.values.length+t),s=n.createInterpolant(new n.ValueBufferType(t));let o;if(n.times.length===0){i[0]=e;for(let a=0;a<t;a++)r[a]=0;o=0}else if(e<n.times[0]){if(Math.abs(n.times[0]-e)<.001)return 0;i[0]=e,i.set(n.times,1),r.set(s.evaluate(e),0),r.set(n.values,t),o=0}else if(e>n.times[n.times.length-1]){if(Math.abs(n.times[n.times.length-1]-e)<.001)return n.times.length-1;i[i.length-1]=e,i.set(n.times,0),r.set(n.values,0),r.set(s.evaluate(e),n.values.length),o=i.length-1}else for(let a=0;a<n.times.length;a++){if(Math.abs(n.times[a]-e)<.001)return a;if(n.times[a]<e&&n.times[a+1]>e){i.set(n.times.slice(0,a+1),0),i[a+1]=e,i.set(n.times.slice(a+1),a+2),r.set(n.values.slice(0,(a+1)*t),0),r.set(s.evaluate(e),(a+1)*t),r.set(n.values.slice((a+1)*t),(a+2)*t),o=a+1;break}}return n.times=i,n.values=r,o},mergeMorphTargetTracks:function(n,e){const t=[],i={},r=n.tracks;for(let s=0;s<r.length;++s){let o=r[s];const a=ct.parseTrackName(o.name),l=ct.findNode(e,a.nodeName);if(a.propertyName!=="morphTargetInfluences"||a.propertyIndex===void 0){t.push(o);continue}if(o.createInterpolant!==o.InterpolantFactoryMethodDiscrete&&o.createInterpolant!==o.InterpolantFactoryMethodLinear){if(o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),o=o.clone(),o.setInterpolation(Qa)}const c=l.morphTargetInfluences.length,u=l.morphTargetDictionary[a.propertyIndex];if(u===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+a.propertyIndex);let h;if(i[l.uuid]===void 0){h=o.clone();const d=new h.ValueBufferType(c*h.times.length);for(let p=0;p<h.times.length;p++)d[p*c+u]=h.values[p];h.name=(a.nodeName||"")+".morphTargetInfluences",h.values=d,i[l.uuid]=h,t.push(h);continue}const f=o.createInterpolant(new o.ValueBufferType(1));h=i[l.uuid];for(let d=0;d<h.times.length;d++)h.values[d*c+u]=f.evaluate(h.times[d]);for(let d=0;d<o.times.length;d++){const p=this.insertKeyframe(h,o.times[d]);h.values[p*c+u]=o.values[d]}}return n.tracks=t,n}});const ft={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},od="KHR_mesh_quantization",Qn={};Qn[Yt]=ft.NEAREST;Qn[fh]=ft.NEAREST_MIPMAP_NEAREST;Qn[ms]=ft.NEAREST_MIPMAP_LINEAR;Qn[qt]=ft.LINEAR;Qn[To]=ft.LINEAR_MIPMAP_NEAREST;Qn[_i]=ft.LINEAR_MIPMAP_LINEAR;Qn[fn]=ft.CLAMP_TO_EDGE;Qn[Io]=ft.REPEAT;Qn[Po]=ft.MIRRORED_REPEAT;const iv={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},oD=new Ae,rv=12,aD=1179937895,lD=2,sv=8,cD=1313821514,uD=5130562;function xa(n,e){return n.length===e.length&&n.every(function(t,i){return t===e[i]})}function hD(n){return new TextEncoder().encode(n).buffer}function fD(n){return xa(n.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function dD(n,e,t){const i={min:new Array(n.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(n.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let r=e;r<e+t;r++)for(let s=0;s<n.itemSize;s++){let o;n.itemSize>4?o=n.array[r*n.itemSize+s]:(s===0?o=n.getX(r):s===1?o=n.getY(r):s===2?o=n.getZ(r):s===3&&(o=n.getW(r)),n.normalized===!0&&(o=Wi.normalize(o,n.array))),i.min[s]=Math.min(i.min[s],o),i.max[s]=Math.max(i.max[s],o)}return i}function yb(n){return Math.ceil(n/4)*4}function ad(n,e=0){const t=yb(n.byteLength);if(t!==n.byteLength){const i=new Uint8Array(t);if(i.set(new Uint8Array(n)),e!==0)for(let r=n.byteLength;r<t;r++)i[r]=e;return i.buffer}return n}function ov(){return typeof document>"u"&&typeof OffscreenCanvas<"u"?new OffscreenCanvas(1,1):document.createElement("canvas")}function av(n,e){if(n.toBlob!==void 0)return new Promise(i=>n.toBlob(i,e));let t;return e==="image/jpeg"?t=.92:e==="image/webp"&&(t=.8),n.convertToBlob({type:e,quality:t})}class pD{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,t,i={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},i),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const r=this,s=r.buffers,o=r.json;i=r.options;const a=r.extensionsUsed,l=r.extensionsRequired,c=new Blob(s,{type:"application/octet-stream"}),u=Object.keys(a),h=Object.keys(l);u.length>0&&(o.extensionsUsed=u),h.length>0&&(o.extensionsRequired=h),o.buffers&&o.buffers.length>0&&(o.buffers[0].byteLength=c.size),i.binary===!0?c.arrayBuffer().then(f=>{const d=ad(f),p=new DataView(new ArrayBuffer(sv));p.setUint32(0,d.byteLength,!0),p.setUint32(4,uD,!0);const v=ad(hD(JSON.stringify(o)),32),m=new DataView(new ArrayBuffer(sv));m.setUint32(0,v.byteLength,!0),m.setUint32(4,cD,!0);const g=new ArrayBuffer(rv),M=new DataView(g);M.setUint32(0,aD,!0),M.setUint32(4,lD,!0);const y=rv+m.byteLength+v.byteLength+p.byteLength+d.byteLength;M.setUint32(8,y,!0),new Blob([g,m,v,p,d],{type:"application/octet-stream"}).arrayBuffer().then(t)}):o.buffers&&o.buffers.length>0?tv(c).then(f=>{o.buffers[0].uri=f,t(o)}):t(o)}serializeUserData(e,t){if(Object.keys(e.userData).length===0)return;const i=this.options,r=this.extensionsUsed;try{const s=JSON.parse(JSON.stringify(e.userData));if(i.includeCustomExtensions&&s.gltfExtensions){t.extensions===void 0&&(t.extensions={});for(const o in s.gltfExtensions)t.extensions[o]=s.gltfExtensions[o],r[o]=!0;delete s.gltfExtensions}Object.keys(s).length>0&&(t.extras=s)}catch(s){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+s.message)}}getUID(e,t=!1){if(this.uids.has(e)===!1){const i=new Map;i.set(!0,this.uid++),i.set(!1,this.uid++),this.uids.set(e,i)}return this.uids.get(e).get(t)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const t=new U;for(let i=0,r=e.count;i<r;i++)if(Math.abs(t.fromBufferAttribute(e,i).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const t=this.cache;if(t.attributesNormalized.has(e))return t.attributesNormalized.get(e);const i=e.clone(),r=new U;for(let s=0,o=i.count;s<o;s++)r.fromBufferAttribute(i,s),r.x===0&&r.y===0&&r.z===0?r.setX(1):r.normalize(),i.setXYZ(s,r.x,r.y,r.z);return t.attributesNormalized.set(e,i),i}applyTextureTransform(e,t){let i=!1;const r={};(t.offset.x!==0||t.offset.y!==0)&&(r.offset=t.offset.toArray(),i=!0),t.rotation!==0&&(r.rotation=t.rotation,i=!0),(t.repeat.x!==1||t.repeat.y!==1)&&(r.scale=t.repeat.toArray(),i=!0),i&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=r,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,t){if(e===t)return e;function i(f){return("colorSpace"in f?f.colorSpace==="srgb":f.encoding===3001)?function(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}:function(d){return d}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),e instanceof Ts&&(e=sd(e)),t instanceof Ts&&(t=sd(t));const r=e?e.image:null,s=t?t.image:null,o=Math.max(r?r.width:0,s?s.width:0),a=Math.max(r?r.height:0,s?s.height:0),l=ov();l.width=o,l.height=a;const c=l.getContext("2d");c.fillStyle="#00ffff",c.fillRect(0,0,o,a);const u=c.getImageData(0,0,o,a);if(r){c.drawImage(r,0,0,o,a);const f=i(e),d=c.getImageData(0,0,o,a).data;for(let p=2;p<d.length;p+=4)u.data[p]=f(d[p]/256)*256}if(s){c.drawImage(s,0,0,o,a);const f=i(t),d=c.getImageData(0,0,o,a).data;for(let p=1;p<d.length;p+=4)u.data[p]=f(d[p]/256)*256}c.putImageData(u,0,0);const h=(e||t).clone();return h.source=new Ot(l).source,"colorSpace"in h?h.colorSpace="":h.encoding=3e3,h.channel=(e||t).channel,e&&t&&e.channel!==t.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),h}processBuffer(e){const t=this.json,i=this.buffers;return t.buffers||(t.buffers=[{byteLength:0}]),i.push(e),0}processBufferView(e,t,i,r,s){const o=this.json;o.bufferViews||(o.bufferViews=[]);let a;switch(t){case ft.BYTE:case ft.UNSIGNED_BYTE:a=1;break;case ft.SHORT:case ft.UNSIGNED_SHORT:a=2;break;default:a=4}const l=yb(r*e.itemSize*a),c=new DataView(new ArrayBuffer(l));let u=0;for(let f=i;f<i+r;f++)for(let d=0;d<e.itemSize;d++){let p;e.itemSize>4?p=e.array[f*e.itemSize+d]:(d===0?p=e.getX(f):d===1?p=e.getY(f):d===2?p=e.getZ(f):d===3&&(p=e.getW(f)),e.normalized===!0&&(p=Wi.normalize(p,e.array))),t===ft.FLOAT?c.setFloat32(u,p,!0):t===ft.INT?c.setInt32(u,p,!0):t===ft.UNSIGNED_INT?c.setUint32(u,p,!0):t===ft.SHORT?c.setInt16(u,p,!0):t===ft.UNSIGNED_SHORT?c.setUint16(u,p,!0):t===ft.BYTE?c.setInt8(u,p):t===ft.UNSIGNED_BYTE&&c.setUint8(u,p),u+=a}const h={buffer:this.processBuffer(c.buffer),byteOffset:this.byteOffset,byteLength:l};return s!==void 0&&(h.target=s),s===ft.ARRAY_BUFFER&&(h.byteStride=e.itemSize*a),this.byteOffset+=l,o.bufferViews.push(h),{id:o.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const t=this,i=t.json;return i.bufferViews||(i.bufferViews=[]),e.arrayBuffer().then(r=>{const s=ad(r),o={buffer:t.processBuffer(s),byteOffset:t.byteOffset,byteLength:s.byteLength};return t.byteOffset+=s.byteLength,i.bufferViews.push(o)-1})}processAccessor(e,t,i,r){const s=this.json,o={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"};let a;if(e.array.constructor===Float32Array)a=ft.FLOAT;else if(e.array.constructor===Int32Array)a=ft.INT;else if(e.array.constructor===Uint32Array)a=ft.UNSIGNED_INT;else if(e.array.constructor===Int16Array)a=ft.SHORT;else if(e.array.constructor===Uint16Array)a=ft.UNSIGNED_SHORT;else if(e.array.constructor===Int8Array)a=ft.BYTE;else if(e.array.constructor===Uint8Array)a=ft.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+e.array.constructor.name);if(i===void 0&&(i=0),r===void 0&&(r=e.count),r===0)return null;const l=dD(e,i,r);let c;t!==void 0&&(c=e===t.index?ft.ELEMENT_ARRAY_BUFFER:ft.ARRAY_BUFFER);const u=this.processBufferView(e,a,i,r,c),h={bufferView:u.id,byteOffset:u.byteOffset,componentType:a,count:r,max:l.max,min:l.min,type:o[e.itemSize]};return e.normalized===!0&&(h.normalized=!0),s.accessors||(s.accessors=[]),s.accessors.push(h)-1}processImage(e,t,i,r="image/png"){if(e!==null){const s=this,o=s.cache,a=s.json,l=s.options,c=s.pending;o.images.has(e)||o.images.set(e,{});const u=o.images.get(e),h=r+":flipY/"+i.toString();if(u[h]!==void 0)return u[h];a.images||(a.images=[]);const f={mimeType:r},d=ov();d.width=Math.min(e.width,l.maxTextureSize),d.height=Math.min(e.height,l.maxTextureSize);const p=d.getContext("2d");if(i===!0&&(p.translate(0,d.height),p.scale(1,-1)),e.data!==void 0){t!==sn&&console.error("GLTFExporter: Only RGBAFormat is supported.",t),(e.width>l.maxTextureSize||e.height>l.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const m=new Uint8ClampedArray(e.height*e.width*4);for(let g=0;g<m.length;g+=4)m[g+0]=e.data[g+0],m[g+1]=e.data[g+1],m[g+2]=e.data[g+2],m[g+3]=e.data[g+3];p.putImageData(new ImageData(m,e.width,e.height),0,0)}else p.drawImage(e,0,0,d.width,d.height);l.binary===!0?c.push(av(d,r).then(m=>s.processBufferViewImage(m)).then(m=>{f.bufferView=m})):d.toDataURL!==void 0?f.uri=d.toDataURL(r):c.push(av(d,r).then(tv).then(m=>{f.uri=m}));const v=a.images.push(f)-1;return u[h]=v,v}else throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(e){const t=this.json;t.samplers||(t.samplers=[]);const i={magFilter:Qn[e.magFilter],minFilter:Qn[e.minFilter],wrapS:Qn[e.wrapS],wrapT:Qn[e.wrapT]};return t.samplers.push(i)-1}processTexture(e){const t=this.options,i=this.cache,r=this.json;if(i.textures.has(e))return i.textures.get(e);r.textures||(r.textures=[]),e instanceof Ts&&(e=sd(e,t.maxTextureSize));let s=e.userData.mimeType;s==="image/webp"&&(s="image/png");const o={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,s)};e.name&&(o.name=e.name),this._invokeAll(function(l){l.writeTexture&&l.writeTexture(e,o)});const a=r.textures.push(o)-1;return i.textures.set(e,a),a}processMaterial(e){const t=this.cache,i=this.json;if(t.materials.has(e))return t.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;i.materials||(i.materials=[]);const r={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const s=e.color.toArray().concat([e.opacity]);if(xa(s,[1,1,1,1])||(r.pbrMetallicRoughness.baseColorFactor=s),e.isMeshStandardMaterial?(r.pbrMetallicRoughness.metallicFactor=e.metalness,r.pbrMetallicRoughness.roughnessFactor=e.roughness):(r.pbrMetallicRoughness.metallicFactor=.5,r.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const a=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),l={index:this.processTexture(a),channel:a.channel};this.applyTextureTransform(l,a),r.pbrMetallicRoughness.metallicRoughnessTexture=l}if(e.map){const a={index:this.processTexture(e.map),texCoord:e.map.channel};this.applyTextureTransform(a,e.map),r.pbrMetallicRoughness.baseColorTexture=a}if(e.emissive){const a=e.emissive;if(Math.max(a.r,a.g,a.b)>0&&(r.emissiveFactor=e.emissive.toArray()),e.emissiveMap){const l={index:this.processTexture(e.emissiveMap),texCoord:e.emissiveMap.channel};this.applyTextureTransform(l,e.emissiveMap),r.emissiveTexture=l}}if(e.normalMap){const a={index:this.processTexture(e.normalMap),texCoord:e.normalMap.channel};e.normalScale&&e.normalScale.x!==1&&(a.scale=e.normalScale.x),this.applyTextureTransform(a,e.normalMap),r.normalTexture=a}if(e.aoMap){const a={index:this.processTexture(e.aoMap),texCoord:e.aoMap.channel};e.aoMapIntensity!==1&&(a.strength=e.aoMapIntensity),this.applyTextureTransform(a,e.aoMap),r.occlusionTexture=a}e.transparent?r.alphaMode="BLEND":e.alphaTest>0&&(r.alphaMode="MASK",r.alphaCutoff=e.alphaTest),e.side===Hn&&(r.doubleSided=!0),e.name!==""&&(r.name=e.name),this.serializeUserData(e,r),this._invokeAll(function(a){a.writeMaterial&&a.writeMaterial(e,r)});const o=i.materials.push(r)-1;return t.materials.set(e,o),o}processMesh(e){const t=this.cache,i=this.json,r=[e.geometry.uuid];if(Array.isArray(e.material))for(let y=0,b=e.material.length;y<b;y++)r.push(e.material[y].uuid);else r.push(e.material.uuid);const s=r.join(":");if(t.meshes.has(s))return t.meshes.get(s);const o=e.geometry;let a;e.isLineSegments?a=ft.LINES:e.isLineLoop?a=ft.LINE_LOOP:e.isLine?a=ft.LINE_STRIP:e.isPoints?a=ft.POINTS:a=e.material.wireframe?ft.LINES:ft.TRIANGLES;const l={},c={},u=[],h=[],f={...Wh>=152?{uv:"TEXCOORD_0",uv1:"TEXCOORD_1",uv2:"TEXCOORD_2",uv3:"TEXCOORD_3"}:{uv:"TEXCOORD_0",uv2:"TEXCOORD_1"},color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},d=o.getAttribute("normal");d!==void 0&&!this.isNormalizedNormalAttribute(d)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),o.setAttribute("normal",this.createNormalizedNormalAttribute(d)));let p=null;for(let y in o.attributes){if(y.slice(0,5)==="morph")continue;const b=o.attributes[y];if(y=f[y]||y.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(y)||(y="_"+y),t.attributes.has(this.getUID(b))){c[y]=t.attributes.get(this.getUID(b));continue}p=null;const C=b.array;y==="JOINTS_0"&&!(C instanceof Uint16Array)&&!(C instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),p=new mt(new Uint16Array(C),b.itemSize,b.normalized));const w=this.processAccessor(p||b,o);w!==null&&(y.startsWith("_")||this.detectMeshQuantization(y,b),c[y]=w,t.attributes.set(this.getUID(b),w))}if(d!==void 0&&o.setAttribute("normal",d),Object.keys(c).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const y=[],b=[],C={};if(e.morphTargetDictionary!==void 0)for(const w in e.morphTargetDictionary)C[e.morphTargetDictionary[w]]=w;for(let w=0;w<e.morphTargetInfluences.length;++w){const E={};let S=!1;for(const _ in o.morphAttributes){if(_!=="position"&&_!=="normal"){S||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),S=!0);continue}const x=o.morphAttributes[_][w],A=_.toUpperCase(),D=o.attributes[_];if(t.attributes.has(this.getUID(x,!0))){E[A]=t.attributes.get(this.getUID(x,!0));continue}const k=x.clone();if(!o.morphTargetsRelative)for(let W=0,Y=x.count;W<Y;W++)for(let z=0;z<x.itemSize;z++)z===0&&k.setX(W,x.getX(W)-D.getX(W)),z===1&&k.setY(W,x.getY(W)-D.getY(W)),z===2&&k.setZ(W,x.getZ(W)-D.getZ(W)),z===3&&k.setW(W,x.getW(W)-D.getW(W));E[A]=this.processAccessor(k,o),t.attributes.set(this.getUID(D,!0),E[A])}h.push(E),y.push(e.morphTargetInfluences[w]),e.morphTargetDictionary!==void 0&&b.push(C[w])}l.weights=y,b.length>0&&(l.extras={},l.extras.targetNames=b)}const v=Array.isArray(e.material);if(v&&o.groups.length===0)return null;const m=v?e.material:[e.material],g=v?o.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let y=0,b=g.length;y<b;y++){const C={mode:a,attributes:c};if(this.serializeUserData(o,C),h.length>0&&(C.targets=h),o.index!==null){let E=this.getUID(o.index);(g[y].start!==void 0||g[y].count!==void 0)&&(E+=":"+g[y].start+":"+g[y].count),t.attributes.has(E)?C.indices=t.attributes.get(E):(C.indices=this.processAccessor(o.index,o,g[y].start,g[y].count),t.attributes.set(E,C.indices)),C.indices===null&&delete C.indices}const w=this.processMaterial(m[g[y].materialIndex]);w!==null&&(C.material=w),u.push(C)}l.primitives=u,i.meshes||(i.meshes=[]),this._invokeAll(function(y){y.writeMesh&&y.writeMesh(e,l)});const M=i.meshes.push(l)-1;return t.meshes.set(s,M),M}detectMeshQuantization(e,t){if(this.extensionsUsed[od])return;let i;switch(t.array.constructor){case Int8Array:i="byte";break;case Uint8Array:i="unsigned byte";break;case Int16Array:i="short";break;case Uint16Array:i="unsigned short";break;default:return}t.normalized&&(i+=" normalized");const r=e.split("_",1)[0];nv[r]&&nv[r].includes(i)&&(this.extensionsUsed[od]=!0,this.extensionsRequired[od]=!0)}processCamera(e){const t=this.json;t.cameras||(t.cameras=[]);const i=e.isOrthographicCamera,r={type:i?"orthographic":"perspective"};return i?r.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:r.perspective={aspectRatio:e.aspect,yfov:Wi.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(r.name=e.type),t.cameras.push(r)-1}processAnimation(e,t){const i=this.json,r=this.nodeMap;i.animations||(i.animations=[]),e=xb.Utils.mergeMorphTargetTracks(e.clone(),t);const s=e.tracks,o=[],a=[];for(let l=0;l<s.length;++l){const c=s[l],u=ct.parseTrackName(c.name);let h=ct.findNode(t,u.nodeName);const f=iv[u.propertyName];if(u.objectName==="bones"&&(h.isSkinnedMesh===!0?h=h.skeleton.getBoneByName(u.objectIndex):h=void 0),!h||!f)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',c.name),null;const d=1;let p=c.values.length/c.times.length;f===iv.morphTargetInfluences&&(p/=h.morphTargetInfluences.length);let v;c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(v="CUBICSPLINE",p/=3):c.getInterpolation()===Oo?v="STEP":v="LINEAR",a.push({input:this.processAccessor(new mt(c.times,d)),output:this.processAccessor(new mt(c.values,p)),interpolation:v}),o.push({sampler:a.length-1,target:{node:r.get(h),path:f}})}return i.animations.push({name:e.name||"clip_"+i.animations.length,samplers:a,channels:o}),i.animations.length-1}processSkin(e){const t=this.json,i=this.nodeMap,r=t.nodes[i.get(e)],s=e.skeleton;if(s===void 0)return null;const o=e.skeleton.bones[0];if(o===void 0)return null;const a=[],l=new Float32Array(s.bones.length*16),c=new Xe;for(let u=0;u<s.bones.length;++u)a.push(i.get(s.bones[u])),c.copy(s.boneInverses[u]),c.multiply(e.bindMatrix).toArray(l,u*16);return t.skins===void 0&&(t.skins=[]),t.skins.push({inverseBindMatrices:this.processAccessor(new mt(l,16)),joints:a,skeleton:i.get(o)}),r.skin=t.skins.length-1}processNode(e){const t=this.json,i=this.options,r=this.nodeMap;t.nodes||(t.nodes=[]);const s={};if(i.trs){const a=e.quaternion.toArray(),l=e.position.toArray(),c=e.scale.toArray();xa(a,[0,0,0,1])||(s.rotation=a),xa(l,[0,0,0])||(s.translation=l),xa(c,[1,1,1])||(s.scale=c)}else e.matrixAutoUpdate&&e.updateMatrix(),fD(e.matrix)===!1&&(s.matrix=e.matrix.elements);if(e.name!==""&&(s.name=String(e.name)),this.serializeUserData(e,s),e.isMesh||e.isLine||e.isPoints){const a=this.processMesh(e);a!==null&&(s.mesh=a)}else e.isCamera&&(s.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const a=[];for(let l=0,c=e.children.length;l<c;l++){const u=e.children[l];if(u.visible||i.onlyVisible===!1){const h=this.processNode(u);h!==null&&a.push(h)}}a.length>0&&(s.children=a)}this._invokeAll(function(a){a.writeNode&&a.writeNode(e,s)});const o=t.nodes.push(s)-1;return r.set(e,o),o}processScene(e){const t=this.json,i=this.options;t.scenes||(t.scenes=[],t.scene=0);const r={};e.name!==""&&(r.name=e.name),t.scenes.push(r);const s=[];for(let o=0,a=e.children.length;o<a;o++){const l=e.children[o];if(l.visible||i.onlyVisible===!1){const c=this.processNode(l);c!==null&&s.push(c)}}s.length>0&&(r.nodes=s),this.serializeUserData(e,r)}processObjects(e){const t=new Us;t.name="AuxScene";for(let i=0;i<e.length;i++)t.children.push(e[i]);this.processScene(t)}processInput(e){const t=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(r){r.beforeParse&&r.beforeParse(e)});const i=[];for(let r=0;r<e.length;r++)e[r]instanceof Us?this.processScene(e[r]):i.push(e[r]);i.length>0&&this.processObjects(i);for(let r=0;r<this.skins.length;++r)this.processSkin(this.skins[r]);for(let r=0;r<t.animations.length;++r)this.processAnimation(t.animations[r],e[0]);this._invokeAll(function(r){r.afterParse&&r.afterParse(e)})}_invokeAll(e){for(let t=0,i=this.plugins.length;t<i;t++)e(this.plugins[t])}}class mD{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,t){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const i=this.writer,r=i.json,s=i.extensionsUsed,o={};e.name&&(o.name=e.name),o.color=e.color.toArray(),o.intensity=e.intensity,e.isDirectionalLight?o.type="directional":e.isPointLight?(o.type="point",e.distance>0&&(o.range=e.distance)):e.isSpotLight&&(o.type="spot",e.distance>0&&(o.range=e.distance),o.spot={},o.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,o.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),s[this.name]||(r.extensions=r.extensions||{},r.extensions[this.name]={lights:[]},s[this.name]=!0);const a=r.extensions[this.name].lights;a.push(o),t.extensions=t.extensions||{},t.extensions[this.name]={light:a.length-1}}}let gD=class{constructor(n){this.writer=n,this.name="KHR_materials_unlit"}writeMaterial(n,e){if(!n.isMeshBasicMaterial)return;const t=this.writer.extensionsUsed;e.extensions=e.extensions||{},e.extensions[this.name]={},t[this.name]=!0,e.pbrMetallicRoughness.metallicFactor=0,e.pbrMetallicRoughness.roughnessFactor=.9}},vD=class{constructor(n){this.writer=n,this.name="KHR_materials_clearcoat"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.clearcoat===0)return;const t=this.writer,i=t.extensionsUsed,r={};if(r.clearcoatFactor=n.clearcoat,n.clearcoatMap){const s={index:t.processTexture(n.clearcoatMap),texCoord:n.clearcoatMap.channel};t.applyTextureTransform(s,n.clearcoatMap),r.clearcoatTexture=s}if(r.clearcoatRoughnessFactor=n.clearcoatRoughness,n.clearcoatRoughnessMap){const s={index:t.processTexture(n.clearcoatRoughnessMap),texCoord:n.clearcoatRoughnessMap.channel};t.applyTextureTransform(s,n.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=s}if(n.clearcoatNormalMap){const s={index:t.processTexture(n.clearcoatNormalMap),texCoord:n.clearcoatNormalMap.channel};t.applyTextureTransform(s,n.clearcoatNormalMap),r.clearcoatNormalTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}},_D=class{constructor(n){this.writer=n,this.name="KHR_materials_iridescence"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.iridescence===0)return;const t=this.writer,i=t.extensionsUsed,r={};if(r.iridescenceFactor=n.iridescence,n.iridescenceMap){const s={index:t.processTexture(n.iridescenceMap),texCoord:n.iridescenceMap.channel};t.applyTextureTransform(s,n.iridescenceMap),r.iridescenceTexture=s}if(r.iridescenceIor=n.iridescenceIOR,r.iridescenceThicknessMinimum=n.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=n.iridescenceThicknessRange[1],n.iridescenceThicknessMap){const s={index:t.processTexture(n.iridescenceThicknessMap),texCoord:n.iridescenceThicknessMap.channel};t.applyTextureTransform(s,n.iridescenceThicknessMap),r.iridescenceThicknessTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}},xD=class{constructor(n){this.writer=n,this.name="KHR_materials_transmission"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.transmission===0)return;const t=this.writer,i=t.extensionsUsed,r={};if(r.transmissionFactor=n.transmission,n.transmissionMap){const s={index:t.processTexture(n.transmissionMap),texCoord:n.transmissionMap.channel};t.applyTextureTransform(s,n.transmissionMap),r.transmissionTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}},yD=class{constructor(n){this.writer=n,this.name="KHR_materials_volume"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.transmission===0)return;const t=this.writer,i=t.extensionsUsed,r={};if(r.thicknessFactor=n.thickness,n.thicknessMap){const s={index:t.processTexture(n.thicknessMap),texCoord:n.thicknessMap.channel};t.applyTextureTransform(s,n.thicknessMap),r.thicknessTexture=s}r.attenuationDistance=n.attenuationDistance,r.attenuationColor=n.attenuationColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}},bD=class{constructor(n){this.writer=n,this.name="KHR_materials_ior"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.ior===1.5)return;const t=this.writer.extensionsUsed,i={};i.ior=n.ior,e.extensions=e.extensions||{},e.extensions[this.name]=i,t[this.name]=!0}},MD=class{constructor(n){this.writer=n,this.name="KHR_materials_specular"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.specularIntensity===1&&n.specularColor.equals(oD)&&!n.specularIntensityMap&&!n.specularColorTexture)return;const t=this.writer,i=t.extensionsUsed,r={};if(n.specularIntensityMap){const s={index:t.processTexture(n.specularIntensityMap),texCoord:n.specularIntensityMap.channel};t.applyTextureTransform(s,n.specularIntensityMap),r.specularTexture=s}if(n.specularColorMap){const s={index:t.processTexture(n.specularColorMap),texCoord:n.specularColorMap.channel};t.applyTextureTransform(s,n.specularColorMap),r.specularColorTexture=s}r.specularFactor=n.specularIntensity,r.specularColorFactor=n.specularColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}},SD=class{constructor(n){this.writer=n,this.name="KHR_materials_sheen"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.sheen==0)return;const t=this.writer,i=t.extensionsUsed,r={};if(n.sheenRoughnessMap){const s={index:t.processTexture(n.sheenRoughnessMap),texCoord:n.sheenRoughnessMap.channel};t.applyTextureTransform(s,n.sheenRoughnessMap),r.sheenRoughnessTexture=s}if(n.sheenColorMap){const s={index:t.processTexture(n.sheenColorMap),texCoord:n.sheenColorMap.channel};t.applyTextureTransform(s,n.sheenColorMap),r.sheenColorTexture=s}r.sheenRoughnessFactor=n.sheenRoughness,r.sheenColorFactor=n.sheenColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}},wD=class{constructor(n){this.writer=n,this.name="KHR_materials_anisotropy"}writeMaterial(n,e){if(!n.isMeshPhysicalMaterial||n.anisotropy==0)return;const t=this.writer,i=t.extensionsUsed,r={};if(n.anisotropyMap){const s={index:t.processTexture(n.anisotropyMap)};t.applyTextureTransform(s,n.anisotropyMap),r.anisotropyTexture=s}r.anisotropyStrength=n.anisotropy,r.anisotropyRotation=n.anisotropyRotation,e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}},TD=class{constructor(n){this.writer=n,this.name="KHR_materials_emissive_strength"}writeMaterial(n,e){if(!n.isMeshStandardMaterial||n.emissiveIntensity===1)return;const t=this.writer.extensionsUsed,i={};i.emissiveStrength=n.emissiveIntensity,e.extensions=e.extensions||{},e.extensions[this.name]=i,t[this.name]=!0}};var Il=Uint8Array,bb=Uint16Array,ED=Uint32Array,AD=new Il([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),CD=new Il([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Mb=function(n,e){for(var t=new bb(31),i=0;i<31;++i)t[i]=e+=1<<n[i-1];for(var r=new ED(t[30]),i=1;i<30;++i)for(var s=t[i];s<t[i+1];++s)r[s]=s-t[i]<<5|i;return[t,r]},Sb=Mb(AD,2),RD=Sb[0],ID=Sb[1];RD[28]=258,ID[258]=28;Mb(CD,0);var PD=new bb(32768);for(var Ut=0;Ut<32768;++Ut){var Ar=(Ut&43690)>>>1|(Ut&21845)<<1;Ar=(Ar&52428)>>>2|(Ar&13107)<<2,Ar=(Ar&61680)>>>4|(Ar&3855)<<4,PD[Ut]=((Ar&65280)>>>8|(Ar&255)<<8)>>>1}var Xh=new Il(288);for(var Ut=0;Ut<144;++Ut)Xh[Ut]=8;for(var Ut=144;Ut<256;++Ut)Xh[Ut]=9;for(var Ut=256;Ut<280;++Ut)Xh[Ut]=7;for(var Ut=280;Ut<288;++Ut)Xh[Ut]=8;var LD=new Il(32);for(var Ut=0;Ut<32;++Ut)LD[Ut]=5;var DD=new Il(0),UD=typeof TextDecoder<"u"&&new TextDecoder,ND=0;try{UD.decode(DD,{stream:!0}),ND=1}catch{}var OD=Object.defineProperty,FD=(n,e,t)=>e in n?OD(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,BD=(n,e,t)=>(FD(n,e+"",t),t);const wb=class extends bt{constructor(n,e={}){super(n),this.isReflector=!0,this.type="Reflector",this.camera=new Rt;const t=this,i=e.color!==void 0?new Ae(e.color):new Ae(8355711),r=e.textureWidth||512,s=e.textureHeight||512,o=e.clipBias||0,a=e.shader||wb.ReflectorShader,l=e.multisample!==void 0?e.multisample:4,c=new mi,u=new U,h=new U,f=new U,d=new Xe,p=new U(0,0,-1),v=new at,m=new U,g=new U,M=new at,y=new Xe,b=this.camera,C=new Ti(r,s,{samples:l,type:Bs}),w=new pn({uniforms:Ds.clone(a.uniforms),fragmentShader:a.fragmentShader,vertexShader:a.vertexShader});w.uniforms.tDiffuse.value=C.texture,w.uniforms.color.value=i,w.uniforms.textureMatrix.value=y,this.material=w,this.onBeforeRender=function(E,S,_){if(h.setFromMatrixPosition(t.matrixWorld),f.setFromMatrixPosition(_.matrixWorld),d.extractRotation(t.matrixWorld),u.set(0,0,1),u.applyMatrix4(d),m.subVectors(h,f),m.dot(u)>0)return;m.reflect(u).negate(),m.add(h),d.extractRotation(_.matrixWorld),p.set(0,0,-1),p.applyMatrix4(d),p.add(f),g.subVectors(h,p),g.reflect(u).negate(),g.add(h),b.position.copy(m),b.up.set(0,1,0),b.up.applyMatrix4(d),b.up.reflect(u),b.lookAt(g),b.far=_.far,b.updateMatrixWorld(),b.projectionMatrix.copy(_.projectionMatrix),y.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),y.multiply(b.projectionMatrix),y.multiply(b.matrixWorldInverse),y.multiply(t.matrixWorld),c.setFromNormalAndCoplanarPoint(u,h),c.applyMatrix4(b.matrixWorldInverse),v.set(c.normal.x,c.normal.y,c.normal.z,c.constant);const x=b.projectionMatrix;M.x=(Math.sign(v.x)+x.elements[8])/x.elements[0],M.y=(Math.sign(v.y)+x.elements[9])/x.elements[5],M.z=-1,M.w=(1+x.elements[10])/x.elements[14],v.multiplyScalar(2/v.dot(M)),x.elements[2]=v.x,x.elements[6]=v.y,x.elements[10]=v.z+1-o,x.elements[14]=v.w,t.visible=!1;const A=E.getRenderTarget(),D=E.xr.enabled,k=E.shadowMap.autoUpdate,W=E.toneMapping;let Y=!1;"outputColorSpace"in E?Y=E.outputColorSpace==="srgb":Y=E.outputEncoding===3001,E.xr.enabled=!1,E.shadowMap.autoUpdate=!1,"outputColorSpace"in E?E.outputColorSpace="srgb-linear":E.outputEncoding=3e3,E.toneMapping=Mi,E.setRenderTarget(C),E.state.buffers.depth.setMask(!0),E.autoClear===!1&&E.clear(),E.render(S,b),E.xr.enabled=D,E.shadowMap.autoUpdate=k,E.toneMapping=W,"outputColorSpace"in E?E.outputColorSpace=Y?"srgb":"srgb-linear":E.outputEncoding=Y?3001:3e3,E.setRenderTarget(A);const z=_.viewport;z!==void 0&&E.state.viewport(z),t.visible=!0},this.getRenderTarget=function(){return C},this.dispose=function(){C.dispose(),t.material.dispose()}}};let Qd=wb;BD(Qd,"ReflectorShader",{uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:`
		uniform mat4 textureMatrix;
		varying vec4 vUv;

		#include <common>
		#include <logdepthbuf_pars_vertex>

		void main() {

			vUv = textureMatrix * vec4( position, 1.0 );

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

			#include <logdepthbuf_vertex>

		}`,fragmentShader:`
		uniform vec3 color;
		uniform sampler2D tDiffuse;
		varying vec4 vUv;

		#include <logdepthbuf_pars_fragment>

		float blendOverlay( float base, float blend ) {

			return( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );

		}

		vec3 blendOverlay( vec3 base, vec3 blend ) {

			return vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );

		}

		void main() {

			#include <logdepthbuf_fragment>

			vec4 base = texture2DProj( tDiffuse, vUv );
			gl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );

			#include <tonemapping_fragment>
			#include <${Wh>=154?"colorspace_fragment":"encodings_fragment"}>

		}`});var zD=Object.defineProperty,kD=(n,e,t)=>e in n?zD(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Tb=(n,e,t)=>(kD(n,typeof e!="symbol"?e+"":e,t),t);const Yh=new et,VD=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),Eb=new Sl(VD,5);Yh.setIndex([0,1,2,0,2,3]);Yh.setAttribute("position",new Ln(Eb,3,0,!1));Yh.setAttribute("uv",new Ln(Eb,2,3,!1));const ep=class extends bt{constructor(){super(ep.Geometry,new ci({opacity:0,transparent:!0})),this.isLensflare=!0,this.type="Lensflare",this.frustumCulled=!1,this.renderOrder=1/0;const n=new U,e=new U,t=new li(new Uint8Array(256*3),16,16,sn);t.minFilter=Yt,t.magFilter=Yt,t.wrapS=fn,t.wrapT=fn;const i=new li(new Uint8Array(256*3),16,16,sn);i.minFilter=Yt,i.magFilter=Yt,i.wrapS=fn,i.wrapT=fn;const r=ep.Geometry,s=new Oa({uniforms:{scale:{value:null},screenPosition:{value:null}},vertexShader:`

				precision highp float;

				uniform vec3 screenPosition;
				uniform vec2 scale;

				attribute vec3 position;

				void main() {

					gl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );

				}`,fragmentShader:`

				precision highp float;

				void main() {

					gl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );

				}`,depthTest:!0,depthWrite:!1,transparent:!1}),o=new Oa({uniforms:{map:{value:t},scale:{value:null},screenPosition:{value:null}},vertexShader:`

				precision highp float;

				uniform vec3 screenPosition;
				uniform vec2 scale;

				attribute vec3 position;
				attribute vec2 uv;

				varying vec2 vUV;

				void main() {

					vUV = uv;

					gl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );

				}`,fragmentShader:`

				precision highp float;

				uniform sampler2D map;

				varying vec2 vUV;

				void main() {

					gl_FragColor = texture2D( map, vUV );

				}`,depthTest:!1,depthWrite:!1,transparent:!1}),a=new bt(r,s),l=[],c=Ab.Shader,u=new Oa({uniforms:{map:{value:null},occlusionMap:{value:i},color:{value:new Ae(16777215)},scale:{value:new de},screenPosition:{value:new U}},vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:su,transparent:!0,depthWrite:!1}),h=new bt(r,u);this.addElement=function(m){l.push(m)};const f=new de,d=new de,p=new Gy,v=new at;this.onBeforeRender=function(m,g,M){m.getCurrentViewport(v);const y=v.w/v.z,b=v.z/2,C=v.w/2;let w=16/v.w;if(f.set(w*y,w),p.min.set(v.x,v.y),p.max.set(v.x+(v.z-16),v.y+(v.w-16)),e.setFromMatrixPosition(this.matrixWorld),e.applyMatrix4(M.matrixWorldInverse),!(e.z>0)&&(n.copy(e).applyMatrix4(M.projectionMatrix),d.x=v.x+n.x*b+b-8,d.y=v.y+n.y*C+C-8,p.containsPoint(d))){m.copyFramebufferToTexture(d,t);let E=s.uniforms;E.scale.value=f,E.screenPosition.value=n,m.renderBufferDirect(M,null,r,s,a,null),m.copyFramebufferToTexture(d,i),E=o.uniforms,E.scale.value=f,E.screenPosition.value=n,m.renderBufferDirect(M,null,r,o,a,null);const S=-n.x*2,_=-n.y*2;for(let x=0,A=l.length;x<A;x++){const D=l[x],k=u.uniforms;k.color.value.copy(D.color),k.map.value=D.texture,k.screenPosition.value.x=n.x+S*D.distance,k.screenPosition.value.y=n.y+_*D.distance,w=D.size/v.w;const W=v.w/v.z;k.scale.value.set(w*W,w),u.uniformsNeedUpdate=!0,m.renderBufferDirect(M,null,r,u,h,null)}}},this.dispose=function(){s.dispose(),o.dispose(),u.dispose(),t.dispose(),i.dispose();for(let m=0,g=l.length;m<g;m++)l[m].texture.dispose()}}};let HD=ep;Tb(HD,"Geometry",Yh);class Ab{constructor(e,t=1,i=0,r=new Ae(16777215)){this.texture=e,this.size=t,this.distance=i,this.color=r}}Tb(Ab,"Shader",{uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:`

		precision highp float;

		uniform vec3 screenPosition;
		uniform vec2 scale;

		uniform sampler2D occlusionMap;

		attribute vec3 position;
		attribute vec2 uv;

		varying vec2 vUV;
		varying float vVisibility;

		void main() {

			vUV = uv;

			vec2 pos = position.xy;

			vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );

			vVisibility =        visibility.r / 9.0;
			vVisibility *= 1.0 - visibility.g / 9.0;
			vVisibility *=       visibility.b / 9.0;

			gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );

		}`,fragmentShader:`

		precision highp float;

		uniform sampler2D map;
		uniform vec3 color;

		varying vec2 vUV;
		varying float vVisibility;

		void main() {

			vec4 texture = texture2D( map, vUV );
			texture.a *= vVisibility;
			gl_FragColor = texture;
			gl_FragColor.rgb *= color;

		}`});var GD=Object.defineProperty,WD=(n,e,t)=>e in n?GD(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Cb=(n,e,t)=>(WD(n,typeof e!="symbol"?e+"":e,t),t);const $c={uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new U},up:{value:new U(0,1,0)}},vertexShader:`
      uniform vec3 sunPosition;
      uniform float rayleigh;
      uniform float turbidity;
      uniform float mieCoefficient;
      uniform vec3 up;

      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      // constants for atmospheric scattering
      const float e = 2.71828182845904523536028747135266249775724709369995957;
      const float pi = 3.141592653589793238462643383279502884197169;

      // wavelength of used primaries, according to preetham
      const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );
      // this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:
      // (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))
      const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );

      // mie stuff
      // K coefficient for the primaries
      const float v = 4.0;
      const vec3 K = vec3( 0.686, 0.678, 0.666 );
      // MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K
      const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );

      // earth shadow hack
      // cutoffAngle = pi / 1.95;
      const float cutoffAngle = 1.6110731556870734;
      const float steepness = 1.5;
      const float EE = 1000.0;

      float sunIntensity( float zenithAngleCos ) {
        zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );
        return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );
      }

      vec3 totalMie( float T ) {
        float c = ( 0.2 * T ) * 10E-18;
        return 0.434 * c * MieConst;
      }

      void main() {

        vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
        vWorldPosition = worldPosition.xyz;

        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        gl_Position.z = gl_Position.w; // set z to camera.far

        vSunDirection = normalize( sunPosition );

        vSunE = sunIntensity( dot( vSunDirection, up ) );

        vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );

        float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );

      // extinction (absorbtion + out scattering)
      // rayleigh coefficients
        vBetaR = totalRayleigh * rayleighCoefficient;

      // mie coefficients
        vBetaM = totalMie( turbidity ) * mieCoefficient;

      }
    `,fragmentShader:`
      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      uniform float mieDirectionalG;
      uniform vec3 up;

      const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );

      // constants for atmospheric scattering
      const float pi = 3.141592653589793238462643383279502884197169;

      const float n = 1.0003; // refractive index of air
      const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)

      // optical length at zenith for molecules
      const float rayleighZenithLength = 8.4E3;
      const float mieZenithLength = 1.25E3;
      // 66 arc seconds -> degrees, and the cosine of that
      const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;

      // 3.0 / ( 16.0 * pi )
      const float THREE_OVER_SIXTEENPI = 0.05968310365946075;
      // 1.0 / ( 4.0 * pi )
      const float ONE_OVER_FOURPI = 0.07957747154594767;

      float rayleighPhase( float cosTheta ) {
        return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );
      }

      float hgPhase( float cosTheta, float g ) {
        float g2 = pow( g, 2.0 );
        float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );
        return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );
      }

      void main() {

        vec3 direction = normalize( vWorldPosition - cameraPos );

      // optical length
      // cutoff angle at 90 to avoid singularity in next formula.
        float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );
        float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );
        float sR = rayleighZenithLength * inverse;
        float sM = mieZenithLength * inverse;

      // combined extinction factor
        vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );

      // in scattering
        float cosTheta = dot( direction, vSunDirection );

        float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );
        vec3 betaRTheta = vBetaR * rPhase;

        float mPhase = hgPhase( cosTheta, mieDirectionalG );
        vec3 betaMTheta = vBetaM * mPhase;

        vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );
        Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );

      // nightsky
        float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]
        float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]
        vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );
        vec3 L0 = vec3( 0.1 ) * Fex;

      // composition + solar disc
        float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );
        L0 += ( vSunE * 19000.0 * Fex ) * sundisk;

        vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );

        vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );

        gl_FragColor = vec4( retColor, 1.0 );

      #include <tonemapping_fragment>
      #include <${Wh>=154?"colorspace_fragment":"encodings_fragment"}>

      }
    `},Rb=new pn({name:"SkyShader",fragmentShader:$c.fragmentShader,vertexShader:$c.vertexShader,uniforms:Ds.clone($c.uniforms),side:on,depthWrite:!1});class Ib extends bt{constructor(){super(new Hr(1,1,1),Rb)}}Cb(Ib,"SkyShader",$c);Cb(Ib,"material",Rb);new Pn;new U;new Dn(0,0,0,"YXZ");new U;var XD=Object.defineProperty,YD=(n,e,t)=>e in n?XD(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Ye=(n,e,t)=>(YD(n,typeof e!="symbol"?e+"":e,t),t);const Uc=new zs,lv=new mi,jD=Math.cos(70*(Math.PI/180)),cv=(n,e)=>(n%e+e)%e;class $D extends Ei{constructor(e,t){super(),Ye(this,"object"),Ye(this,"domElement"),Ye(this,"enabled",!0),Ye(this,"target",new U),Ye(this,"minDistance",0),Ye(this,"maxDistance",1/0),Ye(this,"minZoom",0),Ye(this,"maxZoom",1/0),Ye(this,"minPolarAngle",0),Ye(this,"maxPolarAngle",Math.PI),Ye(this,"minAzimuthAngle",-1/0),Ye(this,"maxAzimuthAngle",1/0),Ye(this,"enableDamping",!1),Ye(this,"dampingFactor",.05),Ye(this,"enableZoom",!0),Ye(this,"zoomSpeed",1),Ye(this,"enableRotate",!0),Ye(this,"rotateSpeed",1),Ye(this,"enablePan",!0),Ye(this,"panSpeed",1),Ye(this,"screenSpacePanning",!0),Ye(this,"keyPanSpeed",7),Ye(this,"zoomToCursor",!1),Ye(this,"autoRotate",!1),Ye(this,"autoRotateSpeed",2),Ye(this,"reverseOrbit",!1),Ye(this,"reverseHorizontalOrbit",!1),Ye(this,"reverseVerticalOrbit",!1),Ye(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),Ye(this,"mouseButtons",{LEFT:Fi.ROTATE,MIDDLE:Fi.DOLLY,RIGHT:Fi.PAN}),Ye(this,"touches",{ONE:nr.ROTATE,TWO:nr.DOLLY_PAN}),Ye(this,"target0"),Ye(this,"position0"),Ye(this,"zoom0"),Ye(this,"_domElementKeyEvents",null),Ye(this,"getPolarAngle"),Ye(this,"getAzimuthalAngle"),Ye(this,"setPolarAngle"),Ye(this,"setAzimuthalAngle"),Ye(this,"getDistance"),Ye(this,"getZoomScale"),Ye(this,"listenToKeyEvents"),Ye(this,"stopListenToKeyEvents"),Ye(this,"saveState"),Ye(this,"reset"),Ye(this,"update"),Ye(this,"connect"),Ye(this,"dispose"),Ye(this,"dollyIn"),Ye(this,"dollyOut"),Ye(this,"getScale"),Ye(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>u.phi,this.getAzimuthalAngle=()=>u.theta,this.setPolarAngle=V=>{let se=cv(V,2*Math.PI),Se=u.phi;Se<0&&(Se+=2*Math.PI),se<0&&(se+=2*Math.PI);let X=Math.abs(se-Se);2*Math.PI-X<X&&(se<Se?se+=2*Math.PI:Se+=2*Math.PI),h.phi=se-Se,i.update()},this.setAzimuthalAngle=V=>{let se=cv(V,2*Math.PI),Se=u.theta;Se<0&&(Se+=2*Math.PI),se<0&&(se+=2*Math.PI);let X=Math.abs(se-Se);2*Math.PI-X<X&&(se<Se?se+=2*Math.PI:Se+=2*Math.PI),h.theta=se-Se,i.update()},this.getDistance=()=>i.object.position.distanceTo(i.target),this.listenToKeyEvents=V=>{V.addEventListener("keydown",re),this._domElementKeyEvents=V},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",re),this._domElementKeyEvents=null},this.saveState=()=>{i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=()=>{i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(r),i.update(),l=a.NONE},this.update=(()=>{const V=new U,se=new U(0,1,0),Se=new bn().setFromUnitVectors(e.up,se),X=Se.clone().invert(),xe=new U,we=new bn,Ne=2*Math.PI;return function(){const Me=i.object.position;Se.setFromUnitVectors(e.up,se),X.copy(Se).invert(),V.copy(Me).sub(i.target),V.applyQuaternion(Se),u.setFromVector3(V),i.autoRotate&&l===a.NONE&&W(D()),i.enableDamping?(u.theta+=h.theta*i.dampingFactor,u.phi+=h.phi*i.dampingFactor):(u.theta+=h.theta,u.phi+=h.phi);let ge=i.minAzimuthAngle,Ue=i.maxAzimuthAngle;isFinite(ge)&&isFinite(Ue)&&(ge<-Math.PI?ge+=Ne:ge>Math.PI&&(ge-=Ne),Ue<-Math.PI?Ue+=Ne:Ue>Math.PI&&(Ue-=Ne),ge<=Ue?u.theta=Math.max(ge,Math.min(Ue,u.theta)):u.theta=u.theta>(ge+Ue)/2?Math.max(ge,u.theta):Math.min(Ue,u.theta)),u.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,u.phi)),u.makeSafe(),i.enableDamping===!0?i.target.addScaledVector(d,i.dampingFactor):i.target.add(d),i.zoomToCursor&&_||i.object.isOrthographicCamera?u.radius=Ve(u.radius):u.radius=Ve(u.radius*f),V.setFromSpherical(u),V.applyQuaternion(X),Me.copy(i.target).add(V),i.object.matrixAutoUpdate||i.object.updateMatrix(),i.object.lookAt(i.target),i.enableDamping===!0?(h.theta*=1-i.dampingFactor,h.phi*=1-i.dampingFactor,d.multiplyScalar(1-i.dampingFactor)):(h.set(0,0,0),d.set(0,0,0));let qe=!1;if(i.zoomToCursor&&_){let vt=null;if(i.object instanceof Rt&&i.object.isPerspectiveCamera){const ut=V.length();vt=Ve(ut*f);const Nn=ut-vt;i.object.position.addScaledVector(E,Nn),i.object.updateMatrixWorld()}else if(i.object.isOrthographicCamera){const ut=new U(S.x,S.y,0);ut.unproject(i.object),i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/f)),i.object.updateProjectionMatrix(),qe=!0;const Nn=new U(S.x,S.y,0);Nn.unproject(i.object),i.object.position.sub(Nn).add(ut),i.object.updateMatrixWorld(),vt=V.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),i.zoomToCursor=!1;vt!==null&&(i.screenSpacePanning?i.target.set(0,0,-1).transformDirection(i.object.matrix).multiplyScalar(vt).add(i.object.position):(Uc.origin.copy(i.object.position),Uc.direction.set(0,0,-1).transformDirection(i.object.matrix),Math.abs(i.object.up.dot(Uc.direction))<jD?e.lookAt(i.target):(lv.setFromNormalAndCoplanarPoint(i.object.up,i.target),Uc.intersectPlane(lv,i.target))))}else i.object instanceof cr&&i.object.isOrthographicCamera&&(qe=f!==1,qe&&(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/f)),i.object.updateProjectionMatrix()));return f=1,_=!1,qe||xe.distanceToSquared(i.object.position)>c||8*(1-we.dot(i.object.quaternion))>c?(i.dispatchEvent(r),xe.copy(i.object.position),we.copy(i.object.quaternion),qe=!1,!0):!1}})(),this.connect=V=>{i.domElement=V,i.domElement.style.touchAction="none",i.domElement.addEventListener("contextmenu",Pe),i.domElement.addEventListener("pointerdown",pe),i.domElement.addEventListener("pointercancel",R),i.domElement.addEventListener("wheel",fe)},this.dispose=()=>{var V,se,Se,X,xe,we;i.domElement&&(i.domElement.style.touchAction="auto"),(V=i.domElement)==null||V.removeEventListener("contextmenu",Pe),(se=i.domElement)==null||se.removeEventListener("pointerdown",pe),(Se=i.domElement)==null||Se.removeEventListener("pointercancel",R),(X=i.domElement)==null||X.removeEventListener("wheel",fe),(xe=i.domElement)==null||xe.ownerDocument.removeEventListener("pointermove",L),(we=i.domElement)==null||we.ownerDocument.removeEventListener("pointerup",R),i._domElementKeyEvents!==null&&i._domElementKeyEvents.removeEventListener("keydown",re)};const i=this,r={type:"change"},s={type:"start"},o={type:"end"},a={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let l=a.NONE;const c=1e-6,u=new Hd,h=new Hd;let f=1;const d=new U,p=new de,v=new de,m=new de,g=new de,M=new de,y=new de,b=new de,C=new de,w=new de,E=new U,S=new de;let _=!1;const x=[],A={};function D(){return 2*Math.PI/60/60*i.autoRotateSpeed}function k(){return Math.pow(.95,i.zoomSpeed)}function W(V){i.reverseOrbit||i.reverseHorizontalOrbit?h.theta+=V:h.theta-=V}function Y(V){i.reverseOrbit||i.reverseVerticalOrbit?h.phi+=V:h.phi-=V}const z=(()=>{const V=new U;return function(se,Se){V.setFromMatrixColumn(Se,0),V.multiplyScalar(-se),d.add(V)}})(),Q=(()=>{const V=new U;return function(se,Se){i.screenSpacePanning===!0?V.setFromMatrixColumn(Se,1):(V.setFromMatrixColumn(Se,0),V.crossVectors(i.object.up,V)),V.multiplyScalar(se),d.add(V)}})(),Z=(()=>{const V=new U;return function(se,Se){const X=i.domElement;if(X&&i.object instanceof Rt&&i.object.isPerspectiveCamera){const xe=i.object.position;V.copy(xe).sub(i.target);let we=V.length();we*=Math.tan(i.object.fov/2*Math.PI/180),z(2*se*we/X.clientHeight,i.object.matrix),Q(2*Se*we/X.clientHeight,i.object.matrix)}else X&&i.object instanceof cr&&i.object.isOrthographicCamera?(z(se*(i.object.right-i.object.left)/i.object.zoom/X.clientWidth,i.object.matrix),Q(Se*(i.object.top-i.object.bottom)/i.object.zoom/X.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}})();function he(V){i.object instanceof Rt&&i.object.isPerspectiveCamera||i.object instanceof cr&&i.object.isOrthographicCamera?f=V:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function me(V){he(f/V)}function oe(V){he(f*V)}function Ee(V){if(!i.zoomToCursor||!i.domElement)return;_=!0;const se=i.domElement.getBoundingClientRect(),Se=V.clientX-se.left,X=V.clientY-se.top,xe=se.width,we=se.height;S.x=Se/xe*2-1,S.y=-(X/we)*2+1,E.set(S.x,S.y,1).unproject(i.object).sub(i.object.position).normalize()}function Ve(V){return Math.max(i.minDistance,Math.min(i.maxDistance,V))}function ze(V){p.set(V.clientX,V.clientY)}function ae(V){Ee(V),b.set(V.clientX,V.clientY)}function ye(V){g.set(V.clientX,V.clientY)}function _e(V){v.set(V.clientX,V.clientY),m.subVectors(v,p).multiplyScalar(i.rotateSpeed);const se=i.domElement;se&&(W(2*Math.PI*m.x/se.clientHeight),Y(2*Math.PI*m.y/se.clientHeight)),p.copy(v),i.update()}function ue(V){C.set(V.clientX,V.clientY),w.subVectors(C,b),w.y>0?me(k()):w.y<0&&oe(k()),b.copy(C),i.update()}function I(V){M.set(V.clientX,V.clientY),y.subVectors(M,g).multiplyScalar(i.panSpeed),Z(y.x,y.y),g.copy(M),i.update()}function F(V){Ee(V),V.deltaY<0?oe(k()):V.deltaY>0&&me(k()),i.update()}function $(V){let se=!1;switch(V.code){case i.keys.UP:Z(0,i.keyPanSpeed),se=!0;break;case i.keys.BOTTOM:Z(0,-i.keyPanSpeed),se=!0;break;case i.keys.LEFT:Z(i.keyPanSpeed,0),se=!0;break;case i.keys.RIGHT:Z(-i.keyPanSpeed,0),se=!0;break}se&&(V.preventDefault(),i.update())}function P(){if(x.length==1)p.set(x[0].pageX,x[0].pageY);else{const V=.5*(x[0].pageX+x[1].pageX),se=.5*(x[0].pageY+x[1].pageY);p.set(V,se)}}function T(){if(x.length==1)g.set(x[0].pageX,x[0].pageY);else{const V=.5*(x[0].pageX+x[1].pageX),se=.5*(x[0].pageY+x[1].pageY);g.set(V,se)}}function O(){const V=x[0].pageX-x[1].pageX,se=x[0].pageY-x[1].pageY,Se=Math.sqrt(V*V+se*se);b.set(0,Se)}function B(){i.enableZoom&&O(),i.enablePan&&T()}function G(){i.enableZoom&&O(),i.enableRotate&&P()}function H(V){if(x.length==1)v.set(V.pageX,V.pageY);else{const Se=Oe(V),X=.5*(V.pageX+Se.x),xe=.5*(V.pageY+Se.y);v.set(X,xe)}m.subVectors(v,p).multiplyScalar(i.rotateSpeed);const se=i.domElement;se&&(W(2*Math.PI*m.x/se.clientHeight),Y(2*Math.PI*m.y/se.clientHeight)),p.copy(v)}function K(V){if(x.length==1)M.set(V.pageX,V.pageY);else{const se=Oe(V),Se=.5*(V.pageX+se.x),X=.5*(V.pageY+se.y);M.set(Se,X)}y.subVectors(M,g).multiplyScalar(i.panSpeed),Z(y.x,y.y),g.copy(M)}function q(V){const se=Oe(V),Se=V.pageX-se.x,X=V.pageY-se.y,xe=Math.sqrt(Se*Se+X*X);C.set(0,xe),w.set(0,Math.pow(C.y/b.y,i.zoomSpeed)),me(w.y),b.copy(C)}function J(V){i.enableZoom&&q(V),i.enablePan&&K(V)}function ie(V){i.enableZoom&&q(V),i.enableRotate&&H(V)}function pe(V){var se,Se;i.enabled!==!1&&(x.length===0&&((se=i.domElement)==null||se.ownerDocument.addEventListener("pointermove",L),(Se=i.domElement)==null||Se.ownerDocument.addEventListener("pointerup",R)),Le(V),V.pointerType==="touch"?Ce(V):j(V))}function L(V){i.enabled!==!1&&(V.pointerType==="touch"?ve(V):te(V))}function R(V){var se,Se,X;be(V),x.length===0&&((se=i.domElement)==null||se.releasePointerCapture(V.pointerId),(Se=i.domElement)==null||Se.ownerDocument.removeEventListener("pointermove",L),(X=i.domElement)==null||X.ownerDocument.removeEventListener("pointerup",R)),i.dispatchEvent(o),l=a.NONE}function j(V){let se;switch(V.button){case 0:se=i.mouseButtons.LEFT;break;case 1:se=i.mouseButtons.MIDDLE;break;case 2:se=i.mouseButtons.RIGHT;break;default:se=-1}switch(se){case Fi.DOLLY:if(i.enableZoom===!1)return;ae(V),l=a.DOLLY;break;case Fi.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(i.enablePan===!1)return;ye(V),l=a.PAN}else{if(i.enableRotate===!1)return;ze(V),l=a.ROTATE}break;case Fi.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(i.enableRotate===!1)return;ze(V),l=a.ROTATE}else{if(i.enablePan===!1)return;ye(V),l=a.PAN}break;default:l=a.NONE}l!==a.NONE&&i.dispatchEvent(s)}function te(V){if(i.enabled!==!1)switch(l){case a.ROTATE:if(i.enableRotate===!1)return;_e(V);break;case a.DOLLY:if(i.enableZoom===!1)return;ue(V);break;case a.PAN:if(i.enablePan===!1)return;I(V);break}}function fe(V){i.enabled===!1||i.enableZoom===!1||l!==a.NONE&&l!==a.ROTATE||(V.preventDefault(),i.dispatchEvent(s),F(V),i.dispatchEvent(o))}function re(V){i.enabled===!1||i.enablePan===!1||$(V)}function Ce(V){switch(Ie(V),x.length){case 1:switch(i.touches.ONE){case nr.ROTATE:if(i.enableRotate===!1)return;P(),l=a.TOUCH_ROTATE;break;case nr.PAN:if(i.enablePan===!1)return;T(),l=a.TOUCH_PAN;break;default:l=a.NONE}break;case 2:switch(i.touches.TWO){case nr.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;B(),l=a.TOUCH_DOLLY_PAN;break;case nr.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;G(),l=a.TOUCH_DOLLY_ROTATE;break;default:l=a.NONE}break;default:l=a.NONE}l!==a.NONE&&i.dispatchEvent(s)}function ve(V){switch(Ie(V),l){case a.TOUCH_ROTATE:if(i.enableRotate===!1)return;H(V),i.update();break;case a.TOUCH_PAN:if(i.enablePan===!1)return;K(V),i.update();break;case a.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;J(V),i.update();break;case a.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;ie(V),i.update();break;default:l=a.NONE}}function Pe(V){i.enabled!==!1&&V.preventDefault()}function Le(V){x.push(V)}function be(V){delete A[V.pointerId];for(let se=0;se<x.length;se++)if(x[se].pointerId==V.pointerId){x.splice(se,1);return}}function Ie(V){let se=A[V.pointerId];se===void 0&&(se=new de,A[V.pointerId]=se),se.set(V.pageX,V.pageY)}function Oe(V){const se=V.pointerId===x[0].pointerId?x[1]:x[0];return A[se.pointerId]}this.dollyIn=(V=k())=>{oe(V),i.update()},this.dollyOut=(V=k())=>{me(V),i.update()},this.getScale=()=>f,this.setScale=V=>{he(V),i.update()},this.getZoomScale=()=>k(),t!==void 0&&this.connect(t),this.update()}}new Xe;new U;new Dn;new U;var qD=Object.defineProperty,ZD=(n,e,t)=>e in n?qD(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,_m=(n,e,t)=>(ZD(n,typeof e!="symbol"?e+"":e,t),t);class Pb{constructor(e){_m(this,"data"),this.data=e}generateShapes(e,t=100,i){const r=[],s={letterSpacing:0,lineHeight:1,...i},o=KD(e,t,this.data,s);for(let a=0,l=o.length;a<l;a++)Array.prototype.push.apply(r,o[a].toShapes(!1));return r}}_m(Pb,"isFont");_m(Pb,"type");function KD(n,e,t,i){const r=Array.from(n),s=e/t.resolution,o=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*s,a=[];let l=0,c=0;for(let u=0;u<r.length;u++){const h=r[u];if(h===`
`)l=0,c-=o*i.lineHeight;else{const f=JD(h,s,l,c,t);f&&(l+=f.offsetX+i.letterSpacing,a.push(f.path))}}return a}function JD(n,e,t,i,r){const s=r.glyphs[n]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+n+'" does not exists in font family '+r.familyName+".");return}const o=new Yy;let a,l,c,u,h,f,d,p;if(s.o){const v=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,g=v.length;m<g;)switch(v[m++]){case"m":a=parseInt(v[m++])*e+t,l=parseInt(v[m++])*e+i,o.moveTo(a,l);break;case"l":a=parseInt(v[m++])*e+t,l=parseInt(v[m++])*e+i,o.lineTo(a,l);break;case"q":c=parseInt(v[m++])*e+t,u=parseInt(v[m++])*e+i,h=parseInt(v[m++])*e+t,f=parseInt(v[m++])*e+i,o.quadraticCurveTo(h,f,c,u);break;case"b":c=parseInt(v[m++])*e+t,u=parseInt(v[m++])*e+i,h=parseInt(v[m++])*e+t,f=parseInt(v[m++])*e+i,d=parseInt(v[m++])*e+t,p=parseInt(v[m++])*e+i,o.bezierCurveTo(h,f,d,p,c,u);break}}return{offsetX:s.ha*e,path:o}}const uv=new Kt,Nc=new U;class Lb extends om{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new Fe(e,3)),this.setAttribute("uv",new Fe(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Xu(t,6,1);return this.setAttribute("instanceStart",new Ln(i,3,0)),this.setAttribute("instanceEnd",new Ln(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e,t=3){let i;e instanceof Float32Array?i=e:Array.isArray(e)&&(i=new Float32Array(e));const r=new Xu(i,t*2,1);return this.setAttribute("instanceColorStart",new Ln(r,t,0)),this.setAttribute("instanceColorEnd",new Ln(r,t,t)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new Kp(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Kt);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),uv.setFromBufferAttribute(t),this.boundingBox.union(uv))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Jt),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)Nc.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Nc)),Nc.fromBufferAttribute(t,s),r=Math.max(r,i.distanceToSquared(Nc));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}class Db extends Lb{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let r=0;r<t;r+=3)i[2*r]=e[r],i[2*r+1]=e[r+1],i[2*r+2]=e[r+2],i[2*r+3]=e[r+3],i[2*r+4]=e[r+4],i[2*r+5]=e[r+5];return super.setPositions(i),this}setColors(e,t=3){const i=e.length-t,r=new Float32Array(2*i);if(t===3)for(let s=0;s<i;s+=t)r[2*s]=e[s],r[2*s+1]=e[s+1],r[2*s+2]=e[s+2],r[2*s+3]=e[s+3],r[2*s+4]=e[s+4],r[2*s+5]=e[s+5];else for(let s=0;s<i;s+=t)r[2*s]=e[s],r[2*s+1]=e[s+1],r[2*s+2]=e[s+2],r[2*s+3]=e[s+3],r[2*s+4]=e[s+4],r[2*s+5]=e[s+5],r[2*s+6]=e[s+6],r[2*s+7]=e[s+7];return super.setColors(r,t),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class xm extends pn{constructor(e){super({type:"LineMaterial",uniforms:Ds.clone(Ds.merge([Re.common,Re.fog,{worldUnits:{value:1},linewidth:{value:1},resolution:{value:new de(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}}])),vertexShader:`
				#include <common>
				#include <fog_pars_vertex>
				#include <logdepthbuf_pars_vertex>
				#include <clipping_planes_pars_vertex>

				uniform float linewidth;
				uniform vec2 resolution;

				attribute vec3 instanceStart;
				attribute vec3 instanceEnd;

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
						attribute vec4 instanceColorStart;
						attribute vec4 instanceColorEnd;
					#else
						varying vec3 vLineColor;
						attribute vec3 instanceColorStart;
						attribute vec3 instanceColorEnd;
					#endif
				#endif

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#ifdef USE_DASH

					uniform float dashScale;
					attribute float instanceDistanceStart;
					attribute float instanceDistanceEnd;
					varying float vLineDistance;

				#endif

				void trimSegment( const in vec4 start, inout vec4 end ) {

					// trim end segment so it terminates between the camera plane and the near plane

					// conservative estimate of the near plane
					float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
					float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
					float nearEstimate = - 0.5 * b / a;

					float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

					end.xyz = mix( start.xyz, end.xyz, alpha );

				}

				void main() {

					#ifdef USE_COLOR

						vLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

					#endif

					#ifdef USE_DASH

						vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
						vUv = uv;

					#endif

					float aspect = resolution.x / resolution.y;

					// camera space
					vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
					vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

					#ifdef WORLD_UNITS

						worldStart = start.xyz;
						worldEnd = end.xyz;

					#else

						vUv = uv;

					#endif

					// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
					// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
					// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
					// perhaps there is a more elegant solution -- WestLangley

					bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

					if ( perspective ) {

						if ( start.z < 0.0 && end.z >= 0.0 ) {

							trimSegment( start, end );

						} else if ( end.z < 0.0 && start.z >= 0.0 ) {

							trimSegment( end, start );

						}

					}

					// clip space
					vec4 clipStart = projectionMatrix * start;
					vec4 clipEnd = projectionMatrix * end;

					// ndc space
					vec3 ndcStart = clipStart.xyz / clipStart.w;
					vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

					// direction
					vec2 dir = ndcEnd.xy - ndcStart.xy;

					// account for clip-space aspect ratio
					dir.x *= aspect;
					dir = normalize( dir );

					#ifdef WORLD_UNITS

						// get the offset direction as perpendicular to the view vector
						vec3 worldDir = normalize( end.xyz - start.xyz );
						vec3 offset;
						if ( position.y < 0.5 ) {

							offset = normalize( cross( start.xyz, worldDir ) );

						} else {

							offset = normalize( cross( end.xyz, worldDir ) );

						}

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

						// don't extend the line if we're rendering dashes because we
						// won't be rendering the endcaps
						#ifndef USE_DASH

							// extend the line bounds to encompass  endcaps
							start.xyz += - worldDir * linewidth * 0.5;
							end.xyz += worldDir * linewidth * 0.5;

							// shift the position of the quad so it hugs the forward edge of the line
							offset.xy -= dir * forwardOffset;
							offset.z += 0.5;

						#endif

						// endcaps
						if ( position.y > 1.0 || position.y < 0.0 ) {

							offset.xy += dir * 2.0 * forwardOffset;

						}

						// adjust for linewidth
						offset *= linewidth * 0.5;

						// set the world position
						worldPos = ( position.y < 0.5 ) ? start : end;
						worldPos.xyz += offset;

						// project the worldpos
						vec4 clip = projectionMatrix * worldPos;

						// shift the depth of the projected points so the line
						// segments overlap neatly
						vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
						clip.z = clipPose.z * clip.w;

					#else

						vec2 offset = vec2( dir.y, - dir.x );
						// undo aspect ratio adjustment
						dir.x /= aspect;
						offset.x /= aspect;

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						// endcaps
						if ( position.y < 0.0 ) {

							offset += - dir;

						} else if ( position.y > 1.0 ) {

							offset += dir;

						}

						// adjust for linewidth
						offset *= linewidth;

						// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
						offset /= resolution.y;

						// select end
						vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

						// back to clip space
						offset *= clip.w;

						clip.xy += offset;

					#endif

					gl_Position = clip;

					vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

					#include <logdepthbuf_vertex>
					#include <clipping_planes_vertex>
					#include <fog_vertex>

				}
			`,fragmentShader:`
				uniform vec3 diffuse;
				uniform float opacity;
				uniform float linewidth;

				#ifdef USE_DASH

					uniform float dashOffset;
					uniform float dashSize;
					uniform float gapSize;

				#endif

				varying float vLineDistance;

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#include <common>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <clipping_planes_pars_fragment>

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
					#else
						varying vec3 vLineColor;
					#endif
				#endif

				vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

					float mua;
					float mub;

					vec3 p13 = p1 - p3;
					vec3 p43 = p4 - p3;

					vec3 p21 = p2 - p1;

					float d1343 = dot( p13, p43 );
					float d4321 = dot( p43, p21 );
					float d1321 = dot( p13, p21 );
					float d4343 = dot( p43, p43 );
					float d2121 = dot( p21, p21 );

					float denom = d2121 * d4343 - d4321 * d4321;

					float numer = d1343 * d4321 - d1321 * d4343;

					mua = numer / denom;
					mua = clamp( mua, 0.0, 1.0 );
					mub = ( d1343 + d4321 * ( mua ) ) / d4343;
					mub = clamp( mub, 0.0, 1.0 );

					return vec2( mua, mub );

				}

				void main() {

					#include <clipping_planes_fragment>

					#ifdef USE_DASH

						if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

						if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

					#endif

					float alpha = opacity;

					#ifdef WORLD_UNITS

						// Find the closest points on the view ray and the line segment
						vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
						vec3 lineDir = worldEnd - worldStart;
						vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

						vec3 p1 = worldStart + lineDir * params.x;
						vec3 p2 = rayEnd * params.y;
						vec3 delta = p1 - p2;
						float len = length( delta );
						float norm = len / linewidth;

						#ifndef USE_DASH

							#ifdef USE_ALPHA_TO_COVERAGE

								float dnorm = fwidth( norm );
								alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

							#else

								if ( norm > 0.5 ) {

									discard;

								}

							#endif

						#endif

					#else

						#ifdef USE_ALPHA_TO_COVERAGE

							// artifacts appear on some hardware if a derivative is taken within a conditional
							float a = vUv.x;
							float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
							float len2 = a * a + b * b;
							float dlen = fwidth( len2 );

							if ( abs( vUv.y ) > 1.0 ) {

								alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

							}

						#else

							if ( abs( vUv.y ) > 1.0 ) {

								float a = vUv.x;
								float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
								float len2 = a * a + b * b;

								if ( len2 > 1.0 ) discard;

							}

						#endif

					#endif

					vec4 diffuseColor = vec4( diffuse, alpha );
					#ifdef USE_COLOR
						#ifdef USE_LINE_COLOR_ALPHA
							diffuseColor *= vLineColor;
						#else
							diffuseColor.rgb *= vLineColor;
						#endif
					#endif

					#include <logdepthbuf_fragment>

					gl_FragColor = diffuseColor;

					#include <tonemapping_fragment>
					#include <${parseInt(Fs.replace(/\D+/g,""))>=154?"colorspace_fragment":"encodings_fragment"}>
					#include <fog_fragment>
					#include <premultiplied_alpha_fragment>

				}
			`,clipping:!0}),this.isLineMaterial=!0,this.onBeforeCompile=function(){this.transparent?this.defines.USE_LINE_COLOR_ALPHA="1":delete this.defines.USE_LINE_COLOR_ALPHA},Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){this.uniforms.diffuse.value=t}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(t){t===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashed:{enumerable:!0,get:function(){return"USE_DASH"in this.defines},set(t){!!t!="USE_DASH"in this.defines&&(this.needsUpdate=!0),t===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},alphaToCoverage:{enumerable:!0,get:function(){return"USE_ALPHA_TO_COVERAGE"in this.defines},set:function(t){!!t!="USE_ALPHA_TO_COVERAGE"in this.defines&&(this.needsUpdate=!0),t===!0?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(e)}}const ld=new at,hv=new U,fv=new U,an=new at,ln=new at,Li=new at,cd=new U,ud=new Xe,un=new Wy,dv=new U,Oc=new Kt,Fc=new Jt,Di=new at;let Bi,As;function pv(n,e,t){return Di.set(0,0,-e,1).applyMatrix4(n.projectionMatrix),Di.multiplyScalar(1/Di.w),Di.x=As/t.width,Di.y=As/t.height,Di.applyMatrix4(n.projectionMatrixInverse),Di.multiplyScalar(1/Di.w),Math.abs(Math.max(Di.x,Di.y))}function QD(n,e){const t=n.matrixWorld,i=n.geometry,r=i.attributes.instanceStart,s=i.attributes.instanceEnd,o=Math.min(i.instanceCount,r.count);for(let a=0,l=o;a<l;a++){un.start.fromBufferAttribute(r,a),un.end.fromBufferAttribute(s,a),un.applyMatrix4(t);const c=new U,u=new U;Bi.distanceSqToSegment(un.start,un.end,u,c),u.distanceTo(c)<As*.5&&e.push({point:u,pointOnLine:c,distance:Bi.origin.distanceTo(u),object:n,face:null,faceIndex:a,uv:null,[_b]:null})}}function eU(n,e,t){const i=e.projectionMatrix,r=n.material.resolution,s=n.matrixWorld,o=n.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),u=-e.near;Bi.at(1,Li),Li.w=1,Li.applyMatrix4(e.matrixWorldInverse),Li.applyMatrix4(i),Li.multiplyScalar(1/Li.w),Li.x*=r.x/2,Li.y*=r.y/2,Li.z=0,cd.copy(Li),ud.multiplyMatrices(e.matrixWorldInverse,s);for(let h=0,f=c;h<f;h++){if(an.fromBufferAttribute(a,h),ln.fromBufferAttribute(l,h),an.w=1,ln.w=1,an.applyMatrix4(ud),ln.applyMatrix4(ud),an.z>u&&ln.z>u)continue;if(an.z>u){const g=an.z-ln.z,M=(an.z-u)/g;an.lerp(ln,M)}else if(ln.z>u){const g=ln.z-an.z,M=(ln.z-u)/g;ln.lerp(an,M)}an.applyMatrix4(i),ln.applyMatrix4(i),an.multiplyScalar(1/an.w),ln.multiplyScalar(1/ln.w),an.x*=r.x/2,an.y*=r.y/2,ln.x*=r.x/2,ln.y*=r.y/2,un.start.copy(an),un.start.z=0,un.end.copy(ln),un.end.z=0;const d=un.closestPointToPointParameter(cd,!0);un.at(d,dv);const p=Wi.lerp(an.z,ln.z,d),v=p>=-1&&p<=1,m=cd.distanceTo(dv)<As*.5;if(v&&m){un.start.fromBufferAttribute(a,h),un.end.fromBufferAttribute(l,h),un.start.applyMatrix4(s),un.end.applyMatrix4(s);const g=new U,M=new U;Bi.distanceSqToSegment(un.start,un.end,M,g),t.push({point:M,pointOnLine:g,distance:Bi.origin.distanceTo(M),object:n,face:null,faceIndex:h,uv:null,[_b]:null})}}}class tU extends bt{constructor(e=new Lb,t=new xm({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,r=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)hv.fromBufferAttribute(t,o),fv.fromBufferAttribute(i,o),r[a]=a===0?0:r[a-1],r[a+1]=r[a]+hv.distanceTo(fv);const s=new Xu(r,2,1);return e.setAttribute("instanceDistanceStart",new Ln(s,1,0)),e.setAttribute("instanceDistanceEnd",new Ln(s,1,1)),this}raycast(e,t){const i=this.material.worldUnits,r=e.camera;r===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=e.params.Line2!==void 0&&e.params.Line2.threshold||0;Bi=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;As=l.linewidth+s,a.boundingSphere===null&&a.computeBoundingSphere(),Fc.copy(a.boundingSphere).applyMatrix4(o);let c;if(i)c=As*.5;else{const h=Math.max(r.near,Fc.distanceToPoint(Bi.origin));c=pv(r,h,l.resolution)}if(Fc.radius+=c,Bi.intersectsSphere(Fc)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),Oc.copy(a.boundingBox).applyMatrix4(o);let u;if(i)u=As*.5;else{const h=Math.max(r.near,Oc.distanceToPoint(Bi.origin));u=pv(r,h,l.resolution)}Oc.expandByScalar(u),Bi.intersectsBox(Oc)!==!1&&(i?QD(this,t):eU(this,r,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(ld),this.material.uniforms.resolution.value.set(ld.z,ld.w))}}class nU extends tU{constructor(e=new Db,t=new xm({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}Wi.clamp;Wi.lerp;vm({screenspace:!1,color:new Ae("black"),opacity:1,thickness:.05,size:new de(1,1)},`#include <common>
   #include <morphtarget_pars_vertex>
   #include <skinning_pars_vertex>
   uniform float thickness;
   uniform bool screenspace;
   uniform vec2 size;
   void main() {
     #if defined (USE_SKINNING)
       #include <beginnormal_vertex>
       #include <morphnormal_vertex>
       #include <skinbase_vertex>
       #include <skinnormal_vertex>
       #include <defaultnormal_vertex>
     #endif
     #include <begin_vertex>
     #include <morphtarget_vertex>
     #include <skinning_vertex>
     #include <project_vertex>
     vec4 tNormal = vec4(normal, 0.0);
     vec4 tPosition = vec4(transformed, 1.0);
     #ifdef USE_INSTANCING
       tNormal = instanceMatrix * tNormal;
       tPosition = instanceMatrix * tPosition;
     #endif
     if (screenspace) {
       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;
       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); 
     } else {
       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;
       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;
       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;
       clipPosition.xy += offset;
       gl_Position = clipPosition;
     }
   }`,`uniform vec3 color;
   uniform float opacity;
   void main(){
     gl_FragColor = vec4(color, opacity);
     #include <tonemapping_fragment>
     #include <colorspace_fragment>
   }`);const iU=["args","material-uniforms-color-value"];Qd.ReflectorShader;new U;new U;new U;var hd;/Mac/.test((hd=globalThis?.navigator)===null||hd===void 0?void 0:hd.platform);const rU=["target","auto-rotate","auto-rotate-speed","enable-damping","damping-factor","enable-pan","key-pan-speed","keys","max-azimuth-angle","min-azimuth-angle","max-polar-angle","min-polar-angle","min-distance","max-distance","min-zoom","max-zoom","touches","enable-zoom","zoom-speed","enable-rotate","rotate-speed","mouse-buttons","args"],sU=en({__name:"OrbitControls",props:{makeDefault:{type:Boolean,default:!1},camera:{},domElement:{},target:{default:()=>[0,0,0]},enableDamping:{type:Boolean,default:!0},dampingFactor:{default:.05},autoRotate:{type:Boolean,default:!1},autoRotateSpeed:{default:2},enablePan:{type:Boolean,default:!0},keyPanSpeed:{default:7},keys:{},maxAzimuthAngle:{default:Number.POSITIVE_INFINITY},minAzimuthAngle:{default:Number.NEGATIVE_INFINITY},maxPolarAngle:{default:Math.PI},minPolarAngle:{default:0},minDistance:{default:0},maxDistance:{default:Number.POSITIVE_INFINITY},minZoom:{default:0},maxZoom:{default:Number.POSITIVE_INFINITY},touches:{default:()=>({ONE:nr.ROTATE,TWO:nr.DOLLY_PAN})},enableZoom:{type:Boolean,default:!0},zoomSpeed:{default:1},enableRotate:{type:Boolean,default:!0},rotateSpeed:{default:1},mouseButtons:{default:()=>({LEFT:Fi.ROTATE,MIDDLE:Fi.DOLLY,RIGHT:Fi.PAN})}},emits:["change","start","end"],setup(n,{expose:e,emit:t}){const i=n,r=t,{makeDefault:s,autoRotate:o,autoRotateSpeed:a,enableDamping:l,dampingFactor:c,enablePan:u,keyPanSpeed:h,maxAzimuthAngle:f,minAzimuthAngle:d,maxPolarAngle:p,minPolarAngle:v,minDistance:m,maxDistance:g,minZoom:M,maxZoom:y,enableZoom:b,zoomSpeed:C,enableRotate:w,touches:E,rotateSpeed:S,target:_,mouseButtons:x}=kr(i),{camera:A,renderer:D,extend:k,controls:W,invalidate:Y}=Hs(),z=lt(null);k({OrbitControls:$D}),Lt(z,he=>{Q(),he&&s.value?W.value=he:W.value=null});function Q(){id(z.value,"change",()=>{r("change",z.value),Y()}),id(z.value,"start",()=>r("start",z.value)),id(z.value,"end",()=>r("end",z.value))}const{onBeforeRender:Z}=gm();return Z(({invalidate:he})=>{z.value&&(l.value||o.value)&&(z.value.update(),o.value&&he())}),Si(()=>{z.value&&z.value.dispose()}),e({instance:z}),(he,me)=>(he.camera||Ge(A))&&(he.domElement||Ge(D))?(nt(),St("TresOrbitControls",{key:0,ref_key:"controlsRef",ref:z,target:Ge(_),"auto-rotate":Ge(o),"auto-rotate-speed":Ge(a),"enable-damping":Ge(l),"damping-factor":Ge(c),"enable-pan":Ge(u),"key-pan-speed":Ge(h),keys:he.keys,"max-azimuth-angle":Ge(f),"min-azimuth-angle":Ge(d),"max-polar-angle":Ge(p),"min-polar-angle":Ge(v),"min-distance":Ge(m),"max-distance":Ge(g),"min-zoom":Ge(M),"max-zoom":Ge(y),touches:Ge(E),"enable-zoom":Ge(b),"zoom-speed":Ge(C),"enable-rotate":Ge(w),"rotate-speed":Ge(S),"mouse-buttons":Ge(x),args:[he.camera||Ge(A),he.domElement||Ge(D).domElement]},null,8,rU)):U_("",!0)}});function Bc(n){throw new Error('Could not dynamically require "'+n+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var mv={exports:{}},gv;function oU(){return gv||(gv=1,(function(n,e){(function(t){n.exports=t()})(function(){return(function t(i,r,s){function o(c,u){if(!r[c]){if(!i[c]){var h=typeof Bc=="function"&&Bc;if(!u&&h)return h(c,!0);if(a)return a(c,!0);throw new Error("Cannot find module '"+c+"'")}u=r[c]={exports:{}},i[c][0].call(u.exports,function(f){var d=i[c][1][f];return o(d||f)},u,u.exports,t,i,r,s)}return r[c].exports}for(var a=typeof Bc=="function"&&Bc,l=0;l<s.length;l++)o(s[l]);return o})({1:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){var p=t("crypto");function v(w,E){E=M(w,E);var S;return(S=E.algorithm!=="passthrough"?p.createHash(E.algorithm):new C).write===void 0&&(S.write=S.update,S.end=S.update),b(E,S).dispatch(w),S.update||S.end(""),S.digest?S.digest(E.encoding==="buffer"?void 0:E.encoding):(w=S.read(),E.encoding!=="buffer"?w.toString(E.encoding):w)}(r=i.exports=v).sha1=function(w){return v(w)},r.keys=function(w){return v(w,{excludeValues:!0,algorithm:"sha1",encoding:"hex"})},r.MD5=function(w){return v(w,{algorithm:"md5",encoding:"hex"})},r.keysMD5=function(w){return v(w,{algorithm:"md5",encoding:"hex",excludeValues:!0})};var m=p.getHashes?p.getHashes().slice():["sha1","md5"],g=(m.push("passthrough"),["buffer","hex","binary","base64"]);function M(w,E){var S={};if(S.algorithm=(E=E||{}).algorithm||"sha1",S.encoding=E.encoding||"hex",S.excludeValues=!!E.excludeValues,S.algorithm=S.algorithm.toLowerCase(),S.encoding=S.encoding.toLowerCase(),S.ignoreUnknown=E.ignoreUnknown===!0,S.respectType=E.respectType!==!1,S.respectFunctionNames=E.respectFunctionNames!==!1,S.respectFunctionProperties=E.respectFunctionProperties!==!1,S.unorderedArrays=E.unorderedArrays===!0,S.unorderedSets=E.unorderedSets!==!1,S.unorderedObjects=E.unorderedObjects!==!1,S.replacer=E.replacer||void 0,S.excludeKeys=E.excludeKeys||void 0,w===void 0)throw new Error("Object argument required.");for(var _=0;_<m.length;++_)m[_].toLowerCase()===S.algorithm.toLowerCase()&&(S.algorithm=m[_]);if(m.indexOf(S.algorithm)===-1)throw new Error('Algorithm "'+S.algorithm+'"  not supported. supported values: '+m.join(", "));if(g.indexOf(S.encoding)===-1&&S.algorithm!=="passthrough")throw new Error('Encoding "'+S.encoding+'"  not supported. supported values: '+g.join(", "));return S}function y(w){if(typeof w=="function")return/^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i.exec(Function.prototype.toString.call(w))!=null}function b(w,E,S){S=S||[];function _(x){return E.update?E.update(x,"utf8"):E.write(x,"utf8")}return{dispatch:function(x){return this["_"+((x=w.replacer?w.replacer(x):x)===null?"null":typeof x)](x)},_object:function(x){var A,D=Object.prototype.toString.call(x),k=/\[object (.*)\]/i.exec(D);if(k=(k=k?k[1]:"unknown:["+D+"]").toLowerCase(),0<=(D=S.indexOf(x)))return this.dispatch("[CIRCULAR:"+D+"]");if(S.push(x),a!==void 0&&a.isBuffer&&a.isBuffer(x))return _("buffer:"),_(x);if(k==="object"||k==="function"||k==="asyncfunction")return D=Object.keys(x),w.unorderedObjects&&(D=D.sort()),w.respectType===!1||y(x)||D.splice(0,0,"prototype","__proto__","constructor"),w.excludeKeys&&(D=D.filter(function(W){return!w.excludeKeys(W)})),_("object:"+D.length+":"),A=this,D.forEach(function(W){A.dispatch(W),_(":"),w.excludeValues||A.dispatch(x[W]),_(",")});if(!this["_"+k]){if(w.ignoreUnknown)return _("["+k+"]");throw new Error('Unknown object type "'+k+'"')}this["_"+k](x)},_array:function(x,W){W=W!==void 0?W:w.unorderedArrays!==!1;var D=this;if(_("array:"+x.length+":"),!W||x.length<=1)return x.forEach(function(Y){return D.dispatch(Y)});var k=[],W=x.map(function(Y){var z=new C,Q=S.slice();return b(w,z,Q).dispatch(Y),k=k.concat(Q.slice(S.length)),z.read().toString()});return S=S.concat(k),W.sort(),this._array(W,!1)},_date:function(x){return _("date:"+x.toJSON())},_symbol:function(x){return _("symbol:"+x.toString())},_error:function(x){return _("error:"+x.toString())},_boolean:function(x){return _("bool:"+x.toString())},_string:function(x){_("string:"+x.length+":"),_(x.toString())},_function:function(x){_("fn:"),y(x)?this.dispatch("[native]"):this.dispatch(x.toString()),w.respectFunctionNames!==!1&&this.dispatch("function-name:"+String(x.name)),w.respectFunctionProperties&&this._object(x)},_number:function(x){return _("number:"+x.toString())},_xml:function(x){return _("xml:"+x.toString())},_null:function(){return _("Null")},_undefined:function(){return _("Undefined")},_regexp:function(x){return _("regex:"+x.toString())},_uint8array:function(x){return _("uint8array:"),this.dispatch(Array.prototype.slice.call(x))},_uint8clampedarray:function(x){return _("uint8clampedarray:"),this.dispatch(Array.prototype.slice.call(x))},_int8array:function(x){return _("int8array:"),this.dispatch(Array.prototype.slice.call(x))},_uint16array:function(x){return _("uint16array:"),this.dispatch(Array.prototype.slice.call(x))},_int16array:function(x){return _("int16array:"),this.dispatch(Array.prototype.slice.call(x))},_uint32array:function(x){return _("uint32array:"),this.dispatch(Array.prototype.slice.call(x))},_int32array:function(x){return _("int32array:"),this.dispatch(Array.prototype.slice.call(x))},_float32array:function(x){return _("float32array:"),this.dispatch(Array.prototype.slice.call(x))},_float64array:function(x){return _("float64array:"),this.dispatch(Array.prototype.slice.call(x))},_arraybuffer:function(x){return _("arraybuffer:"),this.dispatch(new Uint8Array(x))},_url:function(x){return _("url:"+x.toString())},_map:function(x){return _("map:"),x=Array.from(x),this._array(x,w.unorderedSets!==!1)},_set:function(x){return _("set:"),x=Array.from(x),this._array(x,w.unorderedSets!==!1)},_file:function(x){return _("file:"),this.dispatch([x.name,x.size,x.type,x.lastModfied])},_blob:function(){if(w.ignoreUnknown)return _("[blob]");throw Error(`Hashing Blob objects is currently not supported
(see https://github.com/puleos/object-hash/issues/26)
Use "options.replacer" or "options.ignoreUnknown"
`)},_domwindow:function(){return _("domwindow")},_bigint:function(x){return _("bigint:"+x.toString())},_process:function(){return _("process")},_timer:function(){return _("timer")},_pipe:function(){return _("pipe")},_tcp:function(){return _("tcp")},_udp:function(){return _("udp")},_tty:function(){return _("tty")},_statwatcher:function(){return _("statwatcher")},_securecontext:function(){return _("securecontext")},_connection:function(){return _("connection")},_zlib:function(){return _("zlib")},_context:function(){return _("context")},_nodescript:function(){return _("nodescript")},_httpparser:function(){return _("httpparser")},_dataview:function(){return _("dataview")},_signal:function(){return _("signal")},_fsevent:function(){return _("fsevent")},_tlswrap:function(){return _("tlswrap")}}}function C(){return{buf:"",write:function(w){this.buf+=w},end:function(w){this.buf+=w},read:function(){return this.buf}}}r.writeToStream=function(w,E,S){return S===void 0&&(S=E,E={}),b(E=M(w,E),S).dispatch(w)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/fake_9a5aa49d.js","/")},{buffer:3,crypto:5,lYpoI2:11}],2:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){(function(p){var v=typeof Uint8Array<"u"?Uint8Array:Array,m=43,g=47,M=48,y=97,b=65,C=45,w=95;function E(S){return S=S.charCodeAt(0),S===m||S===C?62:S===g||S===w?63:S<M?-1:S<M+10?S-M+26+26:S<b+26?S-b:S<y+26?S-y+26:void 0}p.toByteArray=function(S){var _,x;if(0<S.length%4)throw new Error("Invalid string. Length must be a multiple of 4");var A=S.length,A=S.charAt(A-2)==="="?2:S.charAt(A-1)==="="?1:0,D=new v(3*S.length/4-A),k=0<A?S.length-4:S.length,W=0;function Y(z){D[W++]=z}for(_=0;_<k;_+=4,0)Y((16711680&(x=E(S.charAt(_))<<18|E(S.charAt(_+1))<<12|E(S.charAt(_+2))<<6|E(S.charAt(_+3))))>>16),Y((65280&x)>>8),Y(255&x);return A==2?Y(255&(x=E(S.charAt(_))<<2|E(S.charAt(_+1))>>4)):A==1&&(Y((x=E(S.charAt(_))<<10|E(S.charAt(_+1))<<4|E(S.charAt(_+2))>>2)>>8&255),Y(255&x)),D},p.fromByteArray=function(S){var _,x,A,D,k=S.length%3,W="";function Y(z){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(z)}for(_=0,A=S.length-k;_<A;_+=3)x=(S[_]<<16)+(S[_+1]<<8)+S[_+2],W+=Y((D=x)>>18&63)+Y(D>>12&63)+Y(D>>6&63)+Y(63&D);switch(k){case 1:W=(W+=Y((x=S[S.length-1])>>2))+Y(x<<4&63)+"==";break;case 2:W=(W=(W+=Y((x=(S[S.length-2]<<8)+S[S.length-1])>>10))+Y(x>>4&63))+Y(x<<2&63)+"="}return W}})(r===void 0?this.base64js={}:r)}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js","/node_modules/gulp-browserify/node_modules/base64-js/lib")},{buffer:3,lYpoI2:11}],3:[function(t,i,r){(function(s,o,m,l,c,u,h,f,d){var p=t("base64-js"),v=t("ieee754");function m(I,F,$){if(!(this instanceof m))return new m(I,F,$);var P,T,O,B,G=typeof I;if(F==="base64"&&G=="string")for(I=(B=I).trim?B.trim():B.replace(/^\s+|\s+$/g,"");I.length%4!=0;)I+="=";if(G=="number")P=Z(I);else if(G=="string")P=m.byteLength(I,F);else{if(G!="object")throw new Error("First argument needs to be a number, array or string.");P=Z(I.length)}if(m._useTypedArrays?T=m._augment(new Uint8Array(P)):((T=this).length=P,T._isBuffer=!0),m._useTypedArrays&&typeof I.byteLength=="number")T._set(I);else if(he(B=I)||m.isBuffer(B)||B&&typeof B=="object"&&typeof B.length=="number")for(O=0;O<P;O++)m.isBuffer(I)?T[O]=I.readUInt8(O):T[O]=I[O];else if(G=="string")T.write(I,0,F);else if(G=="number"&&!m._useTypedArrays&&!$)for(O=0;O<P;O++)T[O]=0;return T}function g(I,F,$,P){return m._charsWritten=Ve((function(T){for(var O=[],B=0;B<T.length;B++)O.push(255&T.charCodeAt(B));return O})(F),I,$,P)}function M(I,F,$,P){return m._charsWritten=Ve((function(T){for(var O,B,G=[],H=0;H<T.length;H++)B=T.charCodeAt(H),O=B>>8,B=B%256,G.push(B),G.push(O);return G})(F),I,$,P)}function y(I,F,$){var P="";$=Math.min(I.length,$);for(var T=F;T<$;T++)P+=String.fromCharCode(I[T]);return P}function b(I,F,$,O){O||(ue(typeof $=="boolean","missing or invalid endian"),ue(F!=null,"missing offset"),ue(F+1<I.length,"Trying to read beyond buffer length"));var T,O=I.length;if(!(O<=F))return $?(T=I[F],F+1<O&&(T|=I[F+1]<<8)):(T=I[F]<<8,F+1<O&&(T|=I[F+1])),T}function C(I,F,$,O){O||(ue(typeof $=="boolean","missing or invalid endian"),ue(F!=null,"missing offset"),ue(F+3<I.length,"Trying to read beyond buffer length"));var T,O=I.length;if(!(O<=F))return $?(F+2<O&&(T=I[F+2]<<16),F+1<O&&(T|=I[F+1]<<8),T|=I[F],F+3<O&&(T+=I[F+3]<<24>>>0)):(F+1<O&&(T=I[F+1]<<16),F+2<O&&(T|=I[F+2]<<8),F+3<O&&(T|=I[F+3]),T+=I[F]<<24>>>0),T}function w(I,F,$,P){if(P||(ue(typeof $=="boolean","missing or invalid endian"),ue(F!=null,"missing offset"),ue(F+1<I.length,"Trying to read beyond buffer length")),!(I.length<=F))return P=b(I,F,$,!0),32768&P?-1*(65535-P+1):P}function E(I,F,$,P){if(P||(ue(typeof $=="boolean","missing or invalid endian"),ue(F!=null,"missing offset"),ue(F+3<I.length,"Trying to read beyond buffer length")),!(I.length<=F))return P=C(I,F,$,!0),2147483648&P?-1*(4294967295-P+1):P}function S(I,F,$,P){return P||(ue(typeof $=="boolean","missing or invalid endian"),ue(F+3<I.length,"Trying to read beyond buffer length")),v.read(I,F,$,23,4)}function _(I,F,$,P){return P||(ue(typeof $=="boolean","missing or invalid endian"),ue(F+7<I.length,"Trying to read beyond buffer length")),v.read(I,F,$,52,8)}function x(I,F,$,P,T){if(T||(ue(F!=null,"missing value"),ue(typeof P=="boolean","missing or invalid endian"),ue($!=null,"missing offset"),ue($+1<I.length,"trying to write beyond buffer length"),ae(F,65535)),T=I.length,!(T<=$))for(var O=0,B=Math.min(T-$,2);O<B;O++)I[$+O]=(F&255<<8*(P?O:1-O))>>>8*(P?O:1-O)}function A(I,F,$,P,T){if(T||(ue(F!=null,"missing value"),ue(typeof P=="boolean","missing or invalid endian"),ue($!=null,"missing offset"),ue($+3<I.length,"trying to write beyond buffer length"),ae(F,4294967295)),T=I.length,!(T<=$))for(var O=0,B=Math.min(T-$,4);O<B;O++)I[$+O]=F>>>8*(P?O:3-O)&255}function D(I,F,$,P,T){T||(ue(F!=null,"missing value"),ue(typeof P=="boolean","missing or invalid endian"),ue($!=null,"missing offset"),ue($+1<I.length,"Trying to write beyond buffer length"),ye(F,32767,-32768)),I.length<=$||x(I,0<=F?F:65535+F+1,$,P,T)}function k(I,F,$,P,T){T||(ue(F!=null,"missing value"),ue(typeof P=="boolean","missing or invalid endian"),ue($!=null,"missing offset"),ue($+3<I.length,"Trying to write beyond buffer length"),ye(F,2147483647,-2147483648)),I.length<=$||A(I,0<=F?F:4294967295+F+1,$,P,T)}function W(I,F,$,P,T){T||(ue(F!=null,"missing value"),ue(typeof P=="boolean","missing or invalid endian"),ue($!=null,"missing offset"),ue($+3<I.length,"Trying to write beyond buffer length"),_e(F,34028234663852886e22,-34028234663852886e22)),I.length<=$||v.write(I,F,$,P,23,4)}function Y(I,F,$,P,T){T||(ue(F!=null,"missing value"),ue(typeof P=="boolean","missing or invalid endian"),ue($!=null,"missing offset"),ue($+7<I.length,"Trying to write beyond buffer length"),_e(F,17976931348623157e292,-17976931348623157e292)),I.length<=$||v.write(I,F,$,P,52,8)}r.Buffer=m,r.SlowBuffer=m,r.INSPECT_MAX_BYTES=50,m.poolSize=8192,m._useTypedArrays=(function(){try{var I=new ArrayBuffer(0),F=new Uint8Array(I);return F.foo=function(){return 42},F.foo()===42&&typeof F.subarray=="function"}catch{return!1}})(),m.isEncoding=function(I){switch(String(I).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},m.isBuffer=function(I){return!(I==null||!I._isBuffer)},m.byteLength=function(I,F){var $;switch(I+="",F||"utf8"){case"hex":$=I.length/2;break;case"utf8":case"utf-8":$=oe(I).length;break;case"ascii":case"binary":case"raw":$=I.length;break;case"base64":$=Ee(I).length;break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":$=2*I.length;break;default:throw new Error("Unknown encoding")}return $},m.concat=function(I,F){if(ue(he(I),`Usage: Buffer.concat(list, [totalLength])
list should be an Array.`),I.length===0)return new m(0);if(I.length===1)return I[0];if(typeof F!="number")for(T=F=0;T<I.length;T++)F+=I[T].length;for(var $=new m(F),P=0,T=0;T<I.length;T++){var O=I[T];O.copy($,P),P+=O.length}return $},m.prototype.write=function(I,F,$,P){isFinite(F)?isFinite($)||(P=$,$=void 0):(H=P,P=F,F=$,$=H),F=Number(F)||0;var T,O,B,G,H=this.length-F;switch((!$||H<($=Number($)))&&($=H),P=String(P||"utf8").toLowerCase()){case"hex":T=(function(K,q,J,ie){J=Number(J)||0;var pe=K.length-J;(!ie||pe<(ie=Number(ie)))&&(ie=pe),ue((pe=q.length)%2==0,"Invalid hex string"),pe/2<ie&&(ie=pe/2);for(var L=0;L<ie;L++){var R=parseInt(q.substr(2*L,2),16);ue(!isNaN(R),"Invalid hex string"),K[J+L]=R}return m._charsWritten=2*L,L})(this,I,F,$);break;case"utf8":case"utf-8":O=this,B=F,G=$,T=m._charsWritten=Ve(oe(I),O,B,G);break;case"ascii":case"binary":T=g(this,I,F,$);break;case"base64":O=this,B=F,G=$,T=m._charsWritten=Ve(Ee(I),O,B,G);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":T=M(this,I,F,$);break;default:throw new Error("Unknown encoding")}return T},m.prototype.toString=function(I,F,$){var P,T,O,B,G=this;if(I=String(I||"utf8").toLowerCase(),F=Number(F)||0,($=$!==void 0?Number($):G.length)===F)return"";switch(I){case"hex":P=(function(H,K,q){var J=H.length;(!K||K<0)&&(K=0),(!q||q<0||J<q)&&(q=J);for(var ie="",pe=K;pe<q;pe++)ie+=me(H[pe]);return ie})(G,F,$);break;case"utf8":case"utf-8":P=(function(H,K,q){var J="",ie="";q=Math.min(H.length,q);for(var pe=K;pe<q;pe++)H[pe]<=127?(J+=ze(ie)+String.fromCharCode(H[pe]),ie=""):ie+="%"+H[pe].toString(16);return J+ze(ie)})(G,F,$);break;case"ascii":case"binary":P=y(G,F,$);break;case"base64":T=G,B=$,P=(O=F)===0&&B===T.length?p.fromByteArray(T):p.fromByteArray(T.slice(O,B));break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":P=(function(H,K,q){for(var J=H.slice(K,q),ie="",pe=0;pe<J.length;pe+=2)ie+=String.fromCharCode(J[pe]+256*J[pe+1]);return ie})(G,F,$);break;default:throw new Error("Unknown encoding")}return P},m.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},m.prototype.copy=function(I,F,$,P){if(F=F||0,(P=P||P===0?P:this.length)!==($=$||0)&&I.length!==0&&this.length!==0){ue($<=P,"sourceEnd < sourceStart"),ue(0<=F&&F<I.length,"targetStart out of bounds"),ue(0<=$&&$<this.length,"sourceStart out of bounds"),ue(0<=P&&P<=this.length,"sourceEnd out of bounds"),P>this.length&&(P=this.length);var T=(P=I.length-F<P-$?I.length-F+$:P)-$;if(T<100||!m._useTypedArrays)for(var O=0;O<T;O++)I[O+F]=this[O+$];else I._set(this.subarray($,$+T),F)}},m.prototype.slice=function(I,F){var $=this.length;if(I=Q(I,$,0),F=Q(F,$,$),m._useTypedArrays)return m._augment(this.subarray(I,F));for(var P=F-I,T=new m(P,void 0,!0),O=0;O<P;O++)T[O]=this[O+I];return T},m.prototype.get=function(I){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(I)},m.prototype.set=function(I,F){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(I,F)},m.prototype.readUInt8=function(I,F){if(F||(ue(I!=null,"missing offset"),ue(I<this.length,"Trying to read beyond buffer length")),!(I>=this.length))return this[I]},m.prototype.readUInt16LE=function(I,F){return b(this,I,!0,F)},m.prototype.readUInt16BE=function(I,F){return b(this,I,!1,F)},m.prototype.readUInt32LE=function(I,F){return C(this,I,!0,F)},m.prototype.readUInt32BE=function(I,F){return C(this,I,!1,F)},m.prototype.readInt8=function(I,F){if(F||(ue(I!=null,"missing offset"),ue(I<this.length,"Trying to read beyond buffer length")),!(I>=this.length))return 128&this[I]?-1*(255-this[I]+1):this[I]},m.prototype.readInt16LE=function(I,F){return w(this,I,!0,F)},m.prototype.readInt16BE=function(I,F){return w(this,I,!1,F)},m.prototype.readInt32LE=function(I,F){return E(this,I,!0,F)},m.prototype.readInt32BE=function(I,F){return E(this,I,!1,F)},m.prototype.readFloatLE=function(I,F){return S(this,I,!0,F)},m.prototype.readFloatBE=function(I,F){return S(this,I,!1,F)},m.prototype.readDoubleLE=function(I,F){return _(this,I,!0,F)},m.prototype.readDoubleBE=function(I,F){return _(this,I,!1,F)},m.prototype.writeUInt8=function(I,F,$){$||(ue(I!=null,"missing value"),ue(F!=null,"missing offset"),ue(F<this.length,"trying to write beyond buffer length"),ae(I,255)),F>=this.length||(this[F]=I)},m.prototype.writeUInt16LE=function(I,F,$){x(this,I,F,!0,$)},m.prototype.writeUInt16BE=function(I,F,$){x(this,I,F,!1,$)},m.prototype.writeUInt32LE=function(I,F,$){A(this,I,F,!0,$)},m.prototype.writeUInt32BE=function(I,F,$){A(this,I,F,!1,$)},m.prototype.writeInt8=function(I,F,$){$||(ue(I!=null,"missing value"),ue(F!=null,"missing offset"),ue(F<this.length,"Trying to write beyond buffer length"),ye(I,127,-128)),F>=this.length||(0<=I?this.writeUInt8(I,F,$):this.writeUInt8(255+I+1,F,$))},m.prototype.writeInt16LE=function(I,F,$){D(this,I,F,!0,$)},m.prototype.writeInt16BE=function(I,F,$){D(this,I,F,!1,$)},m.prototype.writeInt32LE=function(I,F,$){k(this,I,F,!0,$)},m.prototype.writeInt32BE=function(I,F,$){k(this,I,F,!1,$)},m.prototype.writeFloatLE=function(I,F,$){W(this,I,F,!0,$)},m.prototype.writeFloatBE=function(I,F,$){W(this,I,F,!1,$)},m.prototype.writeDoubleLE=function(I,F,$){Y(this,I,F,!0,$)},m.prototype.writeDoubleBE=function(I,F,$){Y(this,I,F,!1,$)},m.prototype.fill=function(I,F,$){if(F=F||0,$=$||this.length,ue(typeof(I=typeof(I=I||0)=="string"?I.charCodeAt(0):I)=="number"&&!isNaN(I),"value is not a number"),ue(F<=$,"end < start"),$!==F&&this.length!==0){ue(0<=F&&F<this.length,"start out of bounds"),ue(0<=$&&$<=this.length,"end out of bounds");for(var P=F;P<$;P++)this[P]=I}},m.prototype.inspect=function(){for(var I=[],F=this.length,$=0;$<F;$++)if(I[$]=me(this[$]),$===r.INSPECT_MAX_BYTES){I[$+1]="...";break}return"<Buffer "+I.join(" ")+">"},m.prototype.toArrayBuffer=function(){if(typeof Uint8Array>"u")throw new Error("Buffer.toArrayBuffer not supported in this browser");if(m._useTypedArrays)return new m(this).buffer;for(var I=new Uint8Array(this.length),F=0,$=I.length;F<$;F+=1)I[F]=this[F];return I.buffer};var z=m.prototype;function Q(I,F,$){return typeof I!="number"?$:F<=(I=~~I)?F:0<=I||0<=(I+=F)?I:0}function Z(I){return(I=~~Math.ceil(+I))<0?0:I}function he(I){return(Array.isArray||function(F){return Object.prototype.toString.call(F)==="[object Array]"})(I)}function me(I){return I<16?"0"+I.toString(16):I.toString(16)}function oe(I){for(var F=[],$=0;$<I.length;$++){var P=I.charCodeAt($);if(P<=127)F.push(I.charCodeAt($));else for(var T=$,O=(55296<=P&&P<=57343&&$++,encodeURIComponent(I.slice(T,$+1)).substr(1).split("%")),B=0;B<O.length;B++)F.push(parseInt(O[B],16))}return F}function Ee(I){return p.toByteArray(I)}function Ve(I,F,$,P){for(var T=0;T<P&&!(T+$>=F.length||T>=I.length);T++)F[T+$]=I[T];return T}function ze(I){try{return decodeURIComponent(I)}catch{return"�"}}function ae(I,F){ue(typeof I=="number","cannot write a non-number as a number"),ue(0<=I,"specified a negative value for writing an unsigned value"),ue(I<=F,"value is larger than maximum value for type"),ue(Math.floor(I)===I,"value has a fractional component")}function ye(I,F,$){ue(typeof I=="number","cannot write a non-number as a number"),ue(I<=F,"value larger than maximum allowed value"),ue($<=I,"value smaller than minimum allowed value"),ue(Math.floor(I)===I,"value has a fractional component")}function _e(I,F,$){ue(typeof I=="number","cannot write a non-number as a number"),ue(I<=F,"value larger than maximum allowed value"),ue($<=I,"value smaller than minimum allowed value")}function ue(I,F){if(!I)throw new Error(F||"Failed assertion")}m._augment=function(I){return I._isBuffer=!0,I._get=I.get,I._set=I.set,I.get=z.get,I.set=z.set,I.write=z.write,I.toString=z.toString,I.toLocaleString=z.toString,I.toJSON=z.toJSON,I.copy=z.copy,I.slice=z.slice,I.readUInt8=z.readUInt8,I.readUInt16LE=z.readUInt16LE,I.readUInt16BE=z.readUInt16BE,I.readUInt32LE=z.readUInt32LE,I.readUInt32BE=z.readUInt32BE,I.readInt8=z.readInt8,I.readInt16LE=z.readInt16LE,I.readInt16BE=z.readInt16BE,I.readInt32LE=z.readInt32LE,I.readInt32BE=z.readInt32BE,I.readFloatLE=z.readFloatLE,I.readFloatBE=z.readFloatBE,I.readDoubleLE=z.readDoubleLE,I.readDoubleBE=z.readDoubleBE,I.writeUInt8=z.writeUInt8,I.writeUInt16LE=z.writeUInt16LE,I.writeUInt16BE=z.writeUInt16BE,I.writeUInt32LE=z.writeUInt32LE,I.writeUInt32BE=z.writeUInt32BE,I.writeInt8=z.writeInt8,I.writeInt16LE=z.writeInt16LE,I.writeInt16BE=z.writeInt16BE,I.writeInt32LE=z.writeInt32LE,I.writeInt32BE=z.writeInt32BE,I.writeFloatLE=z.writeFloatLE,I.writeFloatBE=z.writeFloatBE,I.writeDoubleLE=z.writeDoubleLE,I.writeDoubleBE=z.writeDoubleBE,I.fill=z.fill,I.inspect=z.inspect,I.toArrayBuffer=z.toArrayBuffer,I}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/buffer/index.js","/node_modules/gulp-browserify/node_modules/buffer")},{"base64-js":2,buffer:3,ieee754:10,lYpoI2:11}],4:[function(t,i,r){(function(s,o,p,l,c,u,h,f,d){var p=t("buffer").Buffer,v=4,m=new p(v);m.fill(0),i.exports={hash:function(g,M,y,b){for(var C=M((function(x,A){x.length%v!=0&&(D=x.length+(v-x.length%v),x=p.concat([x,m],D));for(var D,k=[],W=A?x.readInt32BE:x.readInt32LE,Y=0;Y<x.length;Y+=v)k.push(W.call(x,Y));return k})(g=p.isBuffer(g)?g:new p(g),b),8*g.length),M=b,w=new p(y),E=M?w.writeInt32BE:w.writeInt32LE,S=0;S<C.length;S++)E.call(w,C[S],4*S,!0);return w}}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],5:[function(t,i,r){(function(s,o,p,l,c,u,h,f,d){var p=t("buffer").Buffer,v=t("./sha"),m=t("./sha256"),g=t("./rng"),M={sha1:v,sha256:m,md5:t("./md5")},y=64,b=new p(y);function C(x,A){var D=M[x=x||"sha1"],k=[];return D||w("algorithm:",x,"is not yet supported"),{update:function(W){return p.isBuffer(W)||(W=new p(W)),k.push(W),W.length,this},digest:function(W){var Y=p.concat(k),Y=A?(function(z,Q,Z){p.isBuffer(Q)||(Q=new p(Q)),p.isBuffer(Z)||(Z=new p(Z)),Q.length>y?Q=z(Q):Q.length<y&&(Q=p.concat([Q,b],y));for(var he=new p(y),me=new p(y),oe=0;oe<y;oe++)he[oe]=54^Q[oe],me[oe]=92^Q[oe];return Z=z(p.concat([he,Z])),z(p.concat([me,Z]))})(D,A,Y):D(Y);return k=null,W?Y.toString(W):Y}}}function w(){var x=[].slice.call(arguments).join(" ");throw new Error([x,"we accept pull requests","http://github.com/dominictarr/crypto-browserify"].join(`
`))}b.fill(0),r.createHash=function(x){return C(x)},r.createHmac=C,r.randomBytes=function(x,A){if(!A||!A.call)return new p(g(x));try{A.call(this,void 0,new p(g(x)))}catch(D){A(D)}};var E,S=["createCredentials","createCipher","createCipheriv","createDecipher","createDecipheriv","createSign","createVerify","createDiffieHellman","pbkdf2"],_=function(x){r[x]=function(){w("sorry,",x,"is not implemented yet")}};for(E in S)_(S[E])}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./md5":6,"./rng":7,"./sha":8,"./sha256":9,buffer:3,lYpoI2:11}],6:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){var p=t("./helpers");function v(w,E){w[E>>5]|=128<<E%32,w[14+(E+64>>>9<<4)]=E;for(var S=1732584193,_=-271733879,x=-1732584194,A=271733878,D=0;D<w.length;D+=16){var k=S,W=_,Y=x,z=A,S=g(S,_,x,A,w[D+0],7,-680876936),A=g(A,S,_,x,w[D+1],12,-389564586),x=g(x,A,S,_,w[D+2],17,606105819),_=g(_,x,A,S,w[D+3],22,-1044525330);S=g(S,_,x,A,w[D+4],7,-176418897),A=g(A,S,_,x,w[D+5],12,1200080426),x=g(x,A,S,_,w[D+6],17,-1473231341),_=g(_,x,A,S,w[D+7],22,-45705983),S=g(S,_,x,A,w[D+8],7,1770035416),A=g(A,S,_,x,w[D+9],12,-1958414417),x=g(x,A,S,_,w[D+10],17,-42063),_=g(_,x,A,S,w[D+11],22,-1990404162),S=g(S,_,x,A,w[D+12],7,1804603682),A=g(A,S,_,x,w[D+13],12,-40341101),x=g(x,A,S,_,w[D+14],17,-1502002290),S=M(S,_=g(_,x,A,S,w[D+15],22,1236535329),x,A,w[D+1],5,-165796510),A=M(A,S,_,x,w[D+6],9,-1069501632),x=M(x,A,S,_,w[D+11],14,643717713),_=M(_,x,A,S,w[D+0],20,-373897302),S=M(S,_,x,A,w[D+5],5,-701558691),A=M(A,S,_,x,w[D+10],9,38016083),x=M(x,A,S,_,w[D+15],14,-660478335),_=M(_,x,A,S,w[D+4],20,-405537848),S=M(S,_,x,A,w[D+9],5,568446438),A=M(A,S,_,x,w[D+14],9,-1019803690),x=M(x,A,S,_,w[D+3],14,-187363961),_=M(_,x,A,S,w[D+8],20,1163531501),S=M(S,_,x,A,w[D+13],5,-1444681467),A=M(A,S,_,x,w[D+2],9,-51403784),x=M(x,A,S,_,w[D+7],14,1735328473),S=y(S,_=M(_,x,A,S,w[D+12],20,-1926607734),x,A,w[D+5],4,-378558),A=y(A,S,_,x,w[D+8],11,-2022574463),x=y(x,A,S,_,w[D+11],16,1839030562),_=y(_,x,A,S,w[D+14],23,-35309556),S=y(S,_,x,A,w[D+1],4,-1530992060),A=y(A,S,_,x,w[D+4],11,1272893353),x=y(x,A,S,_,w[D+7],16,-155497632),_=y(_,x,A,S,w[D+10],23,-1094730640),S=y(S,_,x,A,w[D+13],4,681279174),A=y(A,S,_,x,w[D+0],11,-358537222),x=y(x,A,S,_,w[D+3],16,-722521979),_=y(_,x,A,S,w[D+6],23,76029189),S=y(S,_,x,A,w[D+9],4,-640364487),A=y(A,S,_,x,w[D+12],11,-421815835),x=y(x,A,S,_,w[D+15],16,530742520),S=b(S,_=y(_,x,A,S,w[D+2],23,-995338651),x,A,w[D+0],6,-198630844),A=b(A,S,_,x,w[D+7],10,1126891415),x=b(x,A,S,_,w[D+14],15,-1416354905),_=b(_,x,A,S,w[D+5],21,-57434055),S=b(S,_,x,A,w[D+12],6,1700485571),A=b(A,S,_,x,w[D+3],10,-1894986606),x=b(x,A,S,_,w[D+10],15,-1051523),_=b(_,x,A,S,w[D+1],21,-2054922799),S=b(S,_,x,A,w[D+8],6,1873313359),A=b(A,S,_,x,w[D+15],10,-30611744),x=b(x,A,S,_,w[D+6],15,-1560198380),_=b(_,x,A,S,w[D+13],21,1309151649),S=b(S,_,x,A,w[D+4],6,-145523070),A=b(A,S,_,x,w[D+11],10,-1120210379),x=b(x,A,S,_,w[D+2],15,718787259),_=b(_,x,A,S,w[D+9],21,-343485551),S=C(S,k),_=C(_,W),x=C(x,Y),A=C(A,z)}return Array(S,_,x,A)}function m(w,E,S,_,x,A){return C((E=C(C(E,w),C(_,A)))<<x|E>>>32-x,S)}function g(w,E,S,_,x,A,D){return m(E&S|~E&_,w,E,x,A,D)}function M(w,E,S,_,x,A,D){return m(E&_|S&~_,w,E,x,A,D)}function y(w,E,S,_,x,A,D){return m(E^S^_,w,E,x,A,D)}function b(w,E,S,_,x,A,D){return m(S^(E|~_),w,E,x,A,D)}function C(w,E){var S=(65535&w)+(65535&E);return(w>>16)+(E>>16)+(S>>16)<<16|65535&S}i.exports=function(w){return p.hash(w,v,16)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],7:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){i.exports=function(p){for(var v,m=new Array(p),g=0;g<p;g++)!(3&g)&&(v=4294967296*Math.random()),m[g]=v>>>((3&g)<<3)&255;return m}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],8:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){var p=t("./helpers");function v(M,y){M[y>>5]|=128<<24-y%32,M[15+(y+64>>9<<4)]=y;for(var b,C,w,E=Array(80),S=1732584193,_=-271733879,x=-1732584194,A=271733878,D=-1009589776,k=0;k<M.length;k+=16){for(var W=S,Y=_,z=x,Q=A,Z=D,he=0;he<80;he++){E[he]=he<16?M[k+he]:g(E[he-3]^E[he-8]^E[he-14]^E[he-16],1);var me=m(m(g(S,5),(me=_,C=x,w=A,(b=he)<20?me&C|~me&w:!(b<40)&&b<60?me&C|me&w|C&w:me^C^w)),m(m(D,E[he]),(b=he)<20?1518500249:b<40?1859775393:b<60?-1894007588:-899497514)),D=A,A=x,x=g(_,30),_=S,S=me}S=m(S,W),_=m(_,Y),x=m(x,z),A=m(A,Q),D=m(D,Z)}return Array(S,_,x,A,D)}function m(M,y){var b=(65535&M)+(65535&y);return(M>>16)+(y>>16)+(b>>16)<<16|65535&b}function g(M,y){return M<<y|M>>>32-y}i.exports=function(M){return p.hash(M,v,20,!0)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],9:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){function p(y,b){var C=(65535&y)+(65535&b);return(y>>16)+(b>>16)+(C>>16)<<16|65535&C}function v(y,b){var C,w=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),E=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),S=new Array(64);y[b>>5]|=128<<24-b%32,y[15+(b+64>>9<<4)]=b;for(var _,x,A=0;A<y.length;A+=16){for(var D=E[0],k=E[1],W=E[2],Y=E[3],z=E[4],Q=E[5],Z=E[6],he=E[7],me=0;me<64;me++)S[me]=me<16?y[me+A]:p(p(p((x=S[me-2],g(x,17)^g(x,19)^M(x,10)),S[me-7]),(x=S[me-15],g(x,7)^g(x,18)^M(x,3))),S[me-16]),C=p(p(p(p(he,g(x=z,6)^g(x,11)^g(x,25)),z&Q^~z&Z),w[me]),S[me]),_=p(g(_=D,2)^g(_,13)^g(_,22),D&k^D&W^k&W),he=Z,Z=Q,Q=z,z=p(Y,C),Y=W,W=k,k=D,D=p(C,_);E[0]=p(D,E[0]),E[1]=p(k,E[1]),E[2]=p(W,E[2]),E[3]=p(Y,E[3]),E[4]=p(z,E[4]),E[5]=p(Q,E[5]),E[6]=p(Z,E[6]),E[7]=p(he,E[7])}return E}var m=t("./helpers"),g=function(y,b){return y>>>b|y<<32-b},M=function(y,b){return y>>>b};i.exports=function(y){return m.hash(y,v,32,!0)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],10:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){r.read=function(p,v,m,g,A){var y,b,C=8*A-g-1,w=(1<<C)-1,E=w>>1,S=-7,_=m?A-1:0,x=m?-1:1,A=p[v+_];for(_+=x,y=A&(1<<-S)-1,A>>=-S,S+=C;0<S;y=256*y+p[v+_],_+=x,S-=8);for(b=y&(1<<-S)-1,y>>=-S,S+=g;0<S;b=256*b+p[v+_],_+=x,S-=8);if(y===0)y=1-E;else{if(y===w)return b?NaN:1/0*(A?-1:1);b+=Math.pow(2,g),y-=E}return(A?-1:1)*b*Math.pow(2,y-g)},r.write=function(p,v,m,g,M,D){var b,C,w=8*D-M-1,E=(1<<w)-1,S=E>>1,_=M===23?Math.pow(2,-24)-Math.pow(2,-77):0,x=g?0:D-1,A=g?1:-1,D=v<0||v===0&&1/v<0?1:0;for(v=Math.abs(v),isNaN(v)||v===1/0?(C=isNaN(v)?1:0,b=E):(b=Math.floor(Math.log(v)/Math.LN2),v*(g=Math.pow(2,-b))<1&&(b--,g*=2),2<=(v+=1<=b+S?_/g:_*Math.pow(2,1-S))*g&&(b++,g/=2),E<=b+S?(C=0,b=E):1<=b+S?(C=(v*g-1)*Math.pow(2,M),b+=S):(C=v*Math.pow(2,S-1)*Math.pow(2,M),b=0));8<=M;p[m+x]=255&C,x+=A,C/=256,M-=8);for(b=b<<M|C,w+=M;0<w;p[m+x]=255&b,x+=A,b/=256,w-=8);p[m+x-A]|=128*D}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/ieee754/index.js","/node_modules/gulp-browserify/node_modules/ieee754")},{buffer:3,lYpoI2:11}],11:[function(t,i,r){(function(s,o,a,l,c,u,h,f,d){var p,v,m;function g(){}(s=i.exports={}).nextTick=(v=typeof window<"u"&&window.setImmediate,m=typeof window<"u"&&window.postMessage&&window.addEventListener,v?function(M){return window.setImmediate(M)}:m?(p=[],window.addEventListener("message",function(M){var y=M.source;y!==window&&y!==null||M.data!=="process-tick"||(M.stopPropagation(),0<p.length&&p.shift()())},!0),function(M){p.push(M),window.postMessage("process-tick","*")}):function(M){setTimeout(M,0)}),s.title="browser",s.browser=!0,s.env={},s.argv=[],s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.binding=function(M){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(M){throw new Error("process.chdir is not supported")}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/process/browser.js","/node_modules/gulp-browserify/node_modules/process")},{buffer:3,lYpoI2:11}]},{},[1])(1)})})(mv)),mv.exports}oU();var vv,_v;function Ub(){return _v||(_v=1,vv=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","uint","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"]),vv}var xv,yv;function aU(){return yv||(yv=1,xv=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"]),xv}var bv,Mv;function Nb(){return Mv||(Mv=1,bv=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"]),bv}var fd,Sv;function lU(){if(Sv)return fd;Sv=1;var n=Ub();return fd=n.slice().concat(["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray"]),fd}var dd,wv;function cU(){if(wv)return dd;wv=1;var n=Nb();return n=n.slice().filter(function(e){return!/^(gl\_|texture)/.test(e)}),dd=n.concat(["gl_VertexID","gl_InstanceID","gl_Position","gl_PointSize","gl_FragCoord","gl_FrontFacing","gl_FragDepth","gl_PointCoord","gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexOutputVectors","gl_MaxFragmentInputVectors","gl_MaxVertexTextureImageUnits","gl_MaxCombinedTextureImageUnits","gl_MaxTextureImageUnits","gl_MaxFragmentUniformVectors","gl_MaxDrawBuffers","gl_MinProgramTexelOffset","gl_MaxProgramTexelOffset","gl_DepthRangeParameters","gl_DepthRange","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"]),dd}var pd,Tv;function uU(){if(Tv)return pd;Tv=1,pd=b;var n=Ub(),e=aU(),t=Nb(),i=lU(),r=cU(),s=999,o=9999,a=0,l=1,c=2,u=3,h=4,f=5,d=6,p=7,v=8,m=9,g=10,M=11,y=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function b(C){var w=0,E=0,S=s,_,x,A=[],D=[],k=1,W=0,Y=0,z=!1,Q=!1,Z="",he;C=C||{};var me=t,oe=n;C.version==="300 es"&&(me=r,oe=i);for(var Ee={},Ve={},w=0;w<me.length;w++)Ee[me[w]]=!0;for(var w=0;w<oe.length;w++)Ve[oe[w]]=!0;return function(K){return D=[],K!==null?ae(K):ye()};function ze(K){K.length&&D.push({type:y[S],data:K,position:Y,line:k,column:W})}function ae(K){w=0,K.toString&&(K=K.toString()),Z+=K.replace(/\r\n/g,`
`),he=Z.length;for(var q;_=Z[w],w<he;){switch(q=w,S){case a:w=$();break;case l:w=F();break;case c:w=I();break;case u:w=P();break;case h:w=B();break;case M:w=O();break;case f:w=G();break;case o:w=H();break;case m:w=ue();break;case s:w=_e();break}if(q!==w)switch(Z[q]){case`
`:W=0,++k;break;default:++W;break}}return E+=w,Z=Z.slice(w),D}function ye(K){return A.length&&ze(A.join("")),S=g,ze("(eof)"),D}function _e(){return A=A.length?[]:A,x==="/"&&_==="*"?(Y=E+w-1,S=a,x=_,w+1):x==="/"&&_==="/"?(Y=E+w-1,S=l,x=_,w+1):_==="#"?(S=c,Y=E+w,w):/\s/.test(_)?(S=m,Y=E+w,w):(z=/\d/.test(_),Q=/[^\w_]/.test(_),Y=E+w,S=z?h:Q?u:o,w)}function ue(){return/[^\s]/g.test(_)?(ze(A.join("")),S=s,w):(A.push(_),x=_,w+1)}function I(){return(_==="\r"||_===`
`)&&x!=="\\"?(ze(A.join("")),S=s,w):(A.push(_),x=_,w+1)}function F(){return I()}function $(){return _==="/"&&x==="*"?(A.push(_),ze(A.join("")),S=s,w+1):(A.push(_),x=_,w+1)}function P(){if(x==="."&&/\d/.test(_))return S=f,w;if(x==="/"&&_==="*")return S=a,w;if(x==="/"&&_==="/")return S=l,w;if(_==="."&&A.length){for(;T(A););return S=f,w}if(_===";"||_===")"||_==="("){if(A.length)for(;T(A););return ze(_),S=s,w+1}var K=A.length===2&&_!=="=";if(/[\w_\d\s]/.test(_)||K){for(;T(A););return S=s,w}return A.push(_),x=_,w+1}function T(K){var q=0,J,ie;do{if(J=e.indexOf(K.slice(0,K.length+q).join("")),ie=e[J],J===-1){if(q--+K.length>0)continue;ie=K.slice(0,1).join("")}return ze(ie),Y+=ie.length,A=A.slice(ie.length),A.length}while(!0)}function O(){return/[^a-fA-F0-9]/.test(_)?(ze(A.join("")),S=s,w):(A.push(_),x=_,w+1)}function B(){return _==="."||/[eE]/.test(_)?(A.push(_),S=f,x=_,w+1):_==="x"&&A.length===1&&A[0]==="0"?(S=M,A.push(_),x=_,w+1):/[^\d]/.test(_)?(ze(A.join("")),S=s,w):(A.push(_),x=_,w+1)}function G(){return _==="f"&&(A.push(_),x=_,w+=1),/[eE]/.test(_)||(_==="-"||_==="+")&&/[eE]/.test(x)?(A.push(_),x=_,w+1):/[^\d]/.test(_)?(ze(A.join("")),S=s,w):(A.push(_),x=_,w+1)}function H(){if(/[^\d\w_]/.test(_)){var K=A.join("");return Ve[K]?S=v:Ee[K]?S=p:S=d,ze(A.join("")),S=s,w}return A.push(_),x=_,w+1}}return pd}var md,Ev;function hU(){if(Ev)return md;Ev=1;var n=uU();md=e;function e(t,i){var r=n(i),s=[];return s=s.concat(r(t)),s=s.concat(r(null)),s}return md}hU();function fU(n,e){if(typeof n!="object"||n===null)return n;var t=n[Symbol.toPrimitive];if(t!==void 0){var i=t.call(n,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}function dU(n){var e=fU(n,"string");return typeof e=="symbol"?e:String(e)}function At(n,e,t){return e=dU(e),e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var Qe={position:"csm_Position",positionRaw:"csm_PositionRaw",pointSize:"csm_PointSize",fragColor:"csm_FragColor",diffuseColor:"csm_DiffuseColor",normal:"csm_Normal",roughness:"csm_Roughness",metalness:"csm_Metalness",emissive:"csm_Emissive",ao:"csm_AO",bump:"csm_Bump",depthAlpha:"csm_DepthAlpha"},Bn,po;Bn={},At(Bn,"".concat(Qe.normal),{"#include <beginnormal_vertex>":`
    vec3 objectNormal = `.concat(Qe.normal,`;
    #ifdef USE_TANGENT
	    vec3 objectTangent = vec3( tangent.xyz );
    #endif
    `)}),At(Bn,"".concat(Qe.position),{"#include <begin_vertex>":`
    vec3 transformed = `.concat(Qe.position,`;
  `)}),At(Bn,"".concat(Qe.positionRaw),{"#include <begin_vertex>":`
    vec4 csm_internal_positionUnprojected = `.concat(Qe.positionRaw,`;
    mat4x4 csm_internal_unprojectMatrix = projectionMatrix * modelViewMatrix;
    #ifdef USE_INSTANCING
      csm_internal_unprojectMatrix = csm_internal_unprojectMatrix * instanceMatrix;
    #endif
    csm_internal_positionUnprojected = inverse(csm_internal_unprojectMatrix) * csm_internal_positionUnprojected;
    vec3 transformed = csm_internal_positionUnprojected.xyz;
  `)}),At(Bn,"".concat(Qe.pointSize),{"gl_PointSize = size;":`
    gl_PointSize = `.concat(Qe.pointSize,`;
    `)}),At(Bn,"".concat(Qe.diffuseColor),{"#include <color_fragment>":`
    #include <color_fragment>
    diffuseColor = `.concat(Qe.diffuseColor,`;
  `)}),At(Bn,"".concat(Qe.fragColor),{"#include <dithering_fragment>":`
    #include <dithering_fragment>
    gl_FragColor  = `.concat(Qe.fragColor,`;
  `)}),At(Bn,"".concat(Qe.emissive),{"vec3 totalEmissiveRadiance = emissive;":`
    vec3 totalEmissiveRadiance = `.concat(Qe.emissive,`;
    `)}),At(Bn,"".concat(Qe.roughness),{"#include <roughnessmap_fragment>":`
    #include <roughnessmap_fragment>
    roughnessFactor = `.concat(Qe.roughness,`;
    `)}),At(Bn,"".concat(Qe.metalness),{"#include <metalnessmap_fragment>":`
    #include <metalnessmap_fragment>
    metalnessFactor = `.concat(Qe.metalness,`;
    `)}),At(Bn,"".concat(Qe.ao),{"#include <aomap_fragment>":`
    #include <aomap_fragment>
    reflectedLight.indirectDiffuse *= 1. - `.concat(Qe.ao,`;
    `)}),At(Bn,"".concat(Qe.bump),{"#include <normal_fragment_maps>":`
    #include <normal_fragment_maps>

    vec3 csm_internal_orthogonal = `.concat(Qe.bump," - (dot(").concat(Qe.bump,`, normal) * normal);
    vec3 csm_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_internal_orthogonal;
    normal = normalize(normal - csm_internal_projectedbump);
    `)}),At(Bn,"".concat(Qe.depthAlpha),{"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );":`
      gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity * `.concat(Qe.depthAlpha,` );
    `),"gl_FragColor = packDepthToRGBA( fragCoordZ );":`
      gl_FragColor = packDepthToRGBA( fragCoordZ );
      gl_FragColor.a *= `.concat(Qe.depthAlpha,`;
    `)});po={},At(po,"".concat(Qe.position),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":`
    gl_Position = projectionMatrix * modelViewMatrix * vec4( `.concat(Qe.position,`, 1.0 );
  `)}),At(po,"".concat(Qe.positionRaw),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":`
    gl_Position = `.concat(Qe.position,`;
  `)}),At(po,"".concat(Qe.diffuseColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":`
    gl_FragColor = `.concat(Qe.diffuseColor,`;
  `)}),At(po,"".concat(Qe.fragColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":`
    gl_FragColor = `.concat(Qe.fragColor,`;
  `)});var zn;zn={},At(zn,"".concat(Qe.position),"*"),At(zn,"".concat(Qe.positionRaw),"*"),At(zn,"".concat(Qe.normal),"*"),At(zn,"".concat(Qe.pointSize),["PointsMaterial"]),At(zn,"".concat(Qe.diffuseColor),"*"),At(zn,"".concat(Qe.fragColor),"*"),At(zn,"".concat(Qe.emissive),["MeshStandardMaterial","MeshPhysicalMaterial"]),At(zn,"".concat(Qe.roughness),["MeshStandardMaterial","MeshPhysicalMaterial"]),At(zn,"".concat(Qe.metalness),["MeshStandardMaterial","MeshPhysicalMaterial"]),At(zn,"".concat(Qe.ao),["MeshStandardMaterial","MeshPhysicalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial"]),At(zn,"".concat(Qe.bump),["MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshToonMaterial","ShadowMaterial"]),At(zn,"".concat(Qe.depthAlpha),"*");var pU=`void main() {
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}`,mU=`#include <common>

void main() {
  vec2 center = vec2(0., 1.);
  float rotation = 0.0;

  
  
  float size = 0.03;

  vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
  vec2 scale;
  scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
  scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

  bool isPerspective = isPerspectiveMatrix( projectionMatrix );
  if ( isPerspective ) scale *= - mvPosition.z;

  vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
  vec2 rotatedPosition;
  rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
  rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
  mvPosition.xy += rotatedPosition;

  gl_Position = projectionMatrix * mvPosition;
}`;const Pl=new U(0,0,0),ym=new U(0,0,0),gU=new U(0,0,0);function Av(n,e,t){const i=Pl.setFromMatrixPosition(n.matrixWorld);i.project(e);const r=t.width/2,s=t.height/2;return[(Number.isNaN(i.x)?0:i.x)*r+r,-(i.y*s)+s,i.z]}function vU(n,e){const t=Pl.setFromMatrixPosition(n.matrixWorld),i=ym.setFromMatrixPosition(e.matrixWorld),r=t.sub(i),s=e.getWorldDirection(gU);return r.angleTo(s)>Math.PI/2}function _U(n,e,t,i){const r=Pl.setFromMatrixPosition(n.matrixWorld),s=r.clone();s.project(e),t.setFromCamera(new de(s.x,s.y),e);const o=t.intersectObjects(i,!0);if(o.length>0){const a=o[0].distance;return r.distanceTo(t.ray.origin)<a}return!0}function xU(n,e){if(e instanceof cr)return e.zoom;if(e instanceof Rt){const t=Pl.setFromMatrixPosition(n.matrixWorld),i=ym.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=t.distanceTo(i);return 1/(2*Math.tan(r/2)*s)}else return 1}function yU(n,e,t){if(e instanceof Rt||e instanceof cr){const i=Pl.setFromMatrixPosition(n.matrixWorld),r=ym.setFromMatrixPosition(e.matrixWorld),s=i.distanceTo(r),o=(t[1]-t[0])/(e.far-e.near),a=t[1]-o*e.far;return Math.round(o*s+a)}}const tp=n=>Math.abs(n)<1e-10?0:n;function Ob(n,e,t=""){let i="matrix3d(";for(let r=0;r!==16;r++)i+=tp(e[r]*n.elements[r])+(r!==15?",":")");return t+i}const bU=(n=>e=>Ob(e,n))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),MU=(n=>(e,t)=>Ob(e,n(t),"translate(-50%,-50%)"))(n=>[1/n,1/n,1/n,1,-1/n,-1/n,-1/n,-1,1/n,1/n,1/n,1,1,1,1,1]),SU=["geometry","material"];new Wr;var np={exports:{}},wU=np.exports,Cv;function TU(){return Cv||(Cv=1,(function(n,e){(function(t,i){n.exports=i()})(wU,function(){var t=function(){function i(d){return o.appendChild(d.dom),d}function r(d){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===d?"block":"none";s=d}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(d){d.preventDefault(),r(++s%o.children.length)},!1);var a=(performance||Date).now(),l=a,c=0,u=i(new t.Panel("FPS","#0ff","#002")),h=i(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=i(new t.Panel("MB","#f08","#201"));return r(0),{REVISION:16,dom:o,addPanel:i,showPanel:r,begin:function(){a=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(h.update(d-a,200),d>l+1e3&&(u.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){a=this.end()},domElement:o,setMode:r}};return t.Panel=function(i,r,s){var o=1/0,a=0,l=Math.round,c=l(window.devicePixelRatio||1),u=80*c,h=48*c,f=3*c,d=2*c,p=3*c,v=15*c,m=74*c,g=30*c,M=document.createElement("canvas");M.width=u,M.height=h,M.style.cssText="width:80px;height:48px";var y=M.getContext("2d");return y.font="bold "+9*c+"px Helvetica,Arial,sans-serif",y.textBaseline="top",y.fillStyle=s,y.fillRect(0,0,u,h),y.fillStyle=r,y.fillText(i,f,d),y.fillRect(p,v,m,g),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p,v,m,g),{dom:M,update:function(b,C){o=Math.min(o,b),a=Math.max(a,b),y.fillStyle=s,y.globalAlpha=1,y.fillRect(0,0,u,v),y.fillStyle=r,y.fillText(l(b)+" "+i+" ("+l(o)+"-"+l(a)+")",f,d),y.drawImage(M,p+c,v,m-c,g,p,v,m-c,g),y.fillRect(p+m-c,v,c,g),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p+m-c,v,c,l((1-b/C)*g))}}},t})})(np)),np.exports}TU();const EU=["object"],AU=en({__name:"Line2",props:{points:{},vertexColors:{default:null},color:{default:"white"},lineWidth:{default:1},worldUnits:{type:Boolean,default:!1},alphaToCoverage:{type:Boolean,default:!1},dashed:{type:Boolean,default:!1},dashSize:{default:1},gapSize:{default:1},dashScale:{default:1},dashOffset:{default:0}},setup(n,{expose:e}){const t=n;function i(d,p){if(!d||d.length===0)return Array.from({length:p}).fill(vo(t.color));if(d.length===1)return Array.from({length:p}).fill(vo(d[0]));if(d.length===p)return d.map(vo);const v=p-1,m=d.map(vo);closed&&m.push(m[0].clone());const g=[m[0]],M=v/(m.length-1);for(let y=1;y<v;y++){const b=y%M/M,C=Math.floor(y/M);g.push(m[C].clone().lerp(m[C+1],b))}return g.push(m[m.length-1]),g}const r=new xm,s=new Db,o=new nU(s,r),{sizes:a,invalidate:l}=Hs(),c=it(()=>Array.isArray(t.vertexColors));function u(d,p){d.color=vo(p.color),d.linewidth=p.lineWidth,d.alphaToCoverage=p.alphaToCoverage,d.worldUnits=p.worldUnits,d.vertexColors=Array.isArray(p.vertexColors),d.dashed=p.dashed,d.dashScale=p.dashScale,d.dashSize=p.dashSize,d.dashOffset=p.dashOffset,d.gapSize=p.gapSize,d.needsUpdate=!0}function h(d,p,v){const m=p.map(M=>M instanceof U?[M.x,M.y,M.z]:M instanceof de?[M.x,M.y,0]:Array.isArray(M)&&M.length===2?[M[0],M[1],0]:M).flat();d.setPositions(m.flat());const g=i(v,p.length).map(M=>M.toArray()).flat();d.setColors(g),o.computeLineDistances()}u(r,t),h(s,t.points,t.vertexColors),o.computeLineDistances(),Lt(()=>[t.color,t.lineWidth,t.alphaToCoverage,t.worldUnits,c,t.dashed,t.dashScale,t.dashSize,t.dashOffset],()=>{u(r,t),l()}),Lt(()=>[t.points,t.vertexColors],()=>{h(s,t.points,t.vertexColors),l()}),Lt(()=>[a.height,a.width],()=>{r.resolution=new de(a.width.value,a.height.value),l()}),Si(()=>{s.dispose(),r.dispose()});const f=lt();return e({instance:f}),(d,p)=>(nt(),St("primitive",{ref:f.value,object:Ge(o)},null,8,EU))}}),CU=["args"],RU=["color"],IU=en({__name:"Sphere",props:{args:{default:()=>[2,32,16]},color:{default:"#ffffff"}},setup(n,{expose:e}){const t=n,{args:i,color:r}=kr(t),{invalidate:s}=Hs();Lt(i,()=>s());const o=lt();return e({instance:o}),(a,l)=>(nt(),St("TresMesh",N_({ref_key:"sphereRef",ref:o},a.$attrs),[Zt("TresSphereGeometry",{args:Ge(i)},null,8,CU),u_(a.$slots,"default",{},()=>[Zt("TresMeshBasicMaterial",{color:Ge(r)},null,8,RU)])],16))}}),PU=["side","cell-size","section-size","cell-color","section-color","cell-thickness","section-thickness","fade-distance","fade-strength","fade-from","infinite-grid","follow-camera"],LU=["args"],DU=en({__name:"Grid",props:{cellSize:{default:.5},cellThickness:{default:.5},cellColor:{default:"#000000"},sectionSize:{default:1},sectionThickness:{default:1},sectionColor:{default:"#0000ff"},followCamera:{type:Boolean,default:!1},infiniteGrid:{type:Boolean,default:!1},fadeDistance:{default:100},fadeStrength:{default:1},fadeFrom:{default:1},side:{default:on},args:{}},setup(n){const e=n,t=vm({cellSize:.5,sectionSize:1,fadeDistance:100,fadeStrength:1,fadeFrom:1,cellThickness:.5,sectionThickness:1,cellColor:new Ae,sectionColor:new Ae,infiniteGrid:!1,followCamera:!1,worldCamProjPosition:new U,worldPlanePosition:new U},`
    varying vec3 localPosition;
    varying vec4 worldPosition;

    uniform vec3 worldCamProjPosition;
    uniform vec3 worldPlanePosition;
    uniform float fadeDistance;
    uniform bool infiniteGrid;
    uniform bool followCamera;

    void main() {
      localPosition = position.xzy;
      if (infiniteGrid) localPosition *= 1.0 + fadeDistance;
      
      worldPosition = modelMatrix * vec4(localPosition, 1.0);
      if (followCamera) {
        worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);
        localPosition = (inverse(modelMatrix) * worldPosition).xyz;
      }

      gl_Position = projectionMatrix * viewMatrix * worldPosition;
    }
  `,`
    varying vec3 localPosition;
    varying vec4 worldPosition;

    uniform vec3 worldCamProjPosition;
    uniform float cellSize;
    uniform float sectionSize;
    uniform vec3 cellColor;
    uniform vec3 sectionColor;
    uniform float fadeDistance;
    uniform float fadeStrength;
    uniform float fadeFrom;
    uniform float cellThickness;
    uniform float sectionThickness;

    float getGrid(float size, float thickness) {
      vec2 r = localPosition.xz / size;
      vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);
      float line = min(grid.x, grid.y) + 1.0 - thickness;
      return 1.0 - min(line, 1.0);
    }

    void main() {
      float g1 = getGrid(cellSize, cellThickness);
      float g2 = getGrid(sectionSize, sectionThickness);

      vec3 from = worldCamProjPosition*vec3(fadeFrom);
      float dist = distance(from, worldPosition.xyz);
      float d = 1.0 - min(dist / fadeDistance, 1.0);
      vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));

      gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));
      gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);
      if (gl_FragColor.a <= 0.0) discard;

      #include <tonemapping_fragment>
      #include <colorspace_fragment>
    }
  `);ju({GridMaterial:t});const i=lt(new bt),r=new mi,s=new U(0,1,0),o=new U(0,0,0);return gm().onBeforeRender(a=>{r.setFromNormalAndCoplanarPoint(s,o).applyMatrix4(i.value.matrixWorld);const l=i.value.material,c=l.uniforms.worldCamProjPosition,u=l.uniforms.worldPlanePosition;r.projectPoint(a.camera.position,c.value),u.value.set(0,0,0).applyMatrix4(i.value.matrixWorld)}),(a,l)=>(nt(),St("TresMesh",{ref_key:"ref",ref:i,"frustum-culled":!1},[Zt("TresGridMaterial",{transparent:!0,"extensions-derivatives":!0,side:e.side,"cell-size":e.cellSize,"section-size":e.sectionSize,"cell-color":e.cellColor,"section-color":e.sectionColor,"cell-thickness":e.cellThickness,"section-thickness":e.sectionThickness,"fade-distance":e.fadeDistance,"fade-strength":e.fadeStrength,"fade-from":e.fadeFrom,"infinite-grid":e.infiniteGrid,"follow-camera":e.followCamera},null,8,PU),Zt("TresPlaneGeometry",{args:e.args},null,8,LU)],512))}}),UU={key:0,args:[0,1,64]},NU={key:1,args:[.5,1,64]},OU={key:2},FU=["tone-mapped","map","side","color"];new Ae(16777215);const BU=["object"],zU=en({__name:"ViewerTriangle",props:{points:{},color:{}},setup(n){const e=n,t=it(()=>{const r=new et,s=new Float32Array(e.points.flat());return r.setAttribute("position",new mt(s,3)),r}),i=it(()=>{const r=new ci({color:He(e.color).darken(10).toHexString(),side:Gi}),s=new ci({color:e.color,side:on}),o=new bt(t.value,r),a=new bt(t.value,s),l=new _s;return l.add(o),l.add(a),l});return(r,s)=>(nt(),St("primitive",{object:i.value},null,8,BU))}}),kU=en({__name:"KnotViewerKnot",props:{knotId:{},points:{},allSurfaceLoops:{},surfaceColor:{},showSurfaces:{type:Boolean}},setup(n){const e=n,t=it(()=>e.points.map(a=>s(a))),i=it(()=>e.showSurfaces?16777215:e.surfaceColor||"0x123456"),r=it(()=>e.showSurfaces?14540253:He(e.surfaceColor).lighten(20).toString());function s(a){let l=pa(e.allSurfaceLoops,a);return l===-1&&console.warn("could not find surface for point",a),[a.x/300,.25*l,a.y/300]}const o=it(()=>{if(!e.showSurfaces)return[];const a=e.allSurfaceLoops.filter(f=>f[0]&&f[0].knotId===e.knotId),l=a.map(f=>j1(f,s)).flat(),c=$1(e.points,s,a),h=e.points.filter(f=>f.intersection&&!f.intersection.isWithinKnot).map(f=>{const d=e.points.findIndex(y=>y.id===f.id),p=pa(a,f),v=e.points[d-1],m=e.points[d+1],g=pa(a,v),M=pa(a,m);if(p!==g||p!==M)return[s(e.points[d-1]),s(f),s(e.points[d+1])]}).filter(f=>!!f);return[...l,...c,...h]});return(a,l)=>(nt(),St(Xt,null,[(nt(),ei(Ge(AU),{points:t.value,key:t.value.flat().join("_"),lineWidth:4,color:i.value},null,8,["points","color"])),(nt(!0),St(Xt,null,Rs(t.value,c=>(nt(),ei(Ge(IU),{args:[.02,.02,.02],position:c,color:r.value},null,8,["position","color"]))),256)),(nt(!0),St(Xt,null,Rs(o.value,c=>(nt(),ei(zU,{points:c,key:c.flat().join("_"),color:a.surfaceColor},null,8,["points","color"]))),128))],64))}});/*!
 * pinia v3.0.3
 * (c) 2025 Eduardo San Martin Morote
 * @license MIT
 */let Fb;const jh=n=>Fb=n,Bb=Symbol();function ip(n){return n&&typeof n=="object"&&Object.prototype.toString.call(n)==="[object Object]"&&typeof n.toJSON!="function"}var ka;(function(n){n.direct="direct",n.patchObject="patch object",n.patchFunction="patch function"})(ka||(ka={}));function VU(){const n=Bv(!0),e=n.run(()=>Tt({}));let t=[],i=[];const r=gp({install(s){jh(r),r._a=s,s.provide(Bb,r),s.config.globalProperties.$pinia=r,i.forEach(o=>t.push(o)),i=[]},use(s){return this._a?t.push(s):i.push(s),this},_p:t,_a:null,_e:n,_s:new Map,state:e});return r}const zb=()=>{};function Rv(n,e,t,i=zb){n.push(e);const r=()=>{const s=n.indexOf(e);s>-1&&(n.splice(s,1),i())};return!t&&dl()&&Qu(r),r}function mo(n,...e){n.slice().forEach(t=>{t(...e)})}const HU=n=>n(),Iv=Symbol(),gd=Symbol();function rp(n,e){n instanceof Map&&e instanceof Map?e.forEach((t,i)=>n.set(i,t)):n instanceof Set&&e instanceof Set&&e.forEach(n.add,n);for(const t in e){if(!e.hasOwnProperty(t))continue;const i=e[t],r=n[t];ip(r)&&ip(i)&&n.hasOwnProperty(t)&&!It(i)&&!Ur(i)?n[t]=rp(r,i):n[t]=i}return n}const GU=Symbol();function WU(n){return!ip(n)||!Object.prototype.hasOwnProperty.call(n,GU)}const{assign:Cr}=Object;function XU(n){return!!(It(n)&&n.effect)}function YU(n,e,t,i){const{state:r,actions:s,getters:o}=e,a=t.state.value[n];let l;function c(){a||(t.state.value[n]=r?r():{});const u=kr(t.state.value[n]);return Cr(u,s,Object.keys(o||{}).reduce((h,f)=>(h[f]=gp(it(()=>{jh(t);const d=t._s.get(n);return o[f].call(d,d)})),h),{}))}return l=kb(n,c,e,t,i,!0),l}function kb(n,e,t={},i,r,s){let o;const a=Cr({actions:{}},t),l={deep:!0};let c,u,h=[],f=[],d;const p=i.state.value[n];!s&&!p&&(i.state.value[n]={}),Tt({});let v;function m(S){let _;c=u=!1,typeof S=="function"?(S(i.state.value[n]),_={type:ka.patchFunction,storeId:n,events:d}):(rp(i.state.value[n],S),_={type:ka.patchObject,payload:S,storeId:n,events:d});const x=v=Symbol();_p().then(()=>{v===x&&(c=!0)}),u=!0,mo(h,_,i.state.value[n])}const g=s?function(){const{state:_}=t,x=_?_():{};this.$patch(A=>{Cr(A,x)})}:zb;function M(){o.stop(),h=[],f=[],i._s.delete(n)}const y=(S,_="")=>{if(Iv in S)return S[gd]=_,S;const x=function(){jh(i);const A=Array.from(arguments),D=[],k=[];function W(Q){D.push(Q)}function Y(Q){k.push(Q)}mo(f,{args:A,name:x[gd],store:C,after:W,onError:Y});let z;try{z=S.apply(this&&this.$id===n?this:C,A)}catch(Q){throw mo(k,Q),Q}return z instanceof Promise?z.then(Q=>(mo(D,Q),Q)).catch(Q=>(mo(k,Q),Promise.reject(Q))):(mo(D,z),z)};return x[Iv]=!0,x[gd]=_,x},b={_p:i,$id:n,$onAction:Rv.bind(null,f),$patch:m,$reset:g,$subscribe(S,_={}){const x=Rv(h,S,_.detached,()=>A()),A=o.run(()=>Lt(()=>i.state.value[n],D=>{(_.flush==="sync"?u:c)&&S({storeId:n,type:ka.direct,events:d},D)},Cr({},l,_)));return x},$dispose:M},C=pl(b);i._s.set(n,C);const E=(i._a&&i._a.runWithContext||HU)(()=>i._e.run(()=>(o=Bv()).run(()=>e({action:y}))));for(const S in E){const _=E[S];if(It(_)&&!XU(_)||Ur(_))s||(p&&WU(_)&&(It(_)?_.value=p[S]:rp(_,p[S])),i.state.value[n][S]=_);else if(typeof _=="function"){const x=y(_,S);E[S]=x,a.actions[S]=_}}return Cr(C,E),Cr(xt(C),E),Object.defineProperty(C,"$state",{get:()=>i.state.value[n],set:S=>{m(_=>{Cr(_,S)})}}),i._p.forEach(S=>{Cr(C,o.run(()=>S({store:C,app:i._a,pinia:i,options:a})))}),p&&s&&t.hydrate&&t.hydrate(C.$state,p),c=!0,u=!0,C}/*! #__NO_SIDE_EFFECTS__ */function jU(n,e,t){let i;const r=typeof e=="function";i=r?t:e;function s(o,a){const l=bp();return o=o||(l?Ms(Bb,null):null),o&&jh(o),o=Fb,o._s.has(n)||(r?kb(n,e,i,o):YU(n,i,o)),o._s.get(n)}return s.$id=n,s}const Vb=jU("showSurfaces",{state:()=>({showSurfaces:!0}),actions:{toggleShowSurfaces(){this.showSurfaces=!this.showSurfaces}}}),$U={class:"knot-viewer"},qU=en({__name:"KnotViewer",props:{drawingData:{}},setup(n){const e=n,t=Vb(),i=it(()=>e.drawingData.knots.filter(o=>o.points.length>2).map((o,a)=>({knot:o,id:o.id||(a+1).toString(),points:W1(o,s.value)}))),r=it(()=>{const o=i.value.map(({points:l})=>l).flat();return Y1(o)}),s=it(()=>Z_(e.drawingData.knots,e.drawingData.interFlipIds));return(o,a)=>(nt(),St("div",$U,[Ht(Ge(YL),null,{default:o_(()=>[Ht(Ge(sU)),(nt(!0),St(Xt,null,Rs(i.value,l=>(nt(),ei(kU,{key:l.id,"knot-id":l.id,points:l.points,allSurfaceLoops:r.value,surfaceColor:l.knot.color,showSurfaces:Ge(t).showSurfaces},null,8,["knot-id","points","allSurfaceLoops","surfaceColor","showSurfaces"]))),128)),Ht(Ge(DU),{args:[10.5,10.5],"cell-color":"#82dbc5","cell-size":.6,"cell-thickness":.5,"section-color":"#fbb03b","section-size":2,"section-thickness":1.3,"infinite-grid":!0,"fade-from":0,"fade-distance":12,"fade-strength":1})]),_:1})]))}}),ZU={class:"topbar"},KU={style:{"user-select":"none"}},JU=en({__name:"Topbar",props:{drawingData:{}},emits:["onLoadData"],setup(n,{emit:e}){const t=n,i=e,r=Tt(null),s=Vb(),o=it(()=>{const c=t.drawingData?.knots.map(u=>u.points).flat();return c&&c.length>0});function a(){if(!o.value)return;const c={...t.drawingData,interFlipIds:Array.from(t.drawingData?.interFlipIds||[])},u="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(c)),h=document.createElement("a");h.setAttribute("href",u),h.setAttribute("download","knot_drawing.json"),document.body.appendChild(h),h.click(),h.remove()}function l(c){const u=c.target;if(!u.files||u.files.length===0)return;const h=u.files[0],f=new FileReader;f.onload=d=>{if(d.target?.result)try{const p=JSON.parse(d.target.result);p.interFlipIds&&Array.isArray(p.interFlipIds)&&(p.interFlipIds=new Set(p.interFlipIds)),i("onLoadData",p)}catch(p){console.error("Error parsing JSON:",p)}},f.readAsText(h)}return(c,u)=>(nt(),St("div",ZU,[Zt("button",{class:fl({disabled:!o.value}),onClick:a},"Save",2),Zt("button",{onClick:u[0]||(u[0]=h=>r.value?.click())},"Load"),Zt("input",{type:"file",accept:".json",style:{display:"none"},onChange:l,ref_key:"fileInput",ref:r},null,544),u[3]||(u[3]=Zt("div",null,[fa(" Hold "),Zt("span",{class:"key"},"Shift"),fa(" to move knot as one, "),Zt("span",{class:"key"},"Alt"),fa(" to remove points ")],-1)),u[4]||(u[4]=Zt("div",{class:"spacer",style:{"flex-grow":"1"}},null,-1)),Zt("label",KU,[kM(Zt("input",{type:"checkbox",id:"toggle-surfaces","onUpdate:modelValue":u[1]||(u[1]=h=>Ge(s).showSurfaces=h)},null,512),[[a1,Ge(s).showSurfaces]]),u[2]||(u[2]=fa(" Show Surfaces ",-1))])]))}}),QU=vl(JU,[["__scopeId","data-v-856bb016"]]),eN={class:"app-layout"},tN=en({__name:"App",setup(n){const e=Tt({knots:[{id:"1",points:[],isClosed:!1,color:Hc[0]}],interFlipIds:new Set});function t(i){console.log(i),e.value=i}return(i,r)=>(nt(),St("div",eN,[Ht(QU,{class:"topbar",drawingData:e.value,onOnLoadData:t},null,8,["drawingData"]),Ht(Nw,{knots:e.value.knots,"onUpdate:knots":r[0]||(r[0]=s=>e.value.knots=s),interFlipIds:e.value.interFlipIds,"onUpdate:interFlipIds":r[1]||(r[1]=s=>e.value.interFlipIds=s)},null,8,["knots","interFlipIds"]),(nt(),ei(qU,{drawingData:e.value,key:e.value.knots.map(s=>s.id).join("-")},null,8,["drawingData"]))]))}}),nN=vl(tN,[["__scopeId","data-v-ede7d123"]]),iN=VU();d1(nN).use(iN).mount("#app");
